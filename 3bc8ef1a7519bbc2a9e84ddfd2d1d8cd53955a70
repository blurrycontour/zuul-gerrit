{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2159adc8_793128c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-03-23T20:41:09Z",
      "side": 1,
      "message": "This is an interesting idea. However it won\u0027t match to most of our tenants where we have always a tenant-central ci/integration team that is responsible for what\u0027s going on in the tenant. So we should be able to opt out of this feature.",
      "revId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60d771a6_8f8db1ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 7186
      },
      "writtenOn": "2022-03-24T12:14:14Z",
      "side": 1,
      "message": "I wrote this as the question appeared some time ago on the zuul matrix channel. As I wrote the spec it became clear this approach would be complex if possible at all.\n\nMaybe a better approach would be tooling allowing project maintainers to translate existing ACLs from their code review systems into zuul admin rules. If zuul\u0027s tenant and ACL config is versioned and reviewed, the rules could be checked for approval first.",
      "parentUuid": "2159adc8_793128c9",
      "revId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff119f9a_6c096d55",
        "filename": "doc/source/developer/specs/code-review-ACL-for-admin-API.rst",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-03-23T20:41:09Z",
      "side": 1,
      "message": "We also need to consider what happens for e.g. promote in a larger gate with several projects in the queue.",
      "revId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Workflow=MAX","label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3bc8ef1a7519bbc2a9e84ddfd2d1d8cd53955a70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}