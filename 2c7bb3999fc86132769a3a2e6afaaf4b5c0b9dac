{
  "comments": [
    {
      "key": {
        "uuid": "7faddb67_7d660658",
        "filename": "tests/fixtures/config/authorization/single-tenant/main.yaml",
        "patchSetId": 35
      },
      "lineNbr": 19,
      "author": {
        "id": 2
      },
      "writtenOn": "2019-08-14T11:22:33Z",
      "side": 1,
      "message": "It\u0027s possible I missed this earlier ... but why do we do vehicle.car here instead of:\n\n  - vehicle:\n      car: ecto-1\n\nAsking since the structure is {\u0027vehicle\u0027: {\u0027car\u0027: \u0027ecto-1\u0027}} on the other side.",
      "range": {
        "startLine": 19,
        "startChar": 8,
        "endLine": 19,
        "endChar": 19
      },
      "revId": "2c7bb3999fc86132769a3a2e6afaaf4b5c0b9dac",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_ad5e9a42",
        "filename": "zuul/rpclistener.py",
        "patchSetId": 35
      },
      "lineNbr": 286,
      "author": {
        "id": 3099
      },
      "writtenOn": "2019-08-13T17:29:01Z",
      "side": 1,
      "message": "This seems like an odd pattern (within this code base at least) to control logging. The reason for it is not obvious to me. Is having this debug logging on in the get_admin_tenants case excessive?",
      "range": {
        "startLine": 286,
        "startChar": 45,
        "endLine": 286,
        "endChar": 57
      },
      "revId": "2c7bb3999fc86132769a3a2e6afaaf4b5c0b9dac",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_fd63d63f",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 35
      },
      "lineNbr": 520,
      "author": {
        "id": 2
      },
      "writtenOn": "2019-08-14T11:22:33Z",
      "side": 1,
      "message": "I don\u0027t think we should return html in a method that is otherwise returning json. From an API user perspective that\u0027s often unpleasant. I\u0027d rather see the error_description (or even the whole error) in a json body here, that way CLI tools can render it easily in text, and web tools can render it easily in html.",
      "range": {
        "startLine": 520,
        "startChar": 12,
        "endLine": 520,
        "endChar": 54
      },
      "revId": "2c7bb3999fc86132769a3a2e6afaaf4b5c0b9dac",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}