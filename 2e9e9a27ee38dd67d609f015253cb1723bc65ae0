{
  "comments": [
    {
      "key": {
        "uuid": "6b1bbf1f_6d36f7f9",
        "filename": "tests/unit/test_configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 9311
      },
      "writtenOn": "2021-06-15T16:07:12Z",
      "side": 1,
      "message": "If I understand correctly, strings like `value` are already interned, e.g.\n\n  \u003e\u003e\u003e a \u003d \"value\"\n  \u003e\u003e\u003e b \u003d \"value\"\n  \u003e\u003e\u003e a is b\n  True\n\nPerhaps it would be better to test longer string, like \"a value\"",
      "revId": "2e9e9a27ee38dd67d609f015253cb1723bc65ae0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36477c73_0b047ad8",
        "filename": "tests/unit/test_configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 16068
      },
      "writtenOn": "2021-06-15T17:25:33Z",
      "side": 1,
      "message": "The strings in your example are automatically interned because they follow some rules. One of those rules is that they are compile time constants. Dynamic strings like produced by the yaml parser are not automatically interned. The test case also fails without the explicit intern.",
      "parentUuid": "6b1bbf1f_6d36f7f9",
      "revId": "2e9e9a27ee38dd67d609f015253cb1723bc65ae0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7800f9_5d8f26b8",
        "filename": "tests/unit/test_configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 9311
      },
      "writtenOn": "2021-06-16T11:53:20Z",
      "side": 1,
      "message": "Thanks for the feedback. Would you know why the yaml module does not do that by default?",
      "parentUuid": "36477c73_0b047ad8",
      "revId": "2e9e9a27ee38dd67d609f015253cb1723bc65ae0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bdc174_edab6ff8",
        "filename": "tests/unit/test_configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 16068
      },
      "writtenOn": "2021-06-16T12:13:56Z",
      "side": 1,
      "message": "I don\u0027t know but I guess it\u0027s because pyyaml is for general purpose use and such an optimization only has advantages if there are many equal strings that are read. If that\u0027s not the case intern() imposes a small runtime overhead per string for no benefit. So I think it\u0027s actually correct to not do that without knowing the use case.",
      "parentUuid": "6a7800f9_5d8f26b8",
      "revId": "2e9e9a27ee38dd67d609f015253cb1723bc65ae0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    }
  ]
}