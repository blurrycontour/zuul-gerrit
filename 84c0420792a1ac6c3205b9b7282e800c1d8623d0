{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "522c6a45_d24e3050",
        "filename": "zuul/driver/sql/sqlconnection.py",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-04-24T21:17:07Z",
      "side": 1,
      "message": "Any concern checking a regex against sql queries on every lookup even those we don\u0027t need a timeout for? Mostly concerned that the timeout implementation here checks everything and if it performs poorly everything may suffer.",
      "revId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9eafb306_472cfd96",
        "filename": "zuul/driver/sql/sqlconnection.py",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-04-24T21:29:20Z",
      "side": 1,
      "message": "I tried to make it a simple O(1) regex that\u0027s easy to fail without lookahead/behinds.  timeit says it adds about 80 nanoseconds per query on my workstation.\n\nI don\u0027t love it either, but I explored other options to move this info around in sqlalchemy and didn\u0027t find anything better.",
      "parentUuid": "522c6a45_d24e3050",
      "revId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11b98ff8_db083d05",
        "filename": "zuul/driver/sql/sqlconnection.py",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-04-24T21:17:07Z",
      "side": 1,
      "message": "PostgreSQL docs say SET LOCAL takes effect only until the end of the current transaction. That should prevent this from leaking into other requests to the DB.",
      "range": {
        "startLine": 52,
        "startChar": 24,
        "endLine": 52,
        "endChar": 33
      },
      "revId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "84c0420792a1ac6c3205b9b7282e800c1d8623d0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}