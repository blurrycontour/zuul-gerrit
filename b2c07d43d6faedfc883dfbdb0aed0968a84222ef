{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b91705_e1537cc5",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-03-07T21:50:49Z",
      "side": 1,
      "message": "The purpose of this function appears to be to convert keys from some type to a string and then reenter the converted key and its value into a dict. Why is this necessary?",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 21
      },
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efe65c89_3d853711",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-03-07T21:50:49Z",
      "side": 1,
      "message": "Is it `path + \"/secrets\"` that doesn\u0027t exist or just `path`? I think we don\u0027t have sufficient info here. Maybe better to say that `path + \"/secrets\"` could not be found / does not exist.\n\nLooking at the code I think it is theoretically possible for a project to have an ssh key but not a secrets key. However, that would only be possible in the case of a manually curated zk database? Otherwise zuul should ensure both get created in zk.",
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9960b64_b9bece39",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-03-07T21:50:49Z",
      "side": 1,
      "message": "For any other reviewers the [0] seems to be hardcoded in zuul\u0027s keystorage too. Not sure why we chose to make that a list with one element.",
      "range": {
        "startLine": 42,
        "startChar": 28,
        "endLine": 42,
        "endChar": 31
      },
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5451c0f0_70bf8a31",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-07T23:07:08Z",
      "side": 1,
      "message": "It\u0027s for future support of key rotation.  I would expect this script to iterate through all of them despite there only being one now.",
      "parentUuid": "e9960b64_b9bece39",
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd524461_82fad313",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-07T23:07:08Z",
      "side": 1,
      "message": "Maybe call this \"export-path\" to suggest a connection with export-keys.",
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f765841_2eb1135b",
        "filename": "tools/decrypt_secret.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-07T23:07:08Z",
      "side": 1,
      "message": "It\u0027s not clear what this is supposed to be or how a user should identify it.",
      "revId": "b2c07d43d6faedfc883dfbdb0aed0968a84222ef",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}