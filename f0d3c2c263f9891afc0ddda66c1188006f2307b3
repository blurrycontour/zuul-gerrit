{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "842b7f70_063ac7f9",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-07-16T12:21:53Z",
      "side": 1,
      "message": "Maybe we should extend the `LayoutStateStore` with a cache so we don\u0027t hit ZK every time we check if the local layout is up-to-date.",
      "revId": "f0d3c2c263f9891afc0ddda66c1188006f2307b3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "648adc6f_5f6593fe",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-16T15:01:52Z",
      "side": 1,
      "message": "Good point -- or, since it has a callback, we can probably use that to set an event and only check it if it\u0027s been called.  I\u0027ll do one or the other in a followup.",
      "parentUuid": "842b7f70_063ac7f9",
      "revId": "f0d3c2c263f9891afc0ddda66c1188006f2307b3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f0d3c2c263f9891afc0ddda66c1188006f2307b3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f0d3c2c263f9891afc0ddda66c1188006f2307b3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f0d3c2c263f9891afc0ddda66c1188006f2307b3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}