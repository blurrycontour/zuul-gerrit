{
  "comments": [
    {
      "key": {
        "uuid": "e3607f2d_0d08dc94",
        "filename": "tests/base.py",
        "patchSetId": 3
      },
      "lineNbr": 5175,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-09-09T18:52:20Z",
      "side": 1,
      "message": "Minor nit. It is a bit confusing that the zk_nodepool object has the cache_state and the fake_nodepool has the zk_state. From what I can see this is correct, but maybe we can make this more clear with improved naming?",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b6bcad_f5ab4649",
        "filename": "tests/base.py",
        "patchSetId": 3
      },
      "lineNbr": 5175,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-09-09T20:36:57Z",
      "side": 1,
      "message": "I agree on it being confusing; I did try to name it in a helpful way.  Here\u0027s my thinking:\n\n* cache_state: the values in the cache that we\u0027re examining; we\u0027re waiting until this thing is in sync with zk\n* zk_state: the values as they are in zk\n\nWhen cache_state \u003d\u003d zk_state then the cache is in sync.  I\u0027m open to alternatives :)",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083c8845_2f54cd9f",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 27952
      },
      "writtenOn": "2021-09-09T06:00:37Z",
      "side": 1,
      "message": "Just for clarification: We need those additional safe guards (like the type check) as the node could haven been requested by a different system and thus the user_data field might be missing completely or might have a different format, right? Maybe we could add a short comment about that.",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5c423ca_dde77345",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-09-09T15:46:08Z",
      "side": 1,
      "message": "Correct.  The other system could be Nodepool itself.",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbea1eda_6838a6f0",
        "filename": "zuul/zk/nodepool.py",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-09-09T18:52:20Z",
      "side": 1,
      "message": "Reading the code below could we skip the construction of the new Node object by calling getNode() instead? Or do we want to force a cache bypass for this scenario?",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d08801_d98e03f8",
        "filename": "zuul/zk/nodepool.py",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-09-09T20:36:57Z",
      "side": 1,
      "message": "I think since we\u0027re doing a synchronous write, this is a good time to do this.  We could use a cached value, but we\u0027d need to do a stat check to make sure we didn\u0027t have a concurrent mod.",
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8ad7cff_10df6e53",
        "filename": "zuul/zk/nodepool.py",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-09-09T18:52:20Z",
      "side": 1,
      "message": "Could also just use Node here now that the import has changed.",
      "range": {
        "startLine": 297,
        "startChar": 23,
        "endLine": 297,
        "endChar": 34
      },
      "revId": "f8d762de08f6d7102d0233fa9573c46d20aaf5d2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    }
  ]
}