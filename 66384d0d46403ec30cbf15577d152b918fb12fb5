{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0465dd01_6a9c0891",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T21:48:06Z",
      "side": 1,
      "message": "I do think this is reducing our security posture, the restriction imposed on untrusted jobs may not be perfect, but they provide an extra layer to prevent remote code execution on the executor instances.\n\nIf I understand correctly, this spec has a significant impact for operators, thus if we can improve the compartmentalizations along the way that may be worth the effort. For example, it seems like nodeless job may cause a \"noisy neighbor\" effect resulting in a negative impact.\n\nThat being said, I am in favor of this spec because the benefits outweigh the risk. \n",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "478dccf8_7fd6d6f6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 9061
      },
      "writtenOn": "2022-03-17T18:13:43Z",
      "side": 1,
      "message": "This is not exactly accurate, the upstream end of life for Ansible 2.9 is currently planned for May 2022: https://groups.google.com/g/ansible-announce/c/kegIH5_okmg/",
      "range": {
        "startLine": 29,
        "startChar": 61,
        "endLine": 30,
        "endChar": 18
      },
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b90b6922_187e56c6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T18:17:13Z",
      "side": 1,
      "message": "Mea culpa!",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "862e2204_05032f99",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T17:48:10Z",
      "side": 1,
      "message": "Is it really a hindrance for lightweight jobs, do we have example?",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bada3af5_6bbea3d6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T18:11:37Z",
      "side": 1,
      "message": "As a quick example: a git mirroring job that just needs to \"git push\" from the executor.  I\u0027m sure there are better ones, but most zero-node jobs that actually do anything need to have trusted playbooks at this point.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8ddeec8_d004f6f4",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T17:48:10Z",
      "side": 1,
      "message": "Should we consider leveraging execution environment https://docs.ansible.com/automation-controller/latest/html/userguide/execution_environments.html?",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9b2aaa5_0ff04980",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T18:11:37Z",
      "side": 1,
      "message": "That could be an interesting way to use Ansible within Zuul, though since it\u0027s essentially building and running a container it\u0027s sort of parallel to what we\u0027re doing with bwrap.  We might even consider it a replacement for bwrap at some point, but I think we can defer that for now since I think fundamentally the security issues are the same.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60fc1edb_95ea4f9d",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 9061
      },
      "writtenOn": "2022-03-17T18:13:43Z",
      "side": 1,
      "message": "Execution environments are container images built with ansible-builder (https://github.com/ansible/ansible-builder) and they\u0027re meant to contain particular versions of ansible-core, ansible-runner as well as Ansible collections necessary for the users\u0027 playbooks.\n\nIf you\u0027re curious to see what it looks like in practice, I have a simple example here which adds the ansible and ara packages on top of a \"base\" execution environment: https://github.com/ansible-community/images/tree/main/execution-environments\n\nansible-navigator is a TUI that, amongst other things, knows about execution environments and can run playbooks with them.",
      "parentUuid": "d8ddeec8_d004f6f4",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d038057c_9bb617f6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 9061
      },
      "writtenOn": "2022-03-17T18:13:43Z",
      "side": 1,
      "message": "FWIW: Ansible 5.5.0 was released last week -- the current pace of release for the \u0027ansible\u0027 package is a minor release every 3 weeks and a major release every 6 months (which aligns with the 6 months cycle of ansible-core).\n\nAnsible 6.0.0 is currently expected in May 2022 which aligns with the new release of ansible-core planned at the same time, 2.13.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97c6b9bf_639beb7d",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T17:48:10Z",
      "side": 1,
      "message": "I wonder if we could implement the restriction using static analysis instead. Before running an unstrusted playbook, perhaps we could manually inspect its content to iterate over its tasks and prevent forbidden usage? When a task is not iterable, for example if it includes a dynamically generated tasks, then we could fail by default?",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c64e761_abe22e0a",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T18:11:37Z",
      "side": 1,
      "message": "That seems like a distinct possibility.  We might miss something, but we miss things with our current system too.\n\nI worry that we might spend a long time figuring out all the possible ways of including tasks.  :)",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86179b5d_1e7c01d6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T18:27:39Z",
      "side": 1,
      "message": "Are the only ways to include tasks: roles, include, include_tasks, import_tasks and  import_playbooks ?\n\nI think the main issue is implementing the semantic of jinja variable precedences, but that can be done.",
      "parentUuid": "6c64e761_abe22e0a",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c97f7c8a_67344dcf",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-03-18T13:01:28Z",
      "side": 1,
      "message": "I don\u0027t think this is feasible for us zuul maintainers. Such a static analysis sounds like it would require an entire project with several people maintaining this. To me this sounds like even more work like we have to do with the current approach.",
      "parentUuid": "86179b5d_1e7c01d6",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66d0ea9d_d2c60dc0",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-18T18:46:06Z",
      "side": 1,
      "message": "Perhaps this does not have to be implemented within zuul, and maybe that could be useful to others. For example, the `--list-task` argument of ansible-playbook seems promising, but it might need some tweak to be useful here.\n\nIf such a static analysis tool existed, then it seems like we would be able to use ansible without modification, while preserving the restriction for untrusted playbook.",
      "parentUuid": "c97f7c8a_67344dcf",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23d15371_736e8ee4",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-21T22:01:44Z",
      "side": 1,
      "message": "I wasn\u0027t aware of list-tasks, it looks interesting, but after a quick check, it looks like it doesn\u0027t recurse into include_role.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad5a897_1771bf03",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T17:48:10Z",
      "side": 1,
      "message": "Perhaps we should consider CPU and memory resources?",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29e45d92_0c0b45b6",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T18:11:37Z",
      "side": 1,
      "message": "Yes; the ability to run more zero-node jobs will probably increase CPU and memory pressure.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c72165f_18d7e6bc",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-03-17T21:48:06Z",
      "side": 1,
      "message": "What about resources exhaustion, is there something we should do to prevent one job to hog all the resources?",
      "parentUuid": "29e45d92_0c0b45b6",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "017a236b_9b60c544",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-03-17T17:04:36Z",
      "side": 1,
      "message": "Maybe we can note that e.g. the ansible uri module is already now available for local execution so everything that can be done with the uri module is already possible without this change.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19ba2061_f5577caa",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-03-17T17:23:30Z",
      "side": 1,
      "message": "Good point.  This is an excellent example of how we may think we are more protected than we really are.",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a9566da_7f8db4de",
        "filename": "doc/source/developer/specs/unrestricted-ansible.rst",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-03-17T17:04:36Z",
      "side": 1,
      "message": "This is already possible via the uri module (this is unrestricted).",
      "revId": "66384d0d46403ec30cbf15577d152b918fb12fb5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}