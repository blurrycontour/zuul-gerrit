{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3fa01553_633baeab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "Some minor things inline. I like the spec on the whole. The way the problems are described at the beginning leads the reader to the solution which is nice.\n\nOne thing I do wonder about is if we need to add more warning signs around using these features? Maybe something to consider after the spec is implemented, but the complexity described in this document is a good indication for why this is complicated and humans have a hard time with complexity. I worry that we\u0027ll continue to find edge cases where people are surprised. This refactor does seem like a good place to tackle those problems from though.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "105d599b_644abcc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:39:10Z",
      "side": 1,
      "message": "Something that just occurred to me and consider this brainstorming and not an endorsement:\n\nOne feature that some other CI systems support is the idea of batching changes automatically to conserve resources. This has the downsides of losing bisect-ability, but may be useful to some users. I think this spec\u0027s treatment of queue items potentially makes that possible with a new pipeline manager. One that collects events and acts on them on some time period creating a zuul specific bundele not represented in the code review system. I don\u0027t think we need to solve that here or ever if the need doesn\u0027t arise but it is cool that I think this spec makes that much easier to implement.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff45a278_c8f60289",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "Any idea what the cost of a migration for potentially hundreds of thousands/millions new zuul_buildset_ref and zuul_ref records is? The tables shouldn\u0027t be huge and we aren\u0027t converting data within existing tables (just adding columns and row content to existing tables) so this is probably fine?",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18fc3b5a_70beda7f",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "I like this potential future as we could reduce the double accounting between provides/requires and job order within a buildset.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6eb54a4_0c977d3b",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "Small nit: I think this algorithm can be sped up slightly if we handle the special case where num changes on on the item \u003d\u003d 1. We don\u0027t need to run this step.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d88191be_53c4aa01",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "We will need to carry enough of both models in order to convert existing queue items from one to the other though. Though that is likely to be much simpler than having two largely separate pipeline processing behaviors.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f1f72b_3992835b",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 309,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "We would restart running jobs for all of the changes in the cycle ahead of the new change right? That might be worth calling out?",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "974b3e60_784eb9c2",
        "filename": "doc/source/developer/specs/circular-dependencies-refactor.rst",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-09-27T18:33:12Z",
      "side": 1,
      "message": "Any concern this makes the db less navigable/debuggable? We could use something like jobname/uuid or some other more unique key if so.",
      "revId": "30d579f8da4ceedfe8f454f53b362d01606f5589",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}