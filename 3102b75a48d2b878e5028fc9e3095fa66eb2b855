{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c595f23e_5c2552c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-06T22:15:42Z",
      "side": 1,
      "message": "Couple of minor things inline. I\u0027m happy for this to merge as is though.",
      "revId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2884384_98575b93",
        "filename": "zuul/executor/common.py",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-06T22:15:42Z",
      "side": 1,
      "message": "For the transition period we need to write data to both locations I guess? We should be careful we don\u0027t let this transition cleanup sit outstanding for a long time otherwise we\u0027ll be using strictly more data when the goal is to reduce.",
      "revId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9933a29_ea996fea",
        "filename": "zuul/executor/common.py",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-07T00:52:19Z",
      "side": 1,
      "message": "Yes, though either the code above or below should be empty/null, so it\u0027s just a handful of bytes.  We won\u0027t be writing both for the same queue item.",
      "parentUuid": "f2884384_98575b93",
      "revId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5688384_976072d7",
        "filename": "zuul/model.py",
        "patchSetId": 2
      },
      "lineNbr": 4261,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-06T22:15:42Z",
      "side": 1,
      "message": "Nit, it seems that the looking in the list of values for the state_keys dict is the primary operation we perform on this data structure. It might be slightly more efficient to store the data with the blob key as the dict key then membership lookups can be done with the hash lookup rather than a list scan.\n\nReturning values() vs keys() should be roughly equivalent so the improvement is minor.",
      "revId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adbdf334_1fbeeb38",
        "filename": "zuul/model.py",
        "patchSetId": 2
      },
      "lineNbr": 4261,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-07T00:52:19Z",
      "side": 1,
      "message": "The main reason I went with this is the behavior on line 4284, to guarantee that we only have one entry for a given project.  So I think if we switched the hash direction here, we\u0027d probably need to switch that two, which balances things out.",
      "parentUuid": "c5688384_976072d7",
      "revId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3102b75a48d2b878e5028fc9e3095fa66eb2b855",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}