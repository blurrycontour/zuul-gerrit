{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_84dbad78",
        "filename": "web/src/api.js",
        "patchSetId": 21
      },
      "lineNbr": 133,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-19T21:18:22Z",
      "side": 1,
      "message": "This causes the current web UI to break when applied to a non-upgraded zuul-web service.  We try to avoid that by making sure the web ui is backwards compatible back to at least the previous released version, since it\u0027s difficult to upgrade both at the same time.\n\nPerhaps we should just have the default be to show all builds, and then add an optional filter to restrict to final builds?  Not only would that be easier here, but maybe it\u0027s better to expose retried builds in the list so they gain visibility?",
      "revId": "bcd39128652045bcc1e77029ada7be310020914e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_c43f6582",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 21
      },
      "lineNbr": 928,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-19T21:21:56Z",
      "side": 1,
      "message": "I also just realized we\u0027ve been focusing on two different areas of the API.  You\u0027ve been most concerned about the /api/builds endpoint, and I\u0027ve been thinking of the buildsets endpoint.  We should probably handle both.  This is where I think we should either add a \u0027retry_builds\u0027 (or \u0027retried_builds\u0027) for parity with the mqtt reporter.  Or we could leave this as-is and return all the builds, just with the final flag included and set to false.  But if we do that, we should probably do the same for the mqtt reporter.",
      "revId": "bcd39128652045bcc1e77029ada7be310020914e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}