{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb610176_90917a9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-01-12T17:02:46Z",
      "side": 1,
      "message": "base_sha is actually fairly important.  Without it we are unable to correctly calculate the set of changed files.  The difference is and will be observable to users who will not understand why jobs they expect to run are not running, or the other way around.\n\nWhat are the options for waiting until gitlab\u0027s async work is completed?",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a68fea7_0212d603",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 6889
      },
      "writtenOn": "2023-01-12T17:22:59Z",
      "side": 1,
      "message": "Internally Zuul uses the merger\u0027s fileschanges task to compute the files diff between the PR Head and the target branch HEAD if base_sha is not provided (None). Thus the fix in the parent change. This is simulated in the tests (the additional addCommit) and validated on a test instance connected to gitlab.com.\n\nAn other option I\u0027ve proposed but then abandonned for this one was https://review.opendev.org/c/zuul/zuul/+/867804/",
      "parentUuid": "bb610176_90917a9e",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9715b75_608d3163",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-01-12T17:36:00Z",
      "side": 1,
      "message": "I understand how it works, my point was that the fallback is only an approximation.  It will not return the correct set of files if the target branch has diverged from when the MR was originally written (and that happens all the time).  It is very frequently wrong enough that users notice and complain.  See 79b6252370568926e69610f752f2c2618a557341 for more information.\n\nI\u0027m intrigued by your other change, that approach would seem to let us continue to use the more accurate base_sha.  Were there problems with that?",
      "parentUuid": "bb610176_90917a9e",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c34ce7b0_78761120",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 6889
      },
      "writtenOn": "2023-01-12T17:55:12Z",
      "side": 1,
      "message": "\u003e I understand how it works, my point was that the fallback is only an approximation.  It will not return the correct set of files if the target branch has diverged from when the MR was originally written (and that happens all the time).  It is very frequently wrong enough that users notice and complain.  See 79b6252370568926e69610f752f2c2618a557341 for more information.\n\nOk, yes I understand what could the issue and why relying on the code review provider to give the base_sha is better.\n\n\u003e I\u0027m intrigued by your other change, that approach would seem to let us continue to use the more accurate base_sha.  Were there problems with that?\n\nYes exactly. No, it seems the change will work well: gitlab\u0027s devs confirmed that the update event is only triggered after diff_refs is updated (and accurate) and the issue (diff_refs at None) only happens at MR creation. So yes if you think we should go with this other change I\u0027m fine as well. So I\u0027ve restored it.",
      "parentUuid": "b9715b75_608d3163",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85be92ec_fbe4183c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-01-12T18:18:03Z",
      "side": 1,
      "message": "Thanks, I think I like the other change better even though it\u0027s more complex.  Let\u0027s focus there for now.",
      "parentUuid": "b9715b75_608d3163",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e96d07d_872de3b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6889
      },
      "writtenOn": "2023-01-11T18:59:21Z",
      "side": 1,
      "message": "recheck",
      "revId": "affbc1c87a7708367fb494a6895cd4a2151a89b9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": []
}