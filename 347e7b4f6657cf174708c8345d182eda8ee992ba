{
  "comments": [
    {
      "key": {
        "uuid": "1a4dcd0f_31bfd4ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-08-17T03:20:23Z",
      "side": 1,
      "message": "Why isn\u0027t this a long-term solution?\n\nDo you think we should fix the cases where a null project isn\u0027t handled correctly? If so, why not do that now instead of this change?",
      "revId": "347e7b4f6657cf174708c8345d182eda8ee992ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4dcd0f_19419a39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 13431
      },
      "writtenOn": "2015-08-17T07:55:10Z",
      "side": 1,
      "message": "Forgive me for this ambiguous sentence.\nI meant the solution of defining such projects in layout.yaml file, as they occur in gerrit, which is hardly a solution.\n\nAnd I see no other way to dynamically handle null project in dependencies, apart from defining such projects.\n\nShould I rewrite the sentence?",
      "parentUuid": "1a4dcd0f_31bfd4ab",
      "revId": "347e7b4f6657cf174708c8345d182eda8ee992ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4dcd0f_f5f02aff",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-08-06T11:24:09Z",
      "side": 1,
      "message": "This will never clean up removed projects from zuul\u0027s memory.\n\nYet unknown projects (in getProject) are added. Is this necessary?",
      "revId": "347e7b4f6657cf174708c8345d182eda8ee992ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4dcd0f_c0f76989",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 13431
      },
      "writtenOn": "2015-08-10T11:55:00Z",
      "side": 1,
      "message": "The ones removed from layout - no, they won\u0027t be removed. Precisely, they will be replaced with new Project() instances. What problem do you see here? Memory leakage? But consider how any project is added, ultimately: in gerrit. Zuul watches gerrit events stream. Layout is just a filter. This change makes this filter to restrict only possible head changes projects, but not the dependencies.\n\nItems will stay in queue, like they did before, only their builds won\u0027t be cancelled.\n\nSo answer is: as long as a project occurs in gerrit stream, \n\nProjects may appear in the layout by 2 ways: initially defined in layout config, and dynamically added as dependencies of changes to defined projects. Total set of layout projects cannot exceed the total set of gerrit projects, but that is hardly possible.",
      "parentUuid": "1a4dcd0f_f5f02aff",
      "revId": "347e7b4f6657cf174708c8345d182eda8ee992ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4dcd0f_137e89ae",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-08-10T12:01:49Z",
      "side": 1,
      "message": "I was confused and didn\u0027t notice that the layout object is reconstructed on reconfigure and therefore the project list is cleaned up by the GC.",
      "parentUuid": "1a4dcd0f_c0f76989",
      "revId": "347e7b4f6657cf174708c8345d182eda8ee992ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}