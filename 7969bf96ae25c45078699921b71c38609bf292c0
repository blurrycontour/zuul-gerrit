{
  "comments": [
    {
      "key": {
        "uuid": "3f79a3b5_78a62412",
        "filename": "zuul/configloader.py",
        "patchSetId": 5
      },
      "lineNbr": 1348,
      "author": {
        "id": 3099
      },
      "writtenOn": "2018-08-31T14:55:01Z",
      "side": 1,
      "message": "It\u0027s possible for this to be None. Do we need a check for that here?",
      "range": {
        "startLine": 1348,
        "startChar": 35,
        "endLine": 1348,
        "endChar": 50
      },
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_f866b4bb",
        "filename": "zuul/configloader.py",
        "patchSetId": 5
      },
      "lineNbr": 1348,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-31T15:00:14Z",
      "side": 1,
      "message": "self.keystorage should always be set in normal use.  The only time it isn\u0027t set is for the command-line syntax validation, which doesn\u0027t go this far in loading.  If we get to this point, we need self.keystorage to be set, so there\u0027s nothing we\u0027d want to do here except bomb out anyway, so I think letting the normal attribute failure happen in case of a coding error should be fine.",
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_5feb0a77",
        "filename": "zuul/lib/keystorage.py",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 4146
      },
      "writtenOn": "2018-08-31T17:36:20Z",
      "side": 1,
      "message": "In self.verify() we only return False if the version file does not exist. Otherwise we return true if we don\u0027t need to upgrade or raise an exception if the file exists and the written version doesn\u0027t match the current version in zuul.\n\nAll this to say I think you either need to catch the exception here and continue to perform the upgrade (versions don\u0027t match), or better yet return False if the versions don\u0027t match in verify() and save the exception for major issues?\n\nThis works currently beause zuul is going from version 0 without a file present to version 1 with a file present. But this will be buggy going from version 1 to 2 I Think.",
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_fa71c478",
        "filename": "zuul/lib/keystorage.py",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-31T17:49:09Z",
      "side": 1,
      "message": "Done in followup:  https://review.openstack.org/599043",
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_f9e77a45",
        "filename": "zuul/lib/keystorage.py",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 16068
      },
      "writtenOn": "2018-09-03T11:23:26Z",
      "side": 1,
      "message": "I think this is a bug as self.parent is neither a getter nor a callable. We probably should just do:\n\n  if self.parent:\n    self.parent.verifyAndUpgrade(root)\n\nSince this case cannot be hit in version 1 I think fixing this in a followup is fine.",
      "range": {
        "startLine": 47,
        "startChar": 21,
        "endLine": 47,
        "endChar": 34
      },
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_1a35a0db",
        "filename": "zuul/lib/keystorage.py",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 4146
      },
      "writtenOn": "2018-08-31T17:36:20Z",
      "side": 1,
      "message": "Not a -1, consider another self.verify() here to confirm things are good before we pass control back to our parent which will potentially do a subsequent migration.",
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_1a6da098",
        "filename": "zuul/lib/keystorage.py",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-31T17:49:09Z",
      "side": 1,
      "message": "Also done in followup.",
      "revId": "7969bf96ae25c45078699921b71c38609bf292c0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}