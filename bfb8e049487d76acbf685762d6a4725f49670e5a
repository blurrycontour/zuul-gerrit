{
  "comments": [
    {
      "key": {
        "uuid": "da86d52c_e3aac083",
        "filename": "zuul/model.py",
        "patchSetId": 7
      },
      "lineNbr": 363,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-02-05T17:32:57Z",
      "side": 1,
      "message": "Items are created with pipeline and queue attributes. These two lines should be redundant.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_e40e46e4",
        "filename": "zuul/model.py",
        "patchSetId": 7
      },
      "lineNbr": 363,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T17:59:06Z",
      "side": 1,
      "message": "Yeah, it\u0027s sort of a safety.  If an item is reenqueued, it is certain to have the correct values.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_04127a08",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 649,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T17:59:06Z",
      "side": 1,
      "message": "This line, and the line above, may now be a bug.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_38ea42ac",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 649,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T18:33:28Z",
      "side": 1,
      "message": "It is not; see below.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_de59138f",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1124,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-02-05T17:32:57Z",
      "side": 1,
      "message": "According to grep _doReconfigureEvent is the only place that calls this function and last_head.queue will always be None due to line 649 of this change. Which should mean we always hit the else below, log an error then return False?",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_24fcdeb7",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1124,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T17:59:06Z",
      "side": 1,
      "message": "Yes, line 649 may be a bug, especially in light of the protection afforded by line 363.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_58d456eb",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1124,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T18:33:28Z",
      "side": 1,
      "message": "Here\u0027s what happens:\n\n* the head change calls this with (ChangeA, ChangeA) that is to say it is the last head itself.  ChangeA.queue is None, so it calls getChangeQueue and gets a queue.  enqueueItem sets ChangeA.queue to be QueueA (due to line 363).\n\n* the next change calls this with (ChangeB, ChangeA) because ChangeA is still the last head.  ChangeA.queue is QueueA due to the previous call, so the first part of the conditional applies and ChangeB.queue is set to QueueA.\n\nI believe that is all as desired and 649 is not a bug.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_7e002702",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1357,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-02-05T17:32:57Z",
      "side": 1,
      "message": "Assuming the previous if block was executed we would dequeue the non live item, then if that item had no items ahead (it shouldn\u0027t if it is not live) we would check this block, all jobs should be complete because there are no jobs then we would try reporting this item.\n\nI don\u0027t think that is correct behavior. Non live items should not be reported right?",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_44f712d3",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1357,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T17:59:06Z",
      "side": 1,
      "message": "They should not be.  I will that to the test.",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_78cf5a56",
        "filename": "zuul/scheduler.py",
        "patchSetId": 7
      },
      "lineNbr": 1357,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-02-05T18:33:28Z",
      "side": 1,
      "message": "Oh, it was already in the test.  The reason the next block does not execute is that areAllJobsComplete is false (since they never start).  We could still add \"and item.live\" to this to be more explicit (and in case we change non-live items to not have jobs (which is sensible)).",
      "revId": "bfb8e049487d76acbf685762d6a4725f49670e5a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}