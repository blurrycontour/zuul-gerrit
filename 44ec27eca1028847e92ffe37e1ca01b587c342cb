{
  "comments": [
    {
      "key": {
        "uuid": "ba0121b8_85b9c8ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 6547
      },
      "writtenOn": "2016-03-31T18:22:12Z",
      "side": 1,
      "message": "This is liberty",
      "range": {
        "startLine": 24,
        "startChar": 32,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba0121b8_45c4d03e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 6547
      },
      "writtenOn": "2016-03-31T18:22:12Z",
      "side": 1,
      "message": "I expect this to be liberty instead of kilo as well.",
      "range": {
        "startLine": 29,
        "startChar": 27,
        "endLine": 29,
        "endChar": 44
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba0121b8_eb716b0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 12612
      },
      "writtenOn": "2016-03-31T22:58:05Z",
      "side": 1,
      "message": "Woops, that\u0027s what I get for not doing a literal copy-paste.\n\nI\u0027ll fix that up in the next commit.",
      "parentUuid": "ba0121b8_45c4d03e",
      "range": {
        "startLine": 29,
        "startChar": 27,
        "endLine": 29,
        "endChar": 44
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1b2928_90c42c41",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 7069
      },
      "writtenOn": "2016-04-11T03:17:55Z",
      "side": 1,
      "message": "Why should we fail in the future and not now (or vice versa).",
      "range": {
        "startLine": 172,
        "startChar": 46,
        "endLine": 172,
        "endChar": 69
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1b2928_4b3f8525",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 12612
      },
      "writtenOn": "2016-04-11T06:18:20Z",
      "side": 1,
      "message": "I didn\u0027t implement any failure logic as it\u0027s contrary to how zuul_cloner is currently designed.  But to leave the topic momentary, I do think that should be tightened up across all clones instead of falling back till we hit master.\n\nThen again, I do think it would make since to implement the failure logic for this addition as when the code under indicated_revision is hit, we have received explicit instructions for what the user is expecting, we would be completely right to fail hard if we cannot check it out.\n\nWhat do think, should I go ahead and implement failing out?",
      "parentUuid": "7a1b2928_90c42c41",
      "range": {
        "startLine": 172,
        "startChar": 46,
        "endLine": 172,
        "endChar": 69
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1b2928_708697ba",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 7069
      },
      "writtenOn": "2016-04-11T13:41:52Z",
      "side": 1,
      "message": "So the rest of zuul cloner is opportunistic. If you look at the steps taken (above in the section you modified) zuul tries in preference for ways of getting a commit.\n\nThe reason it\u0027s opportunistic is that a project \"may\" have a certain ref. If it doesn\u0027t, that\u0027s actually expected and in which case we want to make sure we have the most correct branch.\n\nIn this case of specifying very precise commit sha\u0027s, it may be more correct to bail on a particular project. If the intended use is the post queue this is likely desirable.",
      "parentUuid": "7a1b2928_4b3f8525",
      "range": {
        "startLine": 172,
        "startChar": 46,
        "endLine": 172,
        "endChar": 69
      },
      "revId": "44ec27eca1028847e92ffe37e1ca01b587c342cb",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}