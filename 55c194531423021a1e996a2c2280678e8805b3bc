{
  "comments": [
    {
      "key": {
        "uuid": "ed12537a_51dfd8e1",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 851,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-06-01T17:06:31Z",
      "side": 1,
      "message": "Is the layout_uuid ever expected to be false? if so would this be better as:\n\n  if not item.layout_uuid:\n      return None\n\n  self.log.debug(\"...\")\n  layout \u003d self._getLayout(item)\n  ...",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f68220_bd042514",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 851,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-06-01T17:14:37Z",
      "side": 1,
      "message": "Looking at the child change has helped me understand this better. I think we should consider checking for a None item.layout_uuid above so that we don\u0027t somehow accidentally start caching a layout for None (and then sharing that between changes).\n\nThen I think what you wanted the condition here to be is if not item.layout_uuid so that we log the recalculation only when there isn\u0027t already something cached. However, I think that since we\u0027ve fallen through to here that is already the case and we can just drop this condition entirely.",
      "parentUuid": "ed12537a_51dfd8e1",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02002dbc_264724ed",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 851,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-06-01T18:27:14Z",
      "side": 1,
      "message": "See below for my thoughts on protecting from a null key.\n\nRegarding the conditional log line, I think what this means is: there exists a theoretical layout for this item, but we don\u0027t have it.  We need to recreate it.  I think this can only happen in a multi-scheduler situation.  Because in a single scheduler situation, the only way for an item to have a layout uuid assigned to it is to get it from a layout.  Meanwhile, if item.layout_uuid is None, then that means no one has ever made a layout for this item, so it needs to be created (\"calculated\") for the first time.",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6a61404_6c8a2214",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 851,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-06-01T21:53:37Z",
      "side": 1,
      "message": "I was confused about the reason for logging here only when we have a cache miss when we expect a hit rather than a miss due to not being seen before. Sounds like this is useful for understanding why layouts are calculated at different times in the logs.",
      "parentUuid": "02002dbc_264724ed",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc3a1409_1abf2e54",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 851,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-06-02T13:37:13Z",
      "side": 1,
      "message": "Yes, this log line will become useful when we have multiple schedulers running.",
      "parentUuid": "c6a61404_6c8a2214",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8869bee4_ef9b38cb",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 855,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-06-01T18:27:14Z",
      "side": 1,
      "message": "If the goal is to be defensive about caching a layout with a null key, it seems like this would be the best place to do it:\n        if layout.uuid is None: raise Exception\nBecause otherwise, item.layout_uuid is expected to be either a string or None within this method, so I don\u0027t know that it makes sense to test that anywhere else.",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54c1366e_b731160c",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 855,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-06-01T21:53:37Z",
      "side": 1,
      "message": "I agree this would be the place to address the None key concern. That said after some discussion on IRC, corvus pointed out this is the only place we write to the cache. We also always have a uuid on a layout. Below we update item.layout_uuid from the layout so it should always be valid and not None. This should be fine as is.",
      "parentUuid": "8869bee4_ef9b38cb",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89bfcfc1_135d9ae3",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 5
      },
      "lineNbr": 1081,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-06-01T17:06:31Z",
      "side": 1,
      "message": "My above question is related to this condition as well. It seems to be the opposite of what we attempt above.",
      "revId": "55c194531423021a1e996a2c2280678e8805b3bc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    }
  ]
}