{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2837aa88_492cc65e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-18T12:24:01Z",
      "side": 1,
      "message": "fixed linting errors",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a99abad2_2fda83c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-18T13:53:52Z",
      "side": 1,
      "message": "recheck\n\nthe issue in py38 seems persistent despite being seemingly unrelated; new issue in py311 with test_live_reconfiguration_trigger_sequence\n\nrunning last recheck to verify the luck",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ddef36b_8c2f4cc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-18T15:21:53Z",
      "side": 1,
      "message": "both issues stem from flakiness it seems",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c25ca70_630abdec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 6159
      },
      "writtenOn": "2023-07-19T07:00:41Z",
      "side": 1,
      "message": "Thanks for the contributions to the patch, Radoslaw. Next time maybe just comment as it\u0027s quite confusing to have ones PR modified by others ðŸ˜‚",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ad9c895_5d15cb4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-19T07:29:33Z",
      "side": 1,
      "message": "Hi Flavio. You are welcome and I am sorry for confusing you. That said, please bear in mind this practice is quite common in this community (compared to elsewhere) as it favours collaboration on code. I, personally, try to comment more than amend (and I think this is the general trend). Each time, I analyse quickly whether it is easier to explain in comment or just do it. I amend also when I see (or guess) a fix to a failing job and I know the original committer is away - to help improve the development velocity (as failing jobs halt the process).",
      "parentUuid": "9c25ca70_630abdec",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5d9189e_672df975",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 9311
      },
      "writtenOn": "2023-07-19T13:40:27Z",
      "side": 1,
      "message": "Even though the site-preview url changed, I think that is correct with regards to the PUBLIC_URL setting.",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "632fca73_71596ea5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-07-19T16:35:45Z",
      "side": 1,
      "message": "I\u0027m not sure I agree with what you say RadosÅ‚aw.  You may be thinking about behavior in other Open Infrastructure projects, but the Zuul project has its own norms.  Development velocity is not the paramount concern (especially since we know how to use dependencies).  Sometimes a trivial fix can be okay, but in general, it\u0027s best to comment, or get permission to modify someone else\u0027s change.\n\nThe standard should be \"is the fix easy and obvious\" not \"can I do it faster than explaining\".  What was missing from the process in this change is, in fact, the explanation.",
      "parentUuid": "2ad9c895_5d15cb4a",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07bee2d9_f227b7c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-07-19T16:54:22Z",
      "side": 1,
      "message": "If you do find that it\u0027s difficult to explain something without changing code, one way of doing that without taking over someone else\u0027s patch is to offer a followup patch where you can make the change and include the explanation in the commit message and/or comments.  We might merge them in quick succession, or squash them.",
      "parentUuid": "632fca73_71596ea5",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b61ffa7_74e814ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-19T16:56:54Z",
      "side": 1,
      "message": "All right, I can change my behaviour in Zuul, sure (sadly, Gerrit cannot remind me, meh). As you have guessed, I meant the larger ecosystem. And yes, I seem to have skimmed over the explanation.\nReplying to this and your other comment... PS11 over PS9 is: simpler (this is what I managed to mention, heh) and relying on standard behaviour of the URL prototype so that we avoid the previous (PS9) workaround which was not covering more general cases such as \"./whatever\".",
      "parentUuid": "632fca73_71596ea5",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ef9e5a6_1e164336",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-07-19T17:14:08Z",
      "side": 1,
      "message": "Okay, so that was just an extra edge case that\u0027s not related to the preview site?",
      "parentUuid": "7b61ffa7_74e814ef",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1c4efd1_7586e393",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 30491
      },
      "writtenOn": "2023-07-19T17:17:04Z",
      "side": 1,
      "message": "Yeah, like a family of edge cases instead of a single edge case. Now, this seems to be realising its job while relying on the standard handling of URLs (and I don\u0027t see how it could be made shorter without killing its readability).",
      "parentUuid": "6ef9e5a6_1e164336",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49edec6e_b4f8a4a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 6159
      },
      "writtenOn": "2023-07-20T12:44:11Z",
      "side": 1,
      "message": "Ah, nvm, I just read the documentation and it does resolve `\u0027\u0027` to `/`\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/URL/pathname",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fe35615_16f5b414",
        "filename": "web/src/api.js",
        "patchSetId": 11
      },
      "lineNbr": 41,
      "author": {
        "id": 6159
      },
      "writtenOn": "2023-07-20T12:38:50Z",
      "side": 1,
      "message": "The current version of this function (and previous patchsets too) made sure that the returned URL would always end with a `/`, which is something I believe Zuul expects.\n\nThis implementation (unless I am missing something) doesn\u0027t do that anymore, which may result in issues elsewhere.",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c6b3af8_4b5ad4a9",
        "filename": "web/src/api.js",
        "patchSetId": 11
      },
      "lineNbr": 41,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-07-26T13:44:24Z",
      "side": 1,
      "message": "It looks like we are hitting an edge-case here. We do set `PUBLIC_URL\u003d\"/zuul/\" when building the JS frontend, but it seems that the trailing slash is stripped somewhere along the way.\n\nAt least the generated JS code only contains `PUBLIC_URL:\"/zuul\"`. This leaves us with broken API URLs (`https://\u003cbase\u003e/zuulapi/api/...`).",
      "parentUuid": "1fe35615_16f5b414",
      "revId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7c79dad8e36fb593b8b65dc84aa80af149bf221",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}