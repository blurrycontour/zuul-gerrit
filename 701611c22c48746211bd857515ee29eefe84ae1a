{
  "comments": [
    {
      "key": {
        "uuid": "bf37636d_a5ae42a8",
        "filename": "zuul/executor/server.py",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-06-30T13:51:09Z",
      "side": 1,
      "message": "Instead of doing this, can we set gather_facts to false in the freeze playbook (since presumably we have gathered them (if possible) already during setup)?\n\nBecause if we don\u0027t run the freeze playbook, then we won\u0027t have any job variables available for a host.",
      "revId": "701611c22c48746211bd857515ee29eefe84ae1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d9cf558_d5917e8f",
        "filename": "zuul/executor/server.py",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-06-30T17:26:42Z",
      "side": 1,
      "message": "Based on chatting in IRC, it sounds like you\u0027re using network_cli only because it doesn\u0027t run the setup playbook.  We don\u0027t actually know whether this is a problem for normal network_cli usage, so I don\u0027t think we should merge this change.\n\nFor your use case, I would recommend adding a new type of \"resource\" like \"namespace\" or \"project\".  Then we won\u0027t add them to the zuul inventory at all.",
      "revId": "701611c22c48746211bd857515ee29eefe84ae1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62b94623_b8dde3a3",
        "filename": "zuul/executor/server.py",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 4162
      },
      "writtenOn": "2021-06-30T18:05:29Z",
      "side": 1,
      "message": "The use case, is we want them in the inventory file but not to run commands from zuul-executor until we have configured the node.  The use case I am thinking of, we need to SSH into a private IP from another node in the nodeset, to properly configure the public interface so that zuul-executor can start to use it.\n\nRight now, we have no way of opting out of this scan when we split it out from the setup playbooks.\n\nSo, I agree a new resource is likely needed, but I\u0027d like to also support the use-case above.\n\nA lot of this is network specific hardware where we cannot easily do provision things via cloud-init or glean.  And usually need to run raw commands to start.",
      "parentUuid": "0d9cf558_d5917e8f",
      "revId": "701611c22c48746211bd857515ee29eefe84ae1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f1f02c3_052e8bea",
        "filename": "zuul/executor/server.py",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-01T17:57:40Z",
      "side": 1,
      "message": "To support your specific use case could the workflow be something like:\n\n* Zuul manages new resource, doesn\u0027t put it in the inventory but does put it in zuul vars.\n* Write a zuul role to provision that new resource so that it is able to talk to ansible\n* Manually add these resources to the inventory in your playbooks as necessary to talk to them.",
      "parentUuid": "62b94623_b8dde3a3",
      "revId": "701611c22c48746211bd857515ee29eefe84ae1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "565fa9a9_e67ebde0",
        "filename": "zuul/executor/server.py",
        "patchSetId": 1
      },
      "lineNbr": 1514,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-06-30T17:26:42Z",
      "side": 1,
      "message": "You should set freeze\u003dTrue here, because as it\u0027s written, you\u0027re passing remove_keys\u003dTrue.  (ed: not applicable any more).",
      "revId": "701611c22c48746211bd857515ee29eefe84ae1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}