{
  "comments": [
    {
      "key": {
        "uuid": "5a3905b3_497c29b5",
        "filename": "tests/base.py",
        "patchSetId": 4
      },
      "lineNbr": 1754,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-01-23T18:19:24Z",
      "side": 1,
      "message": "Looks like you\u0027re trying to pre-make the directory, and maybe accepting an error where the directory already exists? The OSError seems to catch a lot of things though, should it be narrowed down, or just allowed to fail elsewhere if say permissions are not right?",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_124325b3",
        "filename": "tests/base.py",
        "patchSetId": 4
      },
      "lineNbr": 1754,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-01-23T20:54:42Z",
      "side": 1,
      "message": "Agreed.  I would have done something better if this weren\u0027t just for tests (where a real error is likely to make something blow up anyway).",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_182fd1a1",
        "filename": "tests/fixtures/config/ansible/git/org_project/.zuul.yaml",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-01-23T17:09:17Z",
      "side": 1,
      "message": "red blob",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_d1dc8475",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 2
      },
      "writtenOn": "2017-01-21T10:34:06Z",
      "side": 1,
      "message": "And should likely support .yaml and .yml since ansible community folks seem to like .yml and we tend to prefer .yaml in Infra land.",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_86a39bff",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-01-21T15:42:53Z",
      "side": 1,
      "message": "Agreed -- I think what we probably want to do to satisfy both of these todos is to look for jobname.yaml or jobname.yml or raise an error, does that sound right?",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_64774ca0",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-01-23T18:19:24Z",
      "side": 1,
      "message": "Yeah that sounds right. A find first with an eventual error.",
      "parentUuid": "5a3905b3_86a39bff",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_c47e4069",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-01-23T18:19:24Z",
      "side": 1,
      "message": "Why plural here? There are multiple plays in a playbook. More than one playbook would be more than one file, or are you anticipating that the base playbook will import other playbooks?",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_323e6128",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-01-23T20:54:42Z",
      "side": 1,
      "message": "I\u0027m anticipating that a given repo may have multiple playbooks.  In particular, our config repos (eg \"project-config\") may have tens or hundreds of playbooks each for various jobs.  A given project repo (eg \"shade\") may even have a handful of playbooks for some custom jobs.\n\nSo this accounts for:\n  openstack-infra/project-config/playbooks/python27.yaml\n  openstack-infra/project-config/playbooks/python35.yaml\n  openstack-infra/project-config/playbooks/flake8.yaml\netc.",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3905b3_48817a8e",
        "filename": "zuul/configloader.py",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-01-23T21:57:01Z",
      "side": 1,
      "message": "OH! I missed that this was a /directory/ name, and not a filename. It\u0027s using the directory + the job name to find a playbook within. Interesting.\n\nThis then requires the pipeline to have defined job names at least, and leaves it up to the project to define the meaning of the job. Is there going to be a model where the repo itself defines the jobs themselves?",
      "parentUuid": "5a3905b3_323e6128",
      "revId": "dd169aac104369bf9179c31a7da98ecf3092e861",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}