{
  "comments": [
    {
      "key": {
        "uuid": "04c556ae_b29795fb",
        "filename": "tests/unit/test_merger_repo.py",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-04-16T15:20:17Z",
      "side": 1,
      "message": "This variable doesn\u0027t seem to be used as repo_state_no_update is used instead. I think we may be able to simply drop this var.",
      "revId": "3588b46d61ac7ad5c70f77efe729b5e4cd179c36",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76425963_2a8c31c6",
        "filename": "tests/unit/test_merger_repo.py",
        "patchSetId": 1
      },
      "lineNbr": 959,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-04-16T15:28:10Z",
      "side": 1,
      "message": "If we dropped the checkoutBranch() here would this test pass without modifying the assertions below? I\u0027m curious because I think updateRepo() should properly trigger the isUpdateNeeded() path and do the necessary updates as a result. But then checkoutBranch() may undo that state?\n\nUltimately we want to test what zuul is doing in job preparation which I suspect includes a checkoutBranch() so don\u0027t remove it here just to make the test pass :) Just curious if I am understanding this properly.",
      "revId": "3588b46d61ac7ad5c70f77efe729b5e4cd179c36",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08c90c19_35bacc12",
        "filename": "tests/unit/test_merger_repo.py",
        "patchSetId": 1
      },
      "lineNbr": 959,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-04-16T15:32:42Z",
      "side": 1,
      "message": "I believe the answer is no, because while we do reset the repo, we reset it to the remote state (ie, we set refs/heads/master to origin/refs/heads/master) and the remote state is stale because isUpdateNeeded told us we didn\u0027t need to fetch.\n\nSo an implication of this is that if you call updateRepo with repo_state, you had best follow that up with something that acts on a repo_state.\n\nTo make this slightly more \"correct\" we could consider having Repo._reset use repo_state when it resets the repo.  Then I think this would pass without the checkoutBranch.",
      "revId": "3588b46d61ac7ad5c70f77efe729b5e4cd179c36",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c902a6ad_d529a22d",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 1
      },
      "lineNbr": 813,
      "author": {
        "id": 16068
      },
      "writtenOn": "2021-04-16T15:58:26Z",
      "side": 1,
      "message": "I think we need default to None here...",
      "revId": "3588b46d61ac7ad5c70f77efe729b5e4cd179c36",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9d82988_207dd59e",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 1
      },
      "lineNbr": 819,
      "author": {
        "id": 16068
      },
      "writtenOn": "2021-04-16T15:58:26Z",
      "side": 1,
      "message": "... and check for project_repo_state is None here.\n\nOtherwise if the project is not part of the repo state isUpdateNeeded will always return False.",
      "revId": "3588b46d61ac7ad5c70f77efe729b5e4cd179c36",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    }
  ]
}