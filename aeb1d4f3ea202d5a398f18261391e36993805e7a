{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a093cd8b_41f50dc6",
        "filename": "doc/source/developer/specs/project-subscription.rst",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-15T15:10:46Z",
      "side": 1,
      "message": "I think it\u0027s important to note that the workflow with gerrit is fully supported and in use now.  For a public example, see https://gerrit.googlesource.com/zuul/jobs/+/refs/heads/master/roles/prepare-gerrit-repos/README.rst\n\nAs you note later in the spec, how to actually take advantage of submodules in a superproject is dependent on how the overall project is organized and the tooling it uses.  In the example of gerrit itself above, we move the repos into place, because that is all that is needed.  Other systems would need to rewrite .gitmodules or manifest.xml.  That can be done today at the start of the Zuul job based on the contents of zuul variables.\n\nMy quibble here is with the phrasing of this paragraph.  It is technically correct, but it does not tell the full story that with Gerrit, support for a submodule subscription workflow can be (and has been) achieved with only Zuul job changes.",
      "revId": "aeb1d4f3ea202d5a398f18261391e36993805e7a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edd4dc1a_bf7123a6",
        "filename": "doc/source/developer/specs/project-subscription.rst",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-15T16:19:58Z",
      "side": 1,
      "message": "I disagree with this.  It can not possibly be more work to implement a simple daemon that listens on MQTT and then does:\n* Checkout superproject\n* For each submodule:\n  * Check out the branch tip\n  * Update superproject .gitmodule to point to branch tip\n* Commit superproject change\n* Push superproject change\n\nYou don\u0027t even need to actually check out the submodules, you can do all of that with just fetching the ref list, so it would be very fast.\n\nThis is an extremely simple solution that is easy to maintain (it should require almost no ongoing maintenance) and can be easily customized to the needs of the repo.  I would support extending the MQTT reporter to wait for a reply from a system like this to make it synchronous.  I believe that would address your use cases without the significant changes to Zuul that you described.\n\nI don\u0027t think that comparing the proposal in this spec to \"forking Zuul\" is the best way to convince a community built on consensus-based decision making.",
      "revId": "aeb1d4f3ea202d5a398f18261391e36993805e7a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}