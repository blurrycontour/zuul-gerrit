{
  "comments": [
    {
      "key": {
        "uuid": "5f7c97a3_08faa5bb",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 4146
      },
      "writtenOn": "2018-06-01T19:04:09Z",
      "side": 1,
      "message": "I think this may have been the source of confusion on my part regarding \"machine like containers\". From my perspective you are most likely to interact with them without a kubernetes. LXD/LXC for example.\n\nMaybe we want to scope this spec to k8s support in nodepool/zuul and worry about other thingpool items including lxc/lxd and other machine like containers separately?\n\nMy previous concerns were that we were assuming k8s was the only way to get a machine like container hence the reliance on k8s specific access methods. I think that concern persists unless we want to scope this specifically to k8s rather than the bigger \"containers\".",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 69
      },
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_7791ff45",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-07-05T22:32:24Z",
      "side": 1,
      "message": "I think k8s-container-like-machine is still a sufficiently useful case to support that it\u0027s worth implementing and talking about here.  If I wanted to build a Zuul system that ran a bunch of simple test jobs in containers for efficiency, that\u0027s probably how I\u0027d do it today.\n\nI think that we\u0027ve hit the right balance here now with indicating that this spec is about targeting k8s, but many of the general concepts should apply elsewhere as well.\n\nI\u0027ve made one more revision in PS3 to indicate that it is Nodepool that tells Zuul to use the kubectl connection plugin for Ansible -- so by no means are we limited to using k8s for container-like-machine.  If Nodepool tells Zuul that it provided a label using some other system, that will be fine.  I hope that addresses your concern.",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_259eac53",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-06-14T04:33:53Z",
      "side": 1,
      "message": "Turns out this is already working. Commands\u0027 logs do contain some initial \"waiting for logger\" but then the output is properly logged. Though if/when zuul_stream uses ssh port forward, then this may need some adjustments to work with the kubectl connection plugin.",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_17920b4b",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-07-05T22:32:24Z",
      "side": 1,
      "message": "Neat!",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_e5a3d499",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-06-14T04:33:53Z",
      "side": 1,
      "message": "At least oc has a synchronize command that will try rsync or tar usage over the k8s exec interface. So I think the synchronize module could be easily fixed to work with the kubectl connection plugin.",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_3797073c",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-07-05T22:32:24Z",
      "side": 1,
      "message": "Double neat!",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_31b452f2",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1921
      },
      "writtenOn": "2018-06-06T21:17:33Z",
      "side": 1,
      "message": "This sounds great, as long as the priority is to provide standard k8s API - since resource providers may support k8s but not OpenShift.\n\nI wonder if it makes sense for node pool to expose a plugin interface that different cloud providers may implement to let nodepool even manage k8s clusters (add worker nodes, or even create / delete clusters).",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 182,
        "endChar": 33
      },
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_d79fb34e",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-07-05T22:32:24Z",
      "side": 1,
      "message": "It is to support k8s first, but the additional OpenShift functionality sounds very compelling and worth looking into.\n\nI worry about scope creep here -- there must be other applications which manage k8s clusters to scale with load.",
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7c97a3_118ef631",
        "filename": "doc/source/developer/specs/container-build-resources.rst",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1921
      },
      "writtenOn": "2018-06-06T21:17:33Z",
      "side": 1,
      "message": "+1. I think it\u0027s definitely worth trying to use the in-cluster capabilities.",
      "range": {
        "startLine": 286,
        "startChar": 0,
        "endLine": 290,
        "endChar": 48
      },
      "revId": "c1b8dacf43541a4a7fb09c8cb22c2e1827858f99",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}