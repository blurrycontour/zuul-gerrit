{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70172fbd_d6eda9d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-02-06T13:28:04Z",
      "side": 1,
      "message": "I think this is a good idea but we should strive to eliminate 500 errors in the API. Could you add either in this patch or a followup some form of type checking in the builds and buildsets endpoints, so that we return an error code 400 with an explanation?",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6636232e_aadbd76f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 33134
      },
      "writtenOn": "2023-02-06T14:17:52Z",
      "side": 1,
      "message": "I will make a separate change to dealing with 500 error in api. \nSo what you mean is if it would be a 400 error, would it be handled correctly by the zuul-web, correct?",
      "parentUuid": "70172fbd_d6eda9d0",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe303232_3accae4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-02-06T14:29:05Z",
      "side": 1,
      "message": "I think returning a 400 error would be the right way to handle an input error. It is after all a client-side error, it shouldn\u0027t trigger a server side error (ie an error 500).",
      "parentUuid": "6636232e_aadbd76f",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b563dbf_a3ee49d3",
        "filename": "web/src/pages/Builds.jsx",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 27952
      },
      "writtenOn": "2023-02-01T14:08:40Z",
      "side": 1,
      "message": "I think for the presentation we should use something different than a plain alert. Maybe something like this: https://www.patternfly.org/v4/components/form/design-guidelines/#errors-and-validation.\n\nIf I\u0027m not mistaken we are using a TextInput for this field, so it might work to use the `validated` property for that (https://www.patternfly.org/v4/components/text-input#textinput). There are also a few examples on https://www.patternfly.org/v4/components/text-input#invalid and https://www.patternfly.org/v4/components/form#validated\n\nIn case of a Form/FormGroup, the error message seems to be displayed via the `helperTextInvalid\u003d{invalidText}` property. AFAIK we don\u0027t have a form here, but use a PF4 Toolbar (https://www.patternfly.org/v4/components/toolbar/). There doesn\u0027t seem to be something similar available for a toolbar, so we might want to use another component to show the error message. Maybe something like https://www.patternfly.org/v4/components/alert ? Sadly for the toolbar there aren\u0027t any \"design guidelines\" regarding validation and error handling.",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea87db02_0b02b186",
        "filename": "web/src/pages/Builds.jsx",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-02-06T13:28:04Z",
      "side": 1,
      "message": "The first link you mention is the right approach to me in terms of UX. If it is too much of a hassle we also have a notification system in place that could be used to display such errors.",
      "parentUuid": "7b563dbf_a3ee49d3",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "746070be_e649f7b0",
        "filename": "web/src/pages/Builds.jsx",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 33134
      },
      "writtenOn": "2023-02-06T14:17:52Z",
      "side": 1,
      "message": "Indeed the alert system in the first link from Felix only applies to Form, and we ToolbarItem, which can not apply it.\n@Mattheiu, what notification system do you mean? could you show me some example where it is used?",
      "parentUuid": "ea87db02_0b02b186",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db7e9adb_90bca9a8",
        "filename": "web/src/pages/Builds.jsx",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-02-06T14:29:05Z",
      "side": 1,
      "message": "Have a look at the AutoholdModal component, IIRC it triggers a notification when the autohold request succeeds. It also handles API failures so that could tie in with the API change we discussed before.",
      "parentUuid": "746070be_e649f7b0",
      "revId": "1049cc7554b588a052dd19dccf2b4b499dc4fea8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}