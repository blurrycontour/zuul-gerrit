{
  "comments": [
    {
      "key": {
        "uuid": "bfdaf3ff_8f7cd11f",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 3099
      },
      "writtenOn": "2019-01-17T16:53:59Z",
      "side": 1,
      "message": "This raises some concerns for me. Notably:\n\n* Lots of events (which we are sure to have) will cause event sequence numbers to rollover. Could that put a wrinkle in processing the events in order?\n\n* Assuming you plan to use the kazoo queue recipe, that is documented to be buggy, causing memory leaks over long periods of usage. https://kazoo.readthedocs.io/en/latest/api/recipe/queue.html#module-kazoo.recipe.queue",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 68
      },
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_d55cbf7f",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-16T18:50:16Z",
      "side": 1,
      "message": "We can also segment it if necessary.  /zuul/config/project/branch/jobs/ could be a directory of json blobs.  We wouldn\u0027t need to make one zobject per job -- we would end up with too many zobjects that way.  But we could have /zuul/config/project/branch/jobs/1 be the first 100 jobs, and jobs/2 be the next 100.  That way we remove the size limitation, and when small changes happen in big repos, we reduce the amount of data we need to change in zk (for example, we might only replace the jobs/2 object if job #157 is updated).",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_f53ea3d8",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-16T18:58:58Z",
      "side": 1,
      "message": "I like this idea",
      "parentUuid": "bfdaf3ff_d55cbf7f",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_f55f836f",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 211,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-16T18:50:16Z",
      "side": 1,
      "message": "Is there a reason to still have sql reporters in pipelines?  Why not just attach them in tenants (so different tenants can use different sql connections, but each tenant always uses exactly one)?",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_f570e3de",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 211,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-16T18:58:58Z",
      "side": 1,
      "message": "The reason was mostly backwards compatibility as today one can choose to report per pipeline. But I\u0027m open to just remove this as this is probably just a hypothetical use case.",
      "parentUuid": "bfdaf3ff_f55f836f",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_70e08197",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 211,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-16T19:33:22Z",
      "side": 1,
      "message": "I feel like with the API and dashboard allowing flexible queries (including pipeline), we\u0027ve largely superceded any use like that.",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_9556375c",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-16T18:50:16Z",
      "side": 1,
      "message": "I don\u0027t think we should include the max processing time to start with; I think that will introduce a lot of edge cases we would need to handle and complexity.  If we find we need it we can add it later.",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_b5849bb2",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-16T18:58:58Z",
      "side": 1,
      "message": "++",
      "parentUuid": "bfdaf3ff_9556375c",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdaf3ff_4f4fc933",
        "filename": "doc/source/developer/specs/scale-out-scheduler.rst",
        "patchSetId": 5
      },
      "lineNbr": 317,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-17T16:46:16Z",
      "side": 1,
      "message": "We should probably add a section on work items.  It would be good to list some of the major steps we need to do, so we can get an idea of how much work will need to be done, whether we can split it up among different authors, and how we should handle merging and releasing.\n\nParticularly, it would be good to figure out whether we want to break it up into a series of moderate changes (such as \"require sql\", \"zk ingestor\", \"zk executor\", \"zk scheduler\"), each of which gets a 3.x release with an upgrade note, or whether we want to maintain a long stack of changes in gerrit with rebasing and land it all then release 4.0, or whether we want to make a feature branch.  I think making the list of work items as a start will help us find the right answer.",
      "revId": "5e9dea3be7c11fb0826727676907b6e37bd09f48",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}