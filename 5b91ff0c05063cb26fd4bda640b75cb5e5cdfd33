{
  "comments": [
    {
      "key": {
        "uuid": "3f79a3b5_652e2d93",
        "filename": "zuul/executor/server.py",
        "patchSetId": 6
      },
      "lineNbr": 975,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-13T07:43:41Z",
      "side": 1,
      "message": "(nit) this could probably go in the filecomments lib with the repo passed in as an argument",
      "range": {
        "startLine": 954,
        "startChar": 0,
        "endLine": 975,
        "endChar": 47
      },
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_f4198279",
        "filename": "zuul/executor/server.py",
        "patchSetId": 6
      },
      "lineNbr": 975,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-13T16:51:51Z",
      "side": 1,
      "message": "I like it here, because it\u0027s easy to see what we\u0027re doing to the job\u0027s repo here.  And the filecomments lib remains just a set of functions that operate on special data structures.  This patch is the second attempted implementation of this in Zuul (not counting the role), and I like that I didn\u0027t have to change the filecomments lib between them.",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_1238ddeb",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-13T07:43:41Z",
      "side": 1,
      "message": "(-1) If start_character was \u00270\u0027, wouldn\u0027t this try to extract at line 0 even though it may not be? Shouldn\u0027t you only be looking at start_line and end_line?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 56
      },
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_14175e47",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-13T16:51:51Z",
      "side": 1,
      "message": "Yep.",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_e539ddd6",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-13T07:43:41Z",
      "side": 1,
      "message": "Should we be raising a warning if the mapped line isn\u0027t in lines?",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_b429ca8a",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-13T16:51:51Z",
      "side": 1,
      "message": "To be honest, I don\u0027t know.  It depends on how often this fails and under what circumstances.  For now, I\u0027ve erred on the side of being quiet (and assuming that the actual job report is definitive anyway).  I\u0027m open to changing it (either now or later).",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_7301f7ae",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-14T13:43:29Z",
      "side": 1,
      "message": "Perhaps just logging internally would be helpful for now then?",
      "parentUuid": "3f79a3b5_b429ca8a",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_853269f1",
        "filename": "zuul/lib/filecomments.py",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-13T07:43:41Z",
      "side": 1,
      "message": "(ditto)",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_a5444548",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 6
      },
      "lineNbr": 433,
      "author": {
        "id": 7069
      },
      "writtenOn": "2018-08-13T07:43:41Z",
      "side": 1,
      "message": "(nit) rather than using regex, is there a safer way to get the commit sha from the log?",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_54115651",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 6
      },
      "lineNbr": 433,
      "author": {
        "id": 1
      },
      "writtenOn": "2018-08-13T16:51:51Z",
      "side": 1,
      "message": "I am unaware of one.",
      "revId": "5b91ff0c05063cb26fd4bda640b75cb5e5cdfd33",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}