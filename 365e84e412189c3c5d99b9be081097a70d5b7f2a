{
  "comments": [
    {
      "key": {
        "uuid": "fa81d914_ad407357",
        "filename": "tests/test_scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 2896,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-01-28T05:47:07Z",
      "side": 1,
      "message": "It might be worth checking the job.changes is correct too.",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_dd1f2bb6",
        "filename": "tests/test_scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 2896,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-01-30T21:58:40Z",
      "side": 1,
      "message": "Done; at least I think so.  I can check the completed build history at the end.",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_cd6cc739",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 1351,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-01-28T05:47:07Z",
      "side": 1,
      "message": "can we see a test for this state as I\u0027m not sure how this would occur..",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_fd1cefc3",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 1351,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-01-30T21:58:40Z",
      "side": 1,
      "message": "This should actually occur quite often.  If you imagine a change B being added to the check pipeline, it will pull in its parent A ahead of it as a non-live change.  When B\u0027s tests are complete, B will be removed.  Nothing will ever happen to A (no tests will run, etc) so under normal circumstances, it would never be removed from the queue.  This ensures that on the next pass of the scheduler, it notices that there is no longer any reason for A to be in the queue and it is removed.\n\nThe assertEmptyQueues part of the base test case will assure us that it is removed by the end of the test.",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_cd5da74a",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 1754,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-01-28T05:47:07Z",
      "side": 1,
      "message": "I\u0027m confused. How would this happen? And if it does, shouldn\u0027t we fetch the newest patchset?",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_1d79c3fc",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 1754,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-01-30T21:58:40Z",
      "side": 1,
      "message": "It could be change that is provided by a git parent.  So if the commit B,1 has a parent of A,1 and change A\u0027s latest patchset is 2, this case happens.\n\nThis is based on the code from the dependent pipeline below (see Footnote [1]).  Much of the code is the same, but this doesn\u0027t need to do the submitAllowNeeds check.",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_3d7e87e5",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 1901,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-01-30T21:58:40Z",
      "side": 1,
      "message": "Footnote [1] from above.",
      "revId": "365e84e412189c3c5d99b9be081097a70d5b7f2a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}