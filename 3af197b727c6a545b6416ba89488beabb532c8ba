{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9b03590a_bdf12b28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 9311
      },
      "writtenOn": "2021-10-21T01:23:20Z",
      "side": 1,
      "message": "\u003e Patch Set 7:\n\u003e \n\u003e I\u0027m not sure what you are suggesting should be the default.  Are you saying that Zuul should never include pragma?  It\u0027s proven to be absolutely critical in OpenStack.  I caution you not to make that evaluation based on this one instance where I\u0027ve clearly established the feature is being used incorrectly.\n\u003e \n\nI\u0027m saying that third party Zuul, when importing job, should not include the pragma. If I understand correctly, the current behavior makes the branch matcher unable to work with foreign branch.\n\nPerhaps this is not the intended behavior and there is a bug somewhere else. But right now it does not seems possible to use the devstack job in a branch named `foo`, the scheduler simply skip the job (and it does not provide any feedback beside the `did not match` scheduler debug log).\n\n\u003e I suspect there is an actual bug with branch matchers here that is affecting both you and the devstack project, but all of this work is just papering over it.\n\u003e \n\u003e I still don\u0027t actually understand why the pragma is causing a problem here.  You say that the problem is that Zuul sees:\n\u003e \n\u003e Variant \u003cJob devstack branches: {MatchAny:{ImpliedBranchMatcher:master},{ImpliedBranchMatcher:feature/r1}} source: openstack/devstack/.zuul.yaml@master#437\u003e did not match\n\u003e \n\u003e But if you remove the pragma, you\u0027re going to end up with:\n\u003e \n\u003e Variant \u003cJob devstack branches: {MatchAny:{ImpliedBranchMatcher:master}} source: openstack/devstack/.zuul.yaml@master#437\u003e did not match\n\u003e \n\u003e Because it\u0027s still going to have an implied branch matcher.\n\u003e \n\u003e I\u0027m starting to think the pragma is a red herring, and you need to look into why override-checkout isn\u0027t causing the devstack job to match the branch you want.\n\nI believe the pragma is the source of the problem, excluding it makes the branch matcher respect the override-checkout. If this is a bug, would you know where to look for fixing it?\n\n",
      "revId": "3af197b727c6a545b6416ba89488beabb532c8ba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}