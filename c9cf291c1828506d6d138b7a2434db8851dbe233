{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1be4f8d3_5b888185",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "I left a number of notes. Some of which were only against the Gerrit driver, but I think they apply to the other drivers too.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8581c9f0_906ffe8f",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 763,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Slight nit that logging this at error level may indicate to operators that these are errors they need to handle. Maybe it should be warning instead or we should indicate \"this is a zuul bug please report to the zuul developers\" ?",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f30bf246_8a9e4904",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 763,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "I don\u0027t think we have an existing way to make that distinction (and in an open source project, I\u0027m not entirely sure it is a distinction).  The current code is intentionally designed to crash because this case is so severe; I think it\u0027s still severe and we absolutely need to track it down.  The system is not operating as designed and may be malfunctioning.  I think \"error\" is appropriate in that case.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9d42c5c_e047c84f",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 763,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "Got it. I think I may have misunderstood the severity due to no longer crashing. In that case it isn\u0027t just noise in the logs but something that does need to be addressed (one way or another).",
      "parentUuid": "f30bf246_8a9e4904",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8377155_1844a313",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 763,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T17:01:20Z",
      "side": 1,
      "message": "Yes, I believe we are still finding these bugs (and we may make more of them in the future).",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a6cd40_9b499f8e",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 779,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Should this be tag?",
      "range": {
        "startLine": 779,
        "startChar": 28,
        "endLine": 779,
        "endChar": 34
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17ffaef1_5e5ecb99",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 779,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "Well, it\u0027s a change cache... I admit the terminology is a little weird, but the actual change/ref/object should be obvious from the log.  If we were to change anything, we should probably rename it to the \u0027RefCache\u0027 and say the \"Ref\" wasn\u0027t found here.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f0e04e2_9bbfd672",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 779,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "I called it out because I\u0027m not sure log.error will give you code context. And if you end up in this file there are multiple places which could generate this log line. That said you are right that the stringified change_key should give enough context to determine what tripped it.",
      "parentUuid": "17ffaef1_5e5ecb99",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "215aeb05_6f47f9ac",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 779,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T17:01:20Z",
      "side": 1,
      "message": "Yeah, it was the change_key I was thinking of.  Like \"Change \u003cChangeKey something that looks like a branch\u003e not found\"",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "290b3e78_4aca7249",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 803,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Should this be branch?",
      "range": {
        "startLine": 803,
        "startChar": 28,
        "endLine": 803,
        "endChar": 34
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68b7cacf_766e1643",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 826,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Should this be ref?",
      "range": {
        "startLine": 826,
        "startChar": 28,
        "endLine": 826,
        "endChar": 34
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df30216b_2662d88b",
        "filename": "zuul/driver/gerrit/gerritsource.py",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Why not set the project name here? Is it not available in the change events?",
      "range": {
        "startLine": 61,
        "startChar": 46,
        "endLine": 61,
        "endChar": 50
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05f97de2_4f1dd5f6",
        "filename": "zuul/driver/gerrit/gerritsource.py",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "Gerrit change keys don\u0027t have projects because yes, the project name isn\u0027t always available, but moreover, they\u0027re not necessary since the number (or maybe eventually someday the change-id-thingy-with-lots-of-tildes) is sufficiently unique.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "511de26e_4ad39dac",
        "filename": "zuul/driver/gerrit/gerritsource.py",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:38:00Z",
      "side": 1,
      "message": "Clarification: Gerrit projects don\u0027t have projects *for changes*; the other types of entries do use the project name.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c5bc6cc_6ce8eaf1",
        "filename": "zuul/driver/gerrit/gerritsource.py",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "511de26e_4ad39dac",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e830360_cf4756a0",
        "filename": "zuul/driver/github/githubconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 1378,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "This is an instance where change_key.newrev and not change.newrev is used.",
      "range": {
        "startLine": 1378,
        "startChar": 52,
        "endLine": 1378,
        "endChar": 69
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3ffb742_1cb7e48d",
        "filename": "zuul/driver/github/githubconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 1378,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T17:01:20Z",
      "side": 1,
      "message": "Whoops.  Happy to fix that.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62a24eb3_e1c8f22c",
        "filename": "zuul/driver/github/githubconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 1404,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 1404,
        "startChar": 52,
        "endLine": 1404,
        "endChar": 62
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfcdb223_ce7418bb",
        "filename": "zuul/driver/github/githubconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 1428,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 1428,
        "startChar": 52,
        "endLine": 1428,
        "endChar": 62
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a7dfd1_b60974cb",
        "filename": "zuul/driver/github/githubsource.py",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "Unlike Gerrit we do seem to set the project name for github.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab6ab7c4_b20a9a72",
        "filename": "zuul/driver/github/githubsource.py",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "It\u0027s required since every project starts at issue #1.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c35abd1_760efcd1",
        "filename": "zuul/driver/gitlab/gitlabconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 634,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "This is an instance where change_key.newrev is used and not change.newrev.",
      "range": {
        "startLine": 634,
        "startChar": 52,
        "endLine": 634,
        "endChar": 62
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4ee83fc_ec14a363",
        "filename": "zuul/driver/pagure/pagureconnection.py",
        "patchSetId": 3
      },
      "lineNbr": 674,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "This is an instance where change_key.newrev is used and not change.newrev.",
      "range": {
        "startLine": 674,
        "startChar": 52,
        "endLine": 674,
        "endChar": 62
      },
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59f5e10a_71a286ae",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "It might be worth a comment or docstring update here to indicate that the stable_id and revision avlues may be overloaded by specific implementations. For example Gerrit changes use stable_id for the change number and revision for the patchset number. And revision has the new format for oldrev..newrev.\n\nI\u0027m also wondering how this impacts backward compatibility. The change keys never leave memory right? They belong to a single running process instance? If so maybe we can just change the attributes entirely? I know the commit message indicates this is difficult, but I\u0027m having a hard time understanding why.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f39e0818_e4b2f690",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "In general, these values are all intended to be opaque and driver-specific.  I can add that comment, but that isn\u0027t something new that\u0027s introduced in this change.  The exception is the two new methods below where we centralize knowledge of driver-specific data just because all the drivers use the same format for that data and we can save some duplication.  But those are convenince methods and not required for this class\u0027s operation, and I did add a comment there.\n\nRe backwards compat: ChangeKey instances are in-memory python objects.  But they are serialized to json in the reference attribute.  Whenever an object in zk refers to a change, it should use the reference (see comment above).  The reference includes the revision, so this is a change to the serialized format of the change key reference which is written to zk.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42c2189d_59ce9fc1",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "Aha that was the piece I was missing (the reference attribute serialization). Maybe a note that these names need to be stable and as a result drivers can overload them as necessary would be worthwile? It isn\u0027t critical to have that though.",
      "parentUuid": "f39e0818_e4b2f690",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43e1d8a2_dea548d0",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T01:09:07Z",
      "side": 1,
      "message": "We seem to lookup the newrev (and oldrev potentially) properties multiple times in a row in places that deal with the change keys. Would it make sense to store these values as private attributes on the change key object to avoid doing unnecessary string splits?",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a7af1d_72ce30d5",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-02-17T01:29:48Z",
      "side": 1,
      "message": "I tried to be mindful of this and avoid that.  In most of the code I used the pattern:\n\nchange.newrew \u003d change_key.newrev\ndo something with change.newrev\n\nSo the change_key.newrev property is only accessed once.",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e6d89bb_8c318388",
        "filename": "zuul/zk/change_cache.py",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-02-17T16:53:54Z",
      "side": 1,
      "message": "The gerrit and git drivers look fine but I noted where github, gitlab, and pagure seem to call this method multiple times.\n\nI\u0027m happy to address this by being specific in the drivers rather than carrying around extra attributes in this object.",
      "parentUuid": "e6a7af1d_72ce30d5",
      "revId": "c9cf291c1828506d6d138b7a2434db8851dbe233",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}