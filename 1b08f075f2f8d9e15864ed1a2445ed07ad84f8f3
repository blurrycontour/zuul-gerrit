{
  "comments": [
    {
      "key": {
        "uuid": "AAAAUH/9Uwk\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1
      },
      "writtenOn": "2014-02-07T18:41:16Z",
      "side": 1,
      "message": "Well, OpenStack\u0027s Zuul pre-calculates the paths and the final URL.  I don\u0027t think this patch changes that either, but it\u0027s worth remembering that in our case we ignore the URL from the worker when reporting (we only use it while the worker is running).\n\nThis is just FYI.",
      "revId": "1b08f075f2f8d9e15864ed1a2445ed07ad84f8f3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAUH/9Uxc\u003d",
        "filename": "zuul/launcher/gearman.py",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1
      },
      "writtenOn": "2014-02-07T18:41:16Z",
      "side": 1,
      "message": "This might be bikeshedding, but does \"_EXTRA\" actually get us anything?  It seems like SWIFT makes this enough of a namespace not to collide with other potentially similar variables.",
      "revId": "1b08f075f2f8d9e15864ed1a2445ed07ad84f8f3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAUH/9UyM\u003d",
        "filename": "zuul/launcher/gearman.py",
        "patchSetId": 7
      },
      "lineNbr": 283,
      "author": {
        "id": 1
      },
      "writtenOn": "2014-02-07T18:41:16Z",
      "side": 1,
      "message": "This, as you noted, only works for changes with refspecs (pre-merge), but not changes with refs (post-merge).  If you look at our config, we generate the log paths like so:\n\nhttp://git.openstack.org/cgit/openstack-infra/config/tree/modules/openstack_project/files/zuul/openstack_functions.py\n\nWe should probably support both kinds of jobs at least.",
      "revId": "1b08f075f2f8d9e15864ed1a2445ed07ad84f8f3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAUH/9U6U\u003d",
        "filename": "zuul/lib/swift.py",
        "patchSetId": 7
      },
      "lineNbr": 119,
      "author": {
        "id": 1
      },
      "writtenOn": "2014-02-07T18:41:16Z",
      "side": 1,
      "message": "I can\u0027t find sufficient documentation for get_auth; http://docs.openstack.org/developer/python-swiftclient/swiftclient.html#swiftclient.client.Connection.get_auth isn\u0027t that helpful...\n\nBut what I was wondering is what is \"storage_url\"?  Is it really something that we need to get each time we want to generate a sig and start a job?  Could we instead get this and store it at initialization/connection time and keep it around?  The advantage of the HMAC method is that you don\u0027t have to communicate out of bound for each request, so I think it would be good to avoid that.\n\nChatted with notmyname, he says the part of storage_url used in the HMAC is not going to change, so it\u0027s safe to store it at startup.",
      "revId": "1b08f075f2f8d9e15864ed1a2445ed07ad84f8f3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}