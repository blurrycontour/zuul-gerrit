{
  "comments": [
    {
      "key": {
        "uuid": "5fc1f717_2d872e64",
        "filename": "zuul/executor/common.py",
        "patchSetId": 2
      },
      "lineNbr": 582,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-04-02T20:59:03Z",
      "side": 1,
      "message": "Honestly, everything in this class just seems like something that should be (and is!) on the AnsibleJob classs.  The extra layer is more typing and more confusion when trying to follow the code.",
      "revId": "e55e0cd96e54e292a39f0d49023ae5c41d7a1299",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_e379a8fb",
        "filename": "zuul/executor/common.py",
        "patchSetId": 2
      },
      "lineNbr": 582,
      "author": {
        "id": 7069
      },
      "writtenOn": "2019-04-10T03:14:18Z",
      "side": 1,
      "message": "So in the case of the executor server we need to do some gearman commands in these steps. Thus they can\u0027t be in a general AnsibleJob class. These could be abstract methods on the AnsibleJob though that the ExecutorAnsibleJob would then inherit from and implement.\n\nThat would be a similar outcome, but given the previous feedback I was looking to avoid it. However, the implementation due to complexities ended up coming back to a base class-like structure as I worked through the refactor.",
      "parentUuid": "5fc1f717_2d872e64",
      "revId": "e55e0cd96e54e292a39f0d49023ae5c41d7a1299",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}