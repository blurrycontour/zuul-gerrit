{
  "comments": [
    {
      "key": {
        "uuid": "1f769fc5_18c61c4a",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-02T20:54:58Z",
      "side": 1,
      "message": "How will this happen?  Should we go ahead and switch to using Dockerfiles to build the images instead of pbrx, so that we can add the additional venvs?",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_a25e57df",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-09T14:30:19Z",
      "side": 1,
      "message": "Please note that this will make zuul packaging more difficult. For example rpm doesn\u0027t support multiple python library versions... Will zuul takes care of the security updates too?\n\nCould we have each executor support one ansible stream instead? They could announce it as part of the gearman function or something...",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_7d122058",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 16068
      },
      "writtenOn": "2018-12-09T16:49:25Z",
      "side": 1,
      "message": "Regarding packaging there are two options. The first would be to include the pre-installed venvs containing the ansible versions in the package (e.g. /usr/lib/zuul/executor-ansible/...). The second would be to just don\u0027t care about this in the package and let zuul handle the installations (e.g. use /var/lib/zuul/executor-ansible/...).\n\nIn case of zuul-managed installations my thought was that zuul will update all installations on startup and thus automatically handle security updates by restart. In the other case of unmanaged ansible installations it\u0027s of course the task of the deployer/packager to take care of this.\n\nRegarding one ansible version per executor, I\u0027m opposed to this idea because this will complicate the job scheduling and make deployment much more complicated compared to supporting all versions at once by each executor.",
      "parentUuid": "3f79a3b5_a25e57df",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_9bea6c74",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-12T04:27:23Z",
      "side": 1,
      "message": "Alright, then I\u0027ll guess we\u0027ll have to bundle the supported ansible versions in the zuul-executor package.",
      "parentUuid": "3f79a3b5_7d122058",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_bbf2c869",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-12T04:27:23Z",
      "side": 1,
      "message": "We might not want to have a fully-fledge virtualenv per ansible version. Could we make zuul-executor just starts ansible-root/\u003cminor-version\u003e/bin/ansible-playbook with PYTHON_PATH\u003dansible-root/\u003cminor-version\u003e/python\u003cpython-version\u003e/site-packages/ansible?\n\nLike that we can still share the common libraries with the host site packages.",
      "range": {
        "startLine": 76,
        "startChar": 35,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f769fc5_ef9281f6",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 24162
      },
      "writtenOn": "2019-01-02T13:20:39Z",
      "side": 1,
      "message": "One virtualenv for each ansible version is a must, but sharing common libs would be achieable by creating these venvs with --use-sytem-site-packages.\n\nDifferent versions of ansible are likely to have conficting requirements, clearly not doable in another way. We may even use different python interpreters for each python version.",
      "parentUuid": "3f79a3b5_bbf2c869",
      "range": {
        "startLine": 76,
        "startChar": 35,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f769fc5_38c1982f",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-02T20:54:58Z",
      "side": 1,
      "message": "Internally, there is already a Job.warnings variable that will emit warnings as comments to the code review system.  I think we can use that as well.",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}