{
  "comments": [
    {
      "key": {
        "uuid": "1f769fc5_18c61c4a",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-02T20:54:58Z",
      "side": 1,
      "message": "How will this happen?  Should we go ahead and switch to using Dockerfiles to build the images instead of pbrx, so that we can add the additional venvs?",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffd0ebdf_b8e2c12e",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 9311
      },
      "writtenOn": "2019-01-03T02:28:15Z",
      "side": 1,
      "message": "Should we even support on-demand installation? That doesn\u0027t looks very stable for a CI system where operators likely wants stability and reproducibility...",
      "parentUuid": "1f769fc5_18c61c4a",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_db0432c9",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-08T16:25:31Z",
      "side": 1,
      "message": "On-demand (aka on startup installation) is probably the easiest way for zuul quick starters. However we also could just provide a script or zuul command that does this that needs to be called before startup.\n\nI think this script would also be the way to install ansible during a container image build. Monty will kill me, but I\u0027m also in favour of plain old Dockerfiles as that\u0027s a de-facto standard of building docker images.",
      "parentUuid": "ffd0ebdf_b8e2c12e",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_2592fdf7",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 3099
      },
      "writtenOn": "2019-01-08T15:40:56Z",
      "side": 1,
      "message": "This seems potentially very dangerous, and forces us to stay on top of ansible changes very closely (not arguing against it, just pointing it out). For example, ansible deprecates/removes a config option that we are currently writing out to ansible.cfg, and we are suddenly broken if we aren\u0027t staying ahead of the changes.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_a0a49b09",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-08T15:46:44Z",
      "side": 1,
      "message": "Maybe there was a misunderstanding. I meant that at at some point in time we need to define and proper communicate we\u0027ll manually switch the default version to a newer (the newest at that point in time) version of ansible that is supported by zuul.\n\nOr alternatively we could make the default version configurable so we don\u0027t have to synchronize that step with the world (and if no default version is configured it needs some default value like the latest supported version).",
      "parentUuid": "dfd5e7cf_2592fdf7",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_0089e773",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 3099
      },
      "writtenOn": "2019-01-08T15:48:36Z",
      "side": 1,
      "message": "Oh, I see. I thought this was going to be a moving target, not one we set manually. That makes more sense.",
      "parentUuid": "dfd5e7cf_a0a49b09",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_a25e57df",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-09T14:30:19Z",
      "side": 1,
      "message": "Please note that this will make zuul packaging more difficult. For example rpm doesn\u0027t support multiple python library versions... Will zuul takes care of the security updates too?\n\nCould we have each executor support one ansible stream instead? They could announce it as part of the gearman function or something...",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_7d122058",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 16068
      },
      "writtenOn": "2018-12-09T16:49:25Z",
      "side": 1,
      "message": "Regarding packaging there are two options. The first would be to include the pre-installed venvs containing the ansible versions in the package (e.g. /usr/lib/zuul/executor-ansible/...). The second would be to just don\u0027t care about this in the package and let zuul handle the installations (e.g. use /var/lib/zuul/executor-ansible/...).\n\nIn case of zuul-managed installations my thought was that zuul will update all installations on startup and thus automatically handle security updates by restart. In the other case of unmanaged ansible installations it\u0027s of course the task of the deployer/packager to take care of this.\n\nRegarding one ansible version per executor, I\u0027m opposed to this idea because this will complicate the job scheduling and make deployment much more complicated compared to supporting all versions at once by each executor.",
      "parentUuid": "3f79a3b5_a25e57df",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_9bea6c74",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-12T04:27:23Z",
      "side": 1,
      "message": "Alright, then I\u0027ll guess we\u0027ll have to bundle the supported ansible versions in the zuul-executor package.",
      "parentUuid": "3f79a3b5_7d122058",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 71,
        "endChar": 75
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_ad2a62e4",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-01-08T00:23:10Z",
      "side": 1,
      "message": "We probably want to use the python3 venv module, https://docs.python.org/3/library/venv.html, and not the virtualenv tool for this. Reduces dependencies and virtualenv as a tool seems to be getting less attention as we near the python2 EOL date.",
      "range": {
        "startLine": 71,
        "startChar": 64,
        "endLine": 71,
        "endChar": 74
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_cd0a4689",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-01-08T00:23:10Z",
      "side": 1,
      "message": "Small nit, we probably want to scope this to zuul specifically. Executor is generic enough that this may be confusing or result in collisions later.\n\nPerhaps zuul-executor-ansible or use /var/lib/zuul/executor-ansible. This second choice matches the existing dir structure in /var/lib/ for zuul.",
      "range": {
        "startLine": 75,
        "startChar": 29,
        "endLine": 75,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_7003f243",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-01-08T04:41:26Z",
      "side": 1,
      "message": "oops, of course",
      "parentUuid": "dfd5e7cf_cd0a4689",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f79a3b5_bbf2c869",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 9311
      },
      "writtenOn": "2018-12-12T04:27:23Z",
      "side": 1,
      "message": "We might not want to have a fully-fledge virtualenv per ansible version. Could we make zuul-executor just starts ansible-root/\u003cminor-version\u003e/bin/ansible-playbook with PYTHON_PATH\u003dansible-root/\u003cminor-version\u003e/python\u003cpython-version\u003e/site-packages/ansible?\n\nLike that we can still share the common libraries with the host site packages.",
      "range": {
        "startLine": 76,
        "startChar": 35,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f769fc5_ef9281f6",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 24162
      },
      "writtenOn": "2019-01-02T13:20:39Z",
      "side": 1,
      "message": "One virtualenv for each ansible version is a must, but sharing common libs would be achieable by creating these venvs with --use-sytem-site-packages.\n\nDifferent versions of ansible are likely to have conficting requirements, clearly not doable in another way. We may even use different python interpreters for each python version.",
      "parentUuid": "3f79a3b5_bbf2c869",
      "range": {
        "startLine": 76,
        "startChar": 35,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffd0ebdf_d8a1c597",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 9311
      },
      "writtenOn": "2019-01-03T02:28:15Z",
      "side": 1,
      "message": "I hope we\u0027ll be able to use shared dependencies with a single python interpreters, it seems suboptimal if zuul-executors requires different python version and multiple copies of the same libraries...\n\nMy concern with a virtualenv is that it copies the pythonX.Y binary executables, in which case the default location should be /usr or /opt.",
      "parentUuid": "1f769fc5_ef9281f6",
      "range": {
        "startLine": 76,
        "startChar": 35,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_2d275215",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-01-08T00:23:10Z",
      "side": 1,
      "message": "I think this clarifies the meaning of on-demand installation as specified above. Basically it is on demand at executor startup and not left for later (like when the first job that needs that version of ansible runs). I don\u0027t think we should wait until a job runs to on demand install ansible, but installing ansible on executor startup (as well as upgrading them) seems fine.",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd5e7cf_4d3bb637",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-01-08T00:23:10Z",
      "side": 1,
      "message": "Python setuptools has in the past broken on symlinks inside python packages. We should test that these don\u0027t pose a problem when we set them up ( I want to say they are fine in modern setuptools so would only be a very old setuptools problem ).",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f769fc5_38c1982f",
        "filename": "doc/source/developer/specs/multiple-ansible-versions.rst",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-01-02T20:54:58Z",
      "side": 1,
      "message": "Internally, there is already a Job.warnings variable that will emit warnings as comments to the code review system.  I think we can use that as well.",
      "revId": "43f0d06cd1960f94c83fca7dd090f3119679615a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}