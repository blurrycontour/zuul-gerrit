{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89815822_53b198d1",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-05-22T12:32:07Z",
      "side": 1,
      "message": "I can\u0027t tell how the 3 scopes map to the use cases below. It looks like the developer could be split in two categories: maintainer and contributor. That way I guess the individual change scope is for contributors and the pipeline details is for maintainers?",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61c1ee0b_bf3640f9",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-05-24T10:20:28Z",
      "side": 1,
      "message": "The use cases below don\u0027t necessarily fit to a single scope mentioned here. Maybe it is a bit misleading if we split the use cases by role. I started with those as \"user stories\" and those typically include the role of the user. However, after writing them down I found that they were a little short for user stories, so I rephrased it to \"use cases\".\n\nNow regarding the scopes/roles: The idea behind these scopes is to explain the problem I see with the current status page and how it might be improved. Currently, the status page shows a lot of data and I think it could be improved by splitting those data in different scopes - some scopes are more relevant for \"operator-like\" roles while others are more relevant for \"developer-like\" roles. \"operator\" and \"developer\" are no fixed terms here, it was just the first thing that came to my mind.\n\nSo my rough idea is: While \"operators\" are more interested in the overall state of the tenant, they often use the status page as entry point to Zuul (1. scope). So the data that is shown there should - in my opinion - give a good overview about the tenant, but should not distract with too much detail. \"Developers\" on the other hand usually have a change they are currently developing and are interested in the state of this change. They usually submit their change to some kind of versioning system (like github or gerrit) and enter the Zuul UI from there (3. scope). The 2. scope comes in between those. It provides more details on a single pipeline, shows the changes in their context and serves as a transition point between the 1. and 3. scope.\n\nMaybe I should add some of this information to the spec to make it more clear what the scopes/roles are about. However, they are no fixed terms and mainly used as an explanation.",
      "parentUuid": "89815822_53b198d1",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b599f5d_e0bc78de",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-06-04T16:52:27Z",
      "side": 1,
      "message": "I see, thanks, that makes sense. My concern then is that I think we need to consider a maintainer role for the pipeline scope (e.g. the status of the gate/periodic) vs a contributor role for the individual change.",
      "parentUuid": "61c1ee0b_bf3640f9",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a08c776c_22ded0c1",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-12T20:19:54Z",
      "side": 1,
      "message": "It might also be good to show when a reconfiguration is in progress (and possibly when it started). Sometimes we\u0027re confused why things haven\u0027t taken effect yet and that is due to things being in process.",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5df78321_2323fba8",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-06-14T05:41:57Z",
      "side": 1,
      "message": "Good idea, I think we also got this request from some of our projects. However, this would require a backend change as this data (when a reconfiguration is ongoing) is not available yet. I\u0027ll add this use case.",
      "parentUuid": "a08c776c_22ded0c1",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13107100_6225caa8",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-05-22T12:32:07Z",
      "side": 1,
      "message": "Not sure it is worth duplicating monitoring data in here, but it would be nice to know for a given pipeline:\n- if it is empty, when was the last time an item was processed?\n- the number of item that was processed\n- the buildset success/failure ratio",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38344c5f_a9b2f2ad",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-12T20:19:54Z",
      "side": 1,
      "message": "I\u0027m not sure the buildset success/failure ration is going to be useful over time for installations like OpenDev\u0027s. Gates break regularly due to external factors for example. The first time this happens you\u0027ll get a good \"oh the ratio changed\" indication. But months later after this has occurred enough the ratio changes will just be noise.\n\nThis information is also not that important to zuul operators. I don\u0027t really care too much if people write jobs that fail a lot as long as zuul is accurately running the jobs and reporting the results. What we do care about as operators is whether or not hte system is failing leading to inaccurate results. But that won\u0027t be possible to determine via a pass/fail ratio.",
      "parentUuid": "13107100_6225caa8",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecc6c88b_47e1b840",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-06-14T05:41:57Z",
      "side": 1,
      "message": "I\u0027m also not sure if we should show that information in Zuul itself. Especially as this might also require some backend changes first to make the data available. Maybe when the first iteration of \"Status UI changes\" is done, we can think about further improvements and if something like this would be helpful or not?",
      "parentUuid": "38344c5f_a9b2f2ad",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7dceefc_8d17f02c",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-06-12T20:19:54Z",
      "side": 1,
      "message": "Another use case that would be good to capture for developers is trying to better expose why things are not yet running. Whether that is waiting for a parent job or artificat dependency or nodes haven\u0027t been allocated or we are outside of the queue window etc one of the most common things we answer questions about in OpenDev is \"why did my jobs not run\" or \"why is my job not running yet\".\n\nThis next idea is probably well beyond the scope of this spec, but it might be cool to have a \"recent events processed by zuul and reason for action taken\" page in the dashboard somewhere. Then when we don\u0027t run jobs for a change we can have an entry that says something like \"for patchset 2 created on change 123456 no jobs were queued because no jobs matched\". Probably don\u0027t need to have records for the positive case since those will show up in the normal status dashboards. Think of this as a brainstorm and not anything I expect to get done as part of this spec.",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22e1d631_0f0b071b",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-06-14T05:41:57Z",
      "side": 1,
      "message": "1. I\u0027ll add this to the spec. Just for clarification (not relevant to the spec): Do you see this as fulfilled in the way it\u0027s displayed in the current status page or do you think this could need some improvement and we should show this information in a different way (e.g. to be easier accessible)?\n\n2. I think this point is indeed out of scope for this spec, so I will not add it here. This might be worth elaborating as one of the next \"UI improvements steps\" after the status page is done. It might even be worth its own spec ;-)",
      "parentUuid": "f7dceefc_8d17f02c",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0618554_b813bf07",
        "filename": "doc/source/developer/specs/status-page-2.0.rst",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-06-14T05:59:31Z",
      "side": 1,
      "message": "re. 1. I think we could show the reason why a job is queued, waiting, ... a bit more prominently than it currently is (just via the tooltip). Maybe keep it as a tooltip in the pipeline view, but expand that on the \"running change\" page?!",
      "parentUuid": "22e1d631_0f0b071b",
      "revId": "56a3a7a2fd72d6583e664b1d3ba78aea2f390bba",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}