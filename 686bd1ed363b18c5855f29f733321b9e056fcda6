{
  "comments": [
    {
      "key": {
        "uuid": "AAAAOX//9WM\u003d",
        "filename": "zuul/scheduler.py",
        "patchSetId": 8
      },
      "lineNbr": 205,
      "author": {
        "id": 1
      },
      "writtenOn": "2013-04-04T15:35:47Z",
      "side": 1,
      "message": "Since this doesn\u0027t actually create a copy, I don\u0027t think this is really doing anything.  I think it\u0027s safe to just keep using config_project and drop new_config project.",
      "revId": "686bd1ed363b18c5855f29f733321b9e056fcda6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOX//7J8\u003d",
        "filename": "zuul/scheduler.py",
        "patchSetId": 8
      },
      "lineNbr": 205,
      "author": {
        "id": 2475
      },
      "writtenOn": "2013-04-05T19:56:44Z",
      "side": 1,
      "message": "Ah python assign by reference ...   Patchset 1 was directly changing config_project, you then requested to do a copy to avoid changing config_project directly.  But I am a newbie and did not actually do a copy :-]\n\nRef: line 208 of:\nhttps://review.openstack.org/#/c/21881/1/zuul/scheduler.py,unified\n\nJames wrote:\n------\nstart a new dictionary here with a copy of config_project so you don\u0027t have to modify config_project. call it new_config_project, or something.\n------\n\nI guess I should:\n\n  new_config_project \u003d config_project.copy()",
      "parentUuid": "AAAAOX//9WM\u003d",
      "revId": "686bd1ed363b18c5855f29f733321b9e056fcda6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOn///nU\u003d",
        "filename": "zuul/scheduler.py",
        "patchSetId": 8
      },
      "lineNbr": 205,
      "author": {
        "id": 1
      },
      "writtenOn": "2013-04-08T21:30:34Z",
      "side": 1,
      "message": "Heh, I guess you caught me in a contradiction.  Sorry.\n\nBut you actually have convinced me (with code and tests) that it\u0027s okay to modify the existing dictionary in this case, so I think I\u0027m going to stick with my latest comment and say just modify it; don\u0027t try to copy.\n\n(But for reference, see the deepcopy python module for how to get a \u0027deep\u0027 copy of a nested python data structure.)",
      "parentUuid": "AAAAOX//7J8\u003d",
      "revId": "686bd1ed363b18c5855f29f733321b9e056fcda6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}