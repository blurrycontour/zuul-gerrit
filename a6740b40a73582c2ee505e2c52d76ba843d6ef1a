{
  "comments": [
    {
      "key": {
        "uuid": "9abb7d3a_c98242c8",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 7069
      },
      "writtenOn": "2016-06-03T01:26:55Z",
      "side": 1,
      "message": "This will only break one level.. I think we might need the while to check if the process is still running otherwise I don\u0027t think we\u0027ll ever exit Console() cleanly.",
      "range": {
        "startLine": 60,
        "startChar": 16,
        "endLine": 60,
        "endChar": 21
      },
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_e9fe2637",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 7069
      },
      "writtenOn": "2016-06-03T01:33:24Z",
      "side": 1,
      "message": "err, I\u0027m clearly under caffeinated. Ignore this.",
      "parentUuid": "9abb7d3a_c98242c8",
      "range": {
        "startLine": 60,
        "startChar": 16,
        "endLine": 60,
        "endChar": 21
      },
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_b7af5a93",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-06-02T23:44:28Z",
      "side": 1,
      "message": "Should we identify the lines or line numbers where the trailing newline is present? Hard to debug if we add in the newline and don\u0027t identify where we did that.",
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_377ecaae",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-06-02T23:52:58Z",
      "side": 1,
      "message": "I only expect it at the final line (more or less by definition).",
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_5706ee20",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-06-02T23:55:08Z",
      "side": 1,
      "message": "Good point, readline should read until newline or EOF meaning the last line would have been the one without a newline.",
      "parentUuid": "9abb7d3a_377ecaae",
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_492012f8",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 7069
      },
      "writtenOn": "2016-06-03T01:26:55Z",
      "side": 1,
      "message": "Should we re-join the thread here to make sure the console fd in follow() is closed?",
      "range": {
        "startLine": 84,
        "startChar": 10,
        "endLine": 84,
        "endChar": 14
      },
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abb7d3a_107467fb",
        "filename": "zuul/ansible/library/zuul_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-06-03T04:40:47Z",
      "side": 1,
      "message": "Nope.  If the process exited while one of its children is holding its stdout open, the follow thread will never exit.  That\u0027s the bug this patch fixes.  In that case, wait() will return here, we will open a second fd for the console log, write something to it (the follow thread is *probably* mostly idle since our immediate process died -- at least, that has been the case in all instances in which the bug has happened -- worst case, if it isn\u0027t, we will get two interleaved log lines which is not the end of the world) and then this function will return and the whole program will exit.  At that point, the file descriptor in follow will be closed.  :)\n\nIf you want, I will be happy to add a comment as to why we should not t.join().",
      "revId": "a6740b40a73582c2ee505e2c52d76ba843d6ef1a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}