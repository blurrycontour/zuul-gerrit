{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_67d4614c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-12-02T17:04:10Z",
      "side": 1,
      "message": "For future reference, feel free to use more than 50 chars on lines\nbeyond the first one.  :)  (Not a minus one.)",
      "revId": "fb8fcaf3466648108e9f41843254ffa4c9285063",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_07e32d36",
        "filename": "doc/source/admin/drivers/pagure.rst",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-12-02T17:04:10Z",
      "side": 1,
      "message": "This paragraph says that the source whitelist is optional, but I don\u0027t see any code for that.\n\nI\u0027m really uncomfortable with source whitelisting.  It\u0027s not at all secure, and it\u0027s fragile.  I might be convinced that it\u0027s an okay option to have for debugging or something, but I don\u0027t think we can recommend it for production.  I\u0027d rather we not have it at all.  Other similar systems manage to have cryptogrophic verification without this.\n\nUltimately what\u0027s needed is for Pagure to supply a token along with every webhook that it sets up that allows recipients of that webhook to verify the validity of supplied data.  Is there something like that?  If not, would the Pagure maintainers be open to adding it?",
      "revId": "fb8fcaf3466648108e9f41843254ffa4c9285063",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_b8d0daf5",
        "filename": "doc/source/admin/drivers/pagure.rst",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 6889
      },
      "writtenOn": "2019-12-09T11:01:00Z",
      "side": 1,
      "message": "Thanks for the review, yes that\u0027s a mistake from a copy/paste from a previous abandoned patch.\n\nOk, yes, having only the whitelist system will be flawed. I will bring back the token fetching from the API and keep both solutions. If a webhook source is not part of the whitelist then zuul-web will try to fetch the webhook token and verify the signature. I\u0027ll advice in the doc that the whitelist system is only for debugging purpose and should not be used in production.\n\nI want to keep both because today, on Pagure, to fetch the webhook token (generated randomly/by project server side), the API client needs to be a collaborator with *admin* right level to the project. This is clearly a blocker IMO (and the issue have been raise the Fedora community) thus in the meantime I\u0027ve opened an RFE https://pagure.io/pagure/issue/4680.",
      "parentUuid": "3fa7e38b_07e32d36",
      "revId": "fb8fcaf3466648108e9f41843254ffa4c9285063",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}