{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6ff7c3cb_7072abb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1
      },
      "writtenOn": "2025-02-27T18:30:54Z",
      "side": 1,
      "message": "You probably meant \"significant\".  Or \"non-trivial\" or \"not-insignificant\".  :)  Anyway, the meanining is obvious; no need to fix.\n\nIt\u0027s probably only slow with lots of pipelines (or lots of tenants+pipelines if it\u0027s a global semaphore).  I wonder if we could keep track of which pipelines are waiting for which semaphores (maybe a treecache?) and distribute the events only to those pipelines.",
      "revId": "521fa57ce883bf8cbfa84ad0afa1cd8a4ad4ee3c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb0bce29_01f0c075",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 27582
      },
      "writtenOn": "2025-02-28T11:16:16Z",
      "side": 1,
      "message": "Yep, that should be \"significant\", otherwise there is point to have this change.\n\nThe idea to use a tree cache to check whether there are any pipelines waiting on a semaphore sound interesting, but maybe there would also be a way to know exactly which pipeline should receive the event (semaphore acquire priority). Usually when you have a semaphore in one pipeline it tends to stay there as long as there are other items waiting on the same semaphore.\n\nThe issue we observed was more due to a lot of semaphore release events leading to each one being send to all pipelines. This is also the reason for https://review.opendev.org/c/zuul/zuul/+/942191",
      "parentUuid": "6ff7c3cb_7072abb9",
      "revId": "521fa57ce883bf8cbfa84ad0afa1cd8a4ad4ee3c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "521fa57ce883bf8cbfa84ad0afa1cd8a4ad4ee3c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "521fa57ce883bf8cbfa84ad0afa1cd8a4ad4ee3c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "521fa57ce883bf8cbfa84ad0afa1cd8a4ad4ee3c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}