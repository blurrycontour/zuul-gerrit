{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1186b803_6cacb954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-10-09T18:38:42Z",
      "side": 1,
      "message": "I\u0027ll be honest I mostly skimmed the actual driver implementation as I know this is largely and adaptation of existing code in nodepool. Instead I tried to review the new code whcih is primarily tests and fixtures.\n\nI did find one thing that may create race condition problems in the test case which I noted inline but otherwise this looks how I expected it to.",
      "revId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b604f43_caf2dea8",
        "filename": "tests/unit/test_openstack_driver.py",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-10-09T18:38:42Z",
      "side": 1,
      "message": "Do we need to wait for settled or similar here to ensure the nodeset request state has moved to fulfilled instead of requested? I suspect in the test framework this is very fast but it could still race depending on thread scheduling?",
      "revId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fad0db3c_c1fc6849",
        "filename": "tests/unit/test_openstack_driver.py",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-10-09T18:45:50Z",
      "side": 1,
      "message": "The requestNodes method actually does wait for the result event for the request, so we should be stable here.  waitUntilSettled would actually be a noop because of the way requestNodes uses the pipeline lock to get the result event.",
      "parentUuid": "9b604f43_caf2dea8",
      "revId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b58dd62_9930249a",
        "filename": "tests/unit/test_openstack_driver.py",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-10-09T18:38:42Z",
      "side": 1,
      "message": "See above. We wait at this point after accepting the nodeset on the client side. This makes the refresh below non racy I think.",
      "revId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ab78421_4c273ac9",
        "filename": "tests/unit/test_openstack_driver.py",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-10-09T18:45:50Z",
      "side": 1,
      "message": "TBH, I\u0027m not sure the wait is needed here; I think the action we\u0027re checking below is actually synchronous.  Doesn\u0027t hurt though.",
      "parentUuid": "4b58dd62_9930249a",
      "revId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7c802b4e888d83c6e2ef5d185a907c9ee9c1663d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}