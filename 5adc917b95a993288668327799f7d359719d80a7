{
  "comments": [
    {
      "key": {
        "uuid": "93dd738a_f3babcf0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "I love that this is getting a real use now.  We added the uuid to the layout originally just to help in debugging memory leaks, and hopefully this change will continue to reduce the chances of that.  :)",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b372e27_30faf9e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "I\u0027m not following this.  Where does the executor client need this?  I see a path from the manager to the model.  Plus, anything with the job graph should have access to the item and therefore pipeline, so should have access to the layout cache.  Maybe we can simplify this?",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0928624a_07f094ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "The executor client needs the project metadata for constructing the gearman params (see changes in executor/common.py). If we require a layout in order to access the project metadata, it means we MUST (re-)create a layout on all schedulers.\n\nOut working assumption is that we can limit the use of the layout to job freezing. In that case we only need to re-create an item\u0027s layout on another scheduler if a following item needs it as a fallback.\n\nBesides the scale-out scheduler use-case, storing the project metadata independent of the layout is also required for the optimization in I9b9657a18664e515ecc11a47f8624b5f248084c4.",
      "parentUuid": "7b372e27_30faf9e8",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad6df27_d12a7d92",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-31T14:12:33Z",
      "side": 1,
      "message": "That makes sense, but let\u0027s change the commit message so that it says that.  The executor client *does* have access to the layout, so it\u0027s confusing as written.  Saying \"we want to restrict layout access to job freezing so that fewer actions (like creating a build request after a job is frozen) require access to it\" would help reviewers and others in the future looking at the git history.  :)",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de35a63e_9f75fe28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-06-01T12:57:52Z",
      "side": 1,
      "message": "Updated the commit message to make the intention more clear.",
      "parentUuid": "bad6df27_d12a7d92",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e76036c0_f6bb9902",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 2414,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "This seems counter-intuitive to me.  Why are we specifying a universally unique id for a new object.  what are we reusing here?",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb722a80_73fa8286",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 2414,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "This is for the case when we created a layout for this item on one scheduler but it is later required on a different one. Initially the item\u0027s layout UUID will be None, so a new layout UUID must be created. If the layout UUID is already set, we need to re-create the layout and since it\u0027s the \"same\" layout (though a different object) we also use the same UUID. The item\u0027s layout UUID should only change if its position in the queue changed or it was reset during a re-enqueue.",
      "parentUuid": "e76036c0_f6bb9902",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b5a3584_18593249",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 2414,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-31T14:12:33Z",
      "side": 1,
      "message": "This change seems to be reaching pretty far forward, in that it\u0027s making changes in aid of future changes, but doesn\u0027t fully describe why.  This is a significant change in meaning for what a layout UUID is, so it\u0027s important to understand fully and document.\n\nWhy would another scheduler need to create that layout then?\n\nHow would it create the same layout given that the inputs may have changed?",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f48966e_664a063a",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 2414,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-06-01T12:57:52Z",
      "side": 1,
      "message": "I agree that this might be something that we should rather do in a later change when the context of why this is necessary is more obvious. I think I\u0027ll remove it as it is unrelated to the rest of this change.\n\nRe. why another scheduler would need to create the layout: it might be required as a fallback layout for following items. If item A\u0027s layout is created for job freezing on scheduler ONE and later a following item B\u0027s job graph is frozen on scheduler TWO we need to re-create the layout of item A on scheduler TWO as B needs it as fallback layout and it\u0027s not in the layout cache.\n\nRe. how we would create the \"same\" layout: I don\u0027t expect the inputs to change (the inputs being the chain of items ahead; position in the queue) and the tenant layout) without the layout UUID changing:\n\n1. In case the tenant layout changed we would re-enqueue the pipeline and with that reset the layout UUID to None (done in manager/__init__.py#61). If we need the layout again as a fallback for following items we will create a new layout (inputs changed) with a new UUID.\n\n2. In case of a gate reset (position in the queue changed) the pipeline manager will call resetAllBuilds() and with that also reset the layout UUID (see model.py#2359).\n\nDo you have any other inputs in mind that could lead to a different layout?",
      "parentUuid": "1b5a3584_18593249",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc33c839_31efe8ce",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "I\u0027m curious why you decided to put this on the manager instead of the pipeline itself?  Most of the \"runtime\" data are in the pipeline (the items themselves, for instance; and of course the layouts are right now since they\u0027re on the items).  It seems like it would have worked just as well either way.",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3404d99e_3cfe2cbd",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "It feels to me like the layout cache is less of a runtime data thing and more of an implementation detail with most of the \"mechanics\" in the manager. I don\u0027t have a strong opinion on where to put the cache, so I\u0027m fine with moving it to the pipeline if you prefer that.",
      "parentUuid": "cc33c839_31efe8ce",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2044c8a5_0ca5f587",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 695,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "This is a good comment, but on a first pass, because of the way it\u0027s written and since it appears at the top of the method, it looks like it\u0027s saying that this method does the opposite of what it does.  I think if you said \"First collect all the config....\"  and then added a comment below saying \"Then find the current errors which aren\u0027t also in the parent\" or something like that...",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d8e470b_8ef55894",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 695,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "Ack, done with the next PS.",
      "parentUuid": "2044c8a5_0ca5f587",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aa3cfb6_6deb0c33",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 2415,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "This comment could use more information about why it must be independent of the layout due to the buildset global repo state.  If we\u0027re at this point, we should have a layout that was build from the item\u0027s merge job.  (And obviously this is the thing I was suggesting we might be able to avoid in the comment on the commit message.)",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc61583d_16c09f22",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 2415,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "Yea, I think this should be rephrased as the reference to the global repo state is a bit misleading.\n\nThe thing is that we might NOT have a layout in certain situations:\n\n1. a layout can be reset during re-enqueue w/o re-freezing the job graph. Since we want to avoid re-creating the layout just for the project metadata (that\u0027s the optimization in I9b9657a18664e515ecc11a47f8624b5f248084c4) we store it on the job graph instead.\n\n2. if we freeze the job graph on one scheduler but job execution (which needs the project metadata) is requested on a different scheduler we can avoid re-recreating the layout.",
      "parentUuid": "4aa3cfb6_6deb0c33",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da8ce48_56966d59",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 2415,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-31T14:12:33Z",
      "side": 1,
      "message": "That makes sense; another way to put it is that the project metadata are needed in order to run the jobs in the job graph, and are therefore arguably part of the frozen job graph.\n\nI think your updated comment helps, thanks.",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a8b3740_c9a512fc",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 3284,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "All of these places where we pass in the layout and the layout ahead seem like places where errors could easily sneak in.  Can we keep something like the old code here and obtain the layout ahead here?\n\nA getLayoutAhead() method seems like it would be really nice (whether that\u0027s on QueueItem or Pipeline, or PipelineManager).",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ae8bc93_e1e0faae",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 3284,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "Makes sense. I think we can simply use the manager\u0027s getFallbackLayout() method.",
      "parentUuid": "6a8b3740_c9a512fc",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2254ee5b_36d5bfef",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 4563,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-05-27T21:36:59Z",
      "side": 1,
      "message": "As mentioned elsewhere, the idea of having duplicate uuids seems counterintuitive.",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfe93719_533f9786",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 4563,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-05-31T07:58:49Z",
      "side": 1,
      "message": "See my reply to the other comment. Maybe it makes sense to have a comment here explaining why we allow setting the layout UUID.",
      "parentUuid": "2254ee5b_36d5bfef",
      "revId": "5adc917b95a993288668327799f7d359719d80a7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}