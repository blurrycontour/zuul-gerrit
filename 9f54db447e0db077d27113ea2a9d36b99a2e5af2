{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aff65b3b_510a11e5",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 2
      },
      "writtenOn": "2024-06-15T19:41:43Z",
      "side": 1,
      "message": "I don\u0027t have a great suggestion here - but the first time I read this I got confused and thought it was using Zuul as an example of a project that needed this facility. But of course Zuul doesn\u0027t have submodules - and that is not what you are saying. You are talking about an theoretical project with these characteristics and how it would be managed by zuul today.\n\nMight just be my brain having trouble reading the english. #notaminusone",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ab352ac_d0f7f4c3",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-15T19:57:32Z",
      "side": 1,
      "message": "Oh yep that was bad englishing.  The point I was trying to convey was that this is an example I\u0027m setting up with the current state of the world, not an example of the proposed change.  Mostly I added it because the immediately preceding sentence was a one-line summary of the proposed change, and I thought it might lead people to think this was an example of the proposed change.\n\nSo it should probably say:\n  Before we examine the proposed change, let\u0027s consider an example as things stand today:\n\nI\u0027ll incorporate that into the next update.",
      "parentUuid": "aff65b3b_510a11e5",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aff6dfd_6b76c80b",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:42:12Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "aff65b3b_510a11e5",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aabad30_4d3ecb45",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-06-17T05:52:45Z",
      "side": 1,
      "message": "This would also match the config-project(s) and sounds like it would not work with the behavior described further down (see my next comment).",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 103,
        "endChar": 8
      },
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98eee152_9d396127",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:41:21Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "9aabad30_4d3ecb45",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f42138f_252bf6f5",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:42:12Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "9aabad30_4d3ecb45",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "692ee5ea_1dfa0d2a",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:42:12Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "9aabad30_4d3ecb45",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca1d213b_d5265120",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:42:12Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "9aabad30_4d3ecb45",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fdd2879_24ba44ee",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-06-17T05:52:45Z",
      "side": 1,
      "message": "Doesn\u0027t this complicate the regex matching? In case I want to exclude all but the config projects, this would probably require a very complicated regex instead of just `^.*$` as mentioned above.\n\nSo maybe instead of an error in case the regex also matches a config-project, we should only consider untrusted-projects by convention and ignore the rest.\n\nOtherwise we\u0027d probably need a way to negate the regex (similar to other places in the Zuul config) as RE2 doesn\u0027t allow negative lookahead.",
      "range": {
        "startLine": 131,
        "startChar": 49,
        "endLine": 132,
        "endChar": 18
      },
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe35c51_b3504232",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:41:07Z",
      "side": 1,
      "message": "That works for me.",
      "parentUuid": "3fdd2879_24ba44ee",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e2deac1_72237015",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T14:51:26Z",
      "side": 1,
      "message": "If we allow the tenant config yaml to include but ignore config-projects, that raises the question of what to do if the actual project stanza has a regex that includes a config-project.  I\u0027ve opted to say that is an error, for two reasons:\n1) It is our last opportunity to provide pre-merge feedback that the configuration may not operate as\nexpected.\n2) It\u0027s easier to automate the creation of multiple project stanzas inside the repo to work around the inability to construct a regex that matches everything but a config project.\n\nHowever, your original point still stands, just in a different place, and users won\u0027t be able to create a project stanza that matches \u0027.*\u0027 and have it implicitly only include untrusted-projects.\n\nI\u0027m open to the idea that we should relax the restriction there and have it be implicit as well, but I didn\u0027t want to go too far; this seems conservative and workable.  Thoughts?",
      "parentUuid": "3fdd2879_24ba44ee",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30694ace_89209923",
        "filename": "doc/source/developer/specs/configure-projects.rst",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-06-17T17:24:06Z",
      "side": 1,
      "message": "(I think we should decide this question regardless of the following, but nevertheless, I do think we should add \"negate\" support to both of the regular expressions here (tenant config and project stanza).  I think the end state in zuul should be that all regular expressions are strings or dicts with regex and negate keys.  But I agree that it\u0027s not ideal for that to be necessary in such a simple case, at least in the tenant config.)",
      "parentUuid": "5e2deac1_72237015",
      "revId": "9f54db447e0db077d27113ea2a9d36b99a2e5af2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}