{
  "comments": [
    {
      "key": {
        "uuid": "7a016987_c945d8b3",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-05-27T09:36:14Z",
      "side": 1,
      "message": "(nit) I would have kept this as #3/4 personally",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a016987_4c84080a",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 215
      },
      "writtenOn": "2015-05-28T21:55:32Z",
      "side": 1,
      "message": "I considered that, but it is more correct to split them, as it will never try all four, it really is a choice followed by a choice.",
      "parentUuid": "7a016987_c945d8b3",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_d4887173",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-07-02T16:39:52Z",
      "side": 1,
      "message": "This logline isn\u0027t always correct as self.branch may not be what we are checking against as it may be zuul_branch instead.\n\nI think you want to log this message using indicated branch as the missing branch then set it to master after.",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_74e645e9",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-07-02T16:39:52Z",
      "side": 1,
      "message": "Noting a subtle change in behavior from the old code here. Previously this code fetched the first zuul ref then the second if the first failed. Now we infer a single ref to attempt fetching of. Not sure if that matters (need to think about it a bit more) but pointing it out to help other reviewers.",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_f42ed5a3",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 5263
      },
      "writtenOn": "2015-07-02T17:04:20Z",
      "side": 1,
      "message": "Yes, so the matrix is something like:\n\n             zuul_ref branch\n            -----------------\n  indicated |   1   |   3   |\n            -----------------\n  master    |   2   |   4   |\n            -----------------\n  previous priority order: 1, 2, 3, 4\n  new priority order: 1 if 3 exists else 2, 3, 4\n\nI guess the regression questions boil down to...\n\n1. Can we possibly use a zuul_ref for the indicated branch if the indicated branch does not exist?\n\n2. Will there ever be a zuul_ref for master when there\u0027s not a zuul_ref for the indicated branch?\n\nI\u0027m pretty sure the answer to 1. is \"no.\" I think the answer to 2, is also \"no\" but would like to see some additional analysis, particularly around dependent pipelines with multi-branch jobs and changes on more than one branch of different repos.",
      "parentUuid": "ba3cc151_74e645e9",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_5dbfa560",
        "filename": "zuul/lib/cloner.py",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 5263
      },
      "writtenOn": "2015-07-02T17:24:45Z",
      "side": 1,
      "message": "Er, the more I stare at this, the more I think the new priority order simplifies to just \"1, 3, 2, 4.\" My regression questions however remain the same.",
      "parentUuid": "ba3cc151_f42ed5a3",
      "revId": "f52e58c5a3c9568bb9d08629721671071a6f45be",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}