{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "698fa946_9337c99d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "I think there is a bug in at least one of my comments.",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7404be17_e3122957",
        "filename": "tests/fixtures/layouts/github-schema.yaml",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "No comment for this being deprecated now? It should produce a warning right?\n\nAdditionally should we have tests for unlabel, require-status, and requested?",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7a996b2_2fc1e4e3",
        "filename": "tests/fixtures/layouts/github-schema.yaml",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "Yes, and it is covered in the test.  If there were a comment here it would say \"as a list is deprecated\"\n\nI can add tests for the others.",
      "parentUuid": "7404be17_e3122957",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6be2664_eee6da72",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "This block checks if require-status is in trigger, but then enters the unlabel context. I think this is bad copy paste and this block needs to be fully updated for require-status.\n\nAlso a good reason to add the suggested tests in the config file comment I left.",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f55ca1c5_8a07ff3c",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "Yes, should fix; the test won\u0027t actually detect the error though; it will just point at the start of the trigger definition if it can\u0027t find the attribute.",
      "parentUuid": "d6be2664_eee6da72",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1edc6eca_a2e42e61",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 106,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "I\u0027m not sure where I see this being enforced. The schema at the end of this file allows a str or list for action.",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4673ae45_807c2488",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 106,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "This comment is referring to the code right here, not the schema.  The schema does indeed allow both things, but the original backwards compat code assumed that action would be a string, and only acted if it was a string.  That was a bug, so this movement of the code keeps bug compatability.",
      "parentUuid": "1edc6eca_a2e42e61",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "362408ac_845a5e1d",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "Nit we also need to modify this new schema to disallow lists in some places when we stop allowing those fields to be a list (for example event).",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20be8ef4_91539546",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "This schema does not allow event to be a list (lines 144-147 describe a choice among strings).",
      "parentUuid": "362408ac_845a5e1d",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c579520_012d4068",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "When we extend schemas and redefine entries like we do here for `vs.Required(\u0027event\u0027)` we\u0027re replacing the schema rules for that entry. Then we choose which rules we want to apply in validate right? we aren\u0027t creating some merge of the two rules?\n\nIf that is the case should we drop the `vs.Required(\u0027event\u0027)` entry above on line 144 to avoid confusion (we appear to override it in each of these special cases here and below)?",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60618311_2ead027f",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "It\u0027s basically a dict merge, so yes, it overwrites event.\n\nIf you follow the validate method below, we validate progressively based on the event type.  We get much better errors by having voluptuous check that first.  I think this produces the best outcome short of implementing all the checks manually.",
      "parentUuid": "0c579520_012d4068",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05112834_e909cbeb",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "Nit if we\u0027re making a fixup patchset can we update this comment to read a bit more clearly? I think we want `# This method could be a simple...`",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "775892db_c64b841e",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "05112834_e909cbeb",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29eda4b5_574fb284",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 221,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-29T23:35:14Z",
      "side": 1,
      "message": "This appears to be a redundant `event \u003d data.get(\u0027event\u0027)` line. \n\nAdditionally, event may still be a list right? Don\u0027t we need to loop over event if it is a list and do the checks below? Similar thing with action. Or are we hoping that people will get iterative errors and first fix the list problem then fix any deprecated event and action types?",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cbd0a18_d5682500",
        "filename": "zuul/driver/github/githubtrigger.py",
        "patchSetId": 4
      },
      "lineNbr": 221,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-03-01T00:36:59Z",
      "side": 1,
      "message": "I\u0027ll remove the redundant line.\n\nThe expectation is that folks will fix the list problem first, then see subsequent errors if any remain.  I don\u0027t think it makes sense to try to validate the stanza if it is a list (the whole problem with that is that it either works because it\u0027s simple, or it\u0027s nonsensical, so if there are any errors, we would probably throw way too many and they wouldn\u0027t make sense).",
      "parentUuid": "29eda4b5_574fb284",
      "revId": "11128a9eaf2a48713d6ed7a3575a70f8007705f8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}