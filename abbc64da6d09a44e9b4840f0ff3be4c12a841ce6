{
  "comments": [
    {
      "key": {
        "uuid": "12683858_660251fc",
        "filename": "zuul/scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 1967,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-09-14T23:40:05Z",
      "side": 1,
      "message": "It\u0027s worth thinking about whether we still need this, or if we can rely on the scheduler having already actually canceled the build.  This was added in I14a3ad24feffcee5e999bef30d7c774e4be4fb92 but with the queue in ZK now, we may not need it any more.",
      "revId": "abbc64da6d09a44e9b4840f0ff3be4c12a841ce6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f56d24e7_b4fd3428",
        "filename": "zuul/scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 1967,
      "author": {
        "id": 27952
      },
      "writtenOn": "2021-09-15T05:22:08Z",
      "side": 1,
      "message": "Thanks for the hint, I will try that out.",
      "parentUuid": "12683858_660251fc",
      "revId": "abbc64da6d09a44e9b4840f0ff3be4c12a841ce6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "924b6c64_d6e5ad2c",
        "filename": "zuul/scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 1967,
      "author": {
        "id": 27952
      },
      "writtenOn": "2021-09-16T07:04:40Z",
      "side": 1,
      "message": "Are we talking about an active canceling here? So the scheduler explicitly cancels the builds, but that wasn\u0027t working for paused builds correctly until https://review.opendev.org/c/zuul/zuul/+/667072?\n\nIf so, I think this should work fine with the builds in ZooKeeper, as the scheduler is either canceling (and deleting) those builds directly in case they are not locked or schedules a cancel event which should be picked up by the executor independently of the job being paused or not. This snipped here might also be relevant for this (resuming a paused job before it is aborted): https://opendev.org/zuul/zuul/src/branch/master/zuul/executor/server.py#L977",
      "parentUuid": "f56d24e7_b4fd3428",
      "revId": "abbc64da6d09a44e9b4840f0ff3be4c12a841ce6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c00ce01_60f52307",
        "filename": "zuul/scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 2002,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-09-14T23:40:05Z",
      "side": 1,
      "message": "It looks like this is the only place where build_request_ref is used.  The path is predictable, so maybe instead of passing it through ZK on the result object, we can just re-generate it here?",
      "revId": "abbc64da6d09a44e9b4840f0ff3be4c12a841ce6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "977ca228_86c9fc31",
        "filename": "zuul/scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 2002,
      "author": {
        "id": 27952
      },
      "writtenOn": "2021-09-15T05:22:08Z",
      "side": 1,
      "message": "That would work, but we would need to store the zone on the result event instead to generate the correct path. I thought I had a comment about that somewhere in this change, but it looks like I\u0027ve removed that already.",
      "parentUuid": "1c00ce01_60f52307",
      "revId": "abbc64da6d09a44e9b4840f0ff3be4c12a841ce6",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}