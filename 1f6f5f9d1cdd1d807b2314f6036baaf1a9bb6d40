{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3824c08_2b37482e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "This shows each queue one at a time, from left-to-right and top-to-bottom.  That\u0027s pretty neat in the gate pipeline view, but for a check pipeline it seems a little weird.  There really is an order to all the items/queues in the pipeline (and that\u0027s important to both users and operators when related to things like node requests or semaphores), but this does seem to hide it a bit.\n\nIf we structure it this way, there will be a learning curve as people realize that not only is there an order to the items in each queue, there is as order to the queues as well, so to see the overall order one reads each queue from left-to-right, then each item in the queue from top-to-bottom, then line-wrapping the queues from top-to-bottom.\n\nThat all becomes a little difficult when one of the queues is very long and the others are short.  Part of what makes this difficult is the design language on other sites like pinterest where unorderdered things of different sizes are thrown into a flex layout.  When we have queues of different sizes, it sort of looks like that, even though it isn\u0027t.  So you have to know that our layout is actually an ordered grid, not a random flex layout, in order to understand it.\n\nThe only idea I have right now to address this is to waste the extra screen width and just always have one column (though to be clear, I don\u0027t think the column should be the full width; I think we should have a max width of a few hundred pixels, then just margin after that).  I think that would be a positive change on the check pipeline, and a negative change on the gate pipeline.  I definitely don\u0027t think we should do something different for them, they should both display the same way.  A benefit of having only a single column would be supporting longer job names without wrapping.\n\nI do think we should decide deliberately whether we want to accept this extra bit of cognitive overhead for understanding pipeline sequencing or not.  I\u0027m on the fence and welcome other thoughts.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d579a74_cbd5712f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-07-08T13:36:34Z",
      "side": 1,
      "message": "I get the point that we might want to improve the layout to clearly show that a check pipeline has multiple queues, respectively that the items in check are independent of each other (running in parallel). I tried out different approaches in the beginning but none of them really worked and made the check pipeline look much weirder than it currently is ðŸ˜„\n\nIn the beginning I used a similar approach for the check pipeline by adding some space in between the queues in the check pipeline. However this looked weird - especially pipelines with a lot of items. One drawback was that I couldn\u0027t manage to get some kind of grid working. So either the beginning or the end of a line didn\u0027t match the previous one and also the items looked completely unordered. Something like the following (X stands for a queue item square/box):\n\nX  XX  X  XXX  X\n X  X  XX  X  X XX\nX  X  X  XX  X  X\n\nHowever this was also based on a flex-layout. I\u0027m pretty sure I also tried using a grid-layout but can\u0027t remember which problems I had with that.\n\nAnyway, if I understood your idea correctly you suggest to divide the space into different columns and show each queue in a single cell (so basically a grid ðŸ˜„). This might waste more space for many \"single change queues\", but maybe works better for aligning the spaces in between the queues and ensure that the items are arranged properly. I\u0027ll try a grid-layout again and see where this leads. Let me know in case I\u0027m on the wrong track here or totally misunderstood your comment.",
      "parentUuid": "a3824c08_2b37482e",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14a048ea_334eba40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-15T17:06:53Z",
      "side": 1,
      "message": "I\u0027m not entirely sure we do understand each other.  To over-simplify what I said:\n\nCurrently it looks like this: https://imgur.com/7CXcDjQ.png\n\nAnd it\u0027s not intuitive to know that 923759 is ordered after 909513 (for purposes of resource allocation, etc).\n\nThe only solution I can suggest to that is to use a single column, which can be simulated now by shrinking the window width; it looks like this: https://imgur.com/UZl1ves.png\n\nIt sounds like you are saying I was suggesting a grid which looks like https://imgur.com/7CXcDjQ.png but that\u0027s what is in the change now.\n\nYour diagram with the X\u0027s looks like the pipeline overview with the little squares, but that\u0027s not what I was talking about.  Maybe that\u0027s the source of the confusion?  I\u0027m talking about the pipeline details view where we actually see the subway-map view of changes in the pipeline.  That\u0027s the main subject of this change I think.  \n\n(However, completely separate from all of that, I do like the idea of visually separating the queues in the pipeline overview; I had been thinking along those lines too, but I don\u0027t think it\u0027s important to address right now.)",
      "parentUuid": "3d579a74_cbd5712f",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6f195f_3a52a612",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-07-24T12:44:50Z",
      "side": 1,
      "message": "Sry, I was indeed thinking about the PipelineOverview page and not about the PipelineDetails page - therefore thinking about squares and grids.\n\nNow the whole thing makes a little more sense to me. I wasn\u0027t aware that there is a dependency between the different queues in a check pipeline, therefore I thought it would be fine to visualize them like this - independent of each other (as the name of the pipeline suggests). I mean, there are semaphores and node requests that might be blocked, but I didn\u0027t see them as \"dependency\" in the classical sense. But if we say we treat those as dependencies between the individual queues, we might indeed want to visualize them in order, although I think this would result in a lot of wasted space.\n\nMaybe we can come up with a smarter solution, but that might require a different layout / organization of the queues. Does Zuul ensure that those changes are ordered directly after one another or could there be changes in between? If so, we might be able to wrap those \"dependent-queues\" into a box to show that they belong together and still keep the overall layout. Maybe we could even utilize the ProgressStepper for this purpose - so wrap all the items from a single queue in a single ProgressStep and use the ProgressStepper to visualize the dependencies between the different queues. We would then visualize independent pipelines in a different way than dependent pipelines, but most probably that would be the case for any approach we take.",
      "parentUuid": "14a048ea_334eba40",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "468fa3b1_c9d49999",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-22T21:38:17Z",
      "side": 1,
      "message": "It\u0027s not dependencies, but it is ordering.  So if we have a grid of queues like:\n\n\u003e  A B C\n\u003e  D E F\n  \nWe, as experienced Zuul users (and folks who have seen the previous status page) know that Zuul will fulfill node requests in the order ABCDEF.  But new users might think they would be fulfilled in the order ADBECF.  Or may not even consider that there is an order.",
      "parentUuid": "9f6f195f_3a52a612",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57bc08d9_e2a42e20",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: The old version had an information icon (\"i\" in circle) for non-live items; we should do that here too.  Currently this renders as queued (clock) which is misleading.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55c74405_a99f5295",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 358,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: In dark mode, the non-started jobs are rendering as white, but they should be dark grey.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c028b49f_dfd12c0f",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 358,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-19T09:16:50Z",
      "side": 1,
      "message": "Should be fixed by now.",
      "parentUuid": "55c74405_a99f5295",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b64e430_70e14d1e",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 374,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: Rendering the time to the right of the bar seems awkward as it shifts the bar around in relation to the completed results.  I think it should either be superimposed on the bar, or under it on a second line, or a mouseover as before.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42d2c92d_a223a47e",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 374,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-19T09:16:50Z",
      "side": 1,
      "message": "The \"awkward\" part should already be fixed ;-). In addition, I\u0027ve added a \nfollow-up change to show the remaining time via a tooltip as other solutions (showing the time via the progress bar didn\u0027t work out): https://review.opendev.org/c/zuul/zuul/+/926472/2",
      "parentUuid": "8b64e430_70e14d1e",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f3c6899_3422efbd",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 374,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-22T21:38:17Z",
      "side": 1,
      "message": "Thanks, this does look a lot better.  I have one quibble:\n\nSince the percentage text is set inside the active part of the progress bar, it causes the progress bar to have a minimum width.  That means that the progress bar always looks the same for an value less than something 40%.  That means it\u0027s useful 60% of the time and providing incorrect information 40% of the time.\n\nIf we want to include the percentage at all, then I think it would be good to have the percentage text always centered on the entire bar and not force the active part to the minimum width.  Because of the color contrast, we would probably need to have the text be inverted based on the background color (especially if the text overlaps the edge of the current progress, eg, when it\u0027s at 50%).  That should be technically possible with CSS, but a quick look suggests that patternfly doesn\u0027t make it easy, if it\u0027s possible at all with patternfly.\n\nIf we can\u0027t do that, and we have to choose, then I think we should drop the percentage (measureLocation\u003dnone) and have an accurate bar.",
      "parentUuid": "42d2c92d_a223a47e",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90995bf3_b6b6f17b",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 401,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: The visual language on the current status page is that there is a single box that represents the status of the job.  That box can be a blue progress bar if it is currently running.  Or a red progress bar if it is running but will fail.  Or it can be a completely filled in box, red, greed, orange, etc, with a word representing the result of the build.  The filled in box looks like a completed progress bar.  The use of a red progress bar that turns into a filled red box when the job is expected to fail and finally fails really underscores that.\n\nI think we should keep the same visual language as it is useful for communicating about the build, and having them be the same shape make it easy to scan a long list of builds and see what\u0027s going on.  Also, the larger bright colors of the results are easy to see.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f09e8f33_1d70ea18",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 401,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-20T07:07:23Z",
      "side": 1,
      "message": "Implemented in https://review.opendev.org/c/zuul/zuul/+/926570.",
      "parentUuid": "90995bf3_b6b6f17b",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01ccacef_1cd4806e",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 410,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "Not sure what the todo item is here.  If you\u0027re just annotating that you\u0027ve copied code from elsewhere in Zuul, that\u0027s not necessary.  We do have the git history if there\u0027s ever any question.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bba5ea0_e5807857",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 410,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-07-04T10:03:42Z",
      "side": 1,
      "message": "Yep, that was exactly my intention. I wanted to have a reference, so we can clean up later. If we don\u0027t need that, I\u0027ll remove the comments.",
      "parentUuid": "01ccacef_1cd4806e",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cbd4bd3_07b25b0a",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 458,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "ditto.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f50cbbe_d3d7db0e",
        "filename": "web/src/containers/status/Misc.jsx",
        "patchSetId": 9
      },
      "lineNbr": 458,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-07-04T10:03:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2cbd4bd3_07b25b0a",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac22fa3_279a60c8",
        "filename": "web/src/containers/status/PipelineSummary.jsx",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: This is too dark for dark mode.  This should at least be using some standard colors that switch based on the theme.  If you don\u0027t want to use blue (our standard link blue might be okay actually), then I would do what the navbar at the top does.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42c9287c_c3e31982",
        "filename": "web/src/containers/status/PipelineSummary.jsx",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-22T21:38:17Z",
      "side": 1,
      "message": "Not sure where it\u0027s fixed, but I\u0027m currently previewing the end of the stack and this is fixed somewhere.",
      "parentUuid": "4ac22fa3_279a60c8",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87fa0fac_afba6b0a",
        "filename": "web/src/containers/status/PipelineSummary.jsx",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-23T08:17:54Z",
      "side": 1,
      "message": "It\u0027s fixed directly in this change. Instead of directly setting a color here, I\u0027ve added a CSS class `zuul-pipeline-link`. This class gets different colors applied based on the selected theme.\n- light/default: https://review.opendev.org/c/zuul/zuul/+/916287/9..13/web/src/index.css#236\n- dark mode: https://review.opendev.org/c/zuul/zuul/+/916287/9..13/web/src/index.css#774",
      "parentUuid": "42c9287c_c3e31982",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5764d5ec_d547da8c",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: This is true on the previous change for the popover as well -- we should probably fix both: The remaining time should be right-aligned.  Right now the left edge is on the center of the box, which makes it sort of look like it\u0027s placed in the right 1/3 of the box.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6ac4510_f9b2aed7",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-19T09:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5764d5ec_d547da8c",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc0612ba_c9eb0fa7",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: This doesn\u0027t actually show any more details than the show jobs link.  This is really the link to the single-item view.\n\nPreviously, we had the icon link to the single-item view.  It was a little hidden, but that\u0027s okay because it\u0027s usually not very useful to go to that view from this one; and I think that\u0027s still true even with this refactoring.\n\nWhere it might be useful though is to share a direct link with someone.  So if you do want to keep this as a more visible link, then maybe the text should be something to that effect.  Like \"show only this change\".  Or even just make it a link or share icon.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5c25c8c_9d71be4b",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-27T09:07:02Z",
      "side": 1,
      "message": "I\u0027ll remove the details link and implement a follow-up change for the share icon/link.",
      "parentUuid": "bc0612ba_c9eb0fa7",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a14c2de_c9ff905a",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-03T21:17:05Z",
      "side": 1,
      "message": "-1: The old status page had a way to show or hide all jobs; I think we should have that here.  The old one had a cookie which saved that as a default; I don\u0027t think we need to do that, but a \"show all\" or \"hide all\" on the page would be good.  This gets back to the idea of being able to easily identify common failing changes/jobs.",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63fe1762_08e1e5d0",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-16T14:13:46Z",
      "side": 1,
      "message": "This may be addressed in https://review.opendev.org/c/zuul/zuul/+/926467",
      "parentUuid": "8a14c2de_c9ff905a",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53523902_e8004c72",
        "filename": "web/src/containers/status/QueueItem.jsx",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 27952
      },
      "writtenOn": "2024-08-19T09:16:50Z",
      "side": 1,
      "message": "Yes, that\u0027s the follow-up change for this comment.",
      "parentUuid": "63fe1762_08e1e5d0",
      "revId": "1f6f5f9d1cdd1d807b2314f6036baaf1a9bb6d40",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}