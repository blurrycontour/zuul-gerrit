FROM ubuntu:20.04

RUN apt-get update \
    && DEBIAN_FRONTEND="noninteractive" apt-get -y install \
        git \
        openssh-server \
        python2 \
        python3 \
        python3-pip \
        python3-venv \
        rsync \
        sudo \
    ;

# workaround sudo bug https://github.com/sudo-project/sudo/issues/42
RUN echo "Set disable_coredump false" >> /etc/sudo.conf

RUN useradd -m -s /bin/bash -p zuul zuul 
USER zuul

RUN python3 -m pip install --no-warn-script-location --user -U pip \
    wheel \
    setuptools \
    virtenv \
    virtualenv \
    tox \
    twine

# If proxy environment variables supplied during build allow pass through via
# ~/.ssh/environment, as the test env likely will require these set for any
# job launched on the node to be capable of internet access.
RUN set -e ; \
    mkdir -p -m 0700 ~/.ssh; \
    echo "PATH=${PATH}:${HOME}/.local/bin" >> ~/.ssh/environment; \
    if [ -n "${http_proxy}" ]; then \
        echo "http_proxy=${http_proxy}" > ~/.ssh/environment; \
        echo "https_proxy=${https_proxy}" >> ~/.ssh/environment; \
        echo "no_proxy=${no_proxy}" >> ~/.ssh/environment; \
    fi \
    ;

USER root

RUN set -e ; \
    mkdir /var/run/sshd ; \
    sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config ; \
    sed -ri 's/#PermitUserEnvironment no/PermitUserEnvironment yes/g' /etc/ssh/sshd_config;

COPY --chown=root:root ./ssh_host_ed25519_key /etc/ssh/ssh_host_ed25519_key
COPY ./ssh_host_ed25519_key.pub /etc/ssh/ssh_host_ed25519_key.pub
RUN chmod 0600 /etc/ssh/ssh_host_ed25519_key

RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

EXPOSE 22

ENTRYPOINT ["/usr/sbin/sshd", "-D" ]
