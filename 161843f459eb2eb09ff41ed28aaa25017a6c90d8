{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19fe28e0_da5f27fe",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 735,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-04-08T05:45:11Z",
      "side": 1,
      "message": "I think we should also get the tenant read lock to be consistent with our lock sequences in other places. When the tenant write lock is acquired we assume exclusive access to the tenant and all its pipelines.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "749e372f_9d8fa837",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 735,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-04-08T06:10:39Z",
      "side": 1,
      "message": "Seems we are also not read locking the tenant in `_cleanupNodeRequests()`, so ignore my comment here.",
      "parentUuid": "19fe28e0_da5f27fe",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad6dc2a6_e53463fa",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 742,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-04-08T05:45:11Z",
      "side": 1,
      "message": "Do we need to refresh the pipeline change list and summary here? It doesn\u0027t look like we are using that here.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12d5237f_6acaf0c2",
        "filename": "zuul/scheduler.py",
        "patchSetId": 3
      },
      "lineNbr": 742,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-04-09T00:11:16Z",
      "side": 1,
      "message": "We could omit them.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6701ea5_8aff9110",
        "filename": "zuul/zk/blob_store.py",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-04-08T05:45:11Z",
      "side": 1,
      "message": "Do we want to retry this indefinitely? I\u0027m little afraid of schedulers/executors hanging because of that.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bca717da_95d4ecef",
        "filename": "zuul/zk/blob_store.py",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-04-09T00:11:16Z",
      "side": 1,
      "message": "Yes -- that is what we do with zkobjects, and this is replacing something handled by zkobject now.\n\nIt shouldn\u0027t hang indefinitely -- if we lose the session, it will abort.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e9c85e0_c47c4afb",
        "filename": "zuul/zk/blob_store.py",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-04-11T05:16:49Z",
      "side": 1,
      "message": "True",
      "parentUuid": "bca717da_95d4ecef",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46a3b42c_ec66645d",
        "filename": "zuul/zk/blob_store.py",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-04-07T23:46:53Z",
      "side": 1,
      "message": "I agree this should work because the flag is touched whenever we put the blob regardless of whether or not any data is written in the process. And we set ltime while holding the lock when we build the list of deletable blobs.",
      "revId": "161843f459eb2eb09ff41ed28aaa25017a6c90d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}