{
  "comments": [
    {
      "key": {
        "uuid": "ff570b3c_a1fdebb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-06-10T15:20:20Z",
      "side": 1,
      "message": "Or they could click the \"FAILED\" button on the console output.",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f560f44_623983f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 24162
      },
      "writtenOn": "2020-08-25T16:09:41Z",
      "side": 1,
      "message": "That is one of the top used modules and there are no plans to change its behavior. We should not cripple the user experice just because ansible team did not provide identical return values for all modules.\n\nIf this was about a 3rd party module or one of those moved to ansible-collections I would have understood, but this is \"core\" and failing to install some packages is clearly not an uncommon issue.\n\nAlso, it should be noted that the proposed implementation does not change the UI for modules not returning failures, it only expose it when present.",
      "parentUuid": "ff570b3c_a1fdebb2",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f560f44_1d6273ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7118
      },
      "writtenOn": "2020-08-28T00:12:29Z",
      "side": 1,
      "message": "I don\u0027t really see a response to Jim\u0027s point that any module could return this field in an arbitrary format.  For example, taskOutput.renderData() has the facilities to print arbitrary data which this doesn\u0027t.\n\nI agree that clicking on the \"FAILED\", that dumps all the task fields, is not particularly discoverable.  I\u0027d love to see some ideas on that ... even if it changed when you moved over it, it would give some indication to click.  or some sort of header message when you pull down the status box.",
      "parentUuid": "9f560f44_623983f0",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f621f24_502431af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 24162
      },
      "writtenOn": "2020-11-10T16:10:04Z",
      "side": 1,
      "message": "Last version of the patch is displaying the field regardless its format, so it will render regardless if is a list, multiline string or even a dictionary.",
      "parentUuid": "9f560f44_1d6273ae",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff570b3c_a11ccbc1",
        "filename": "web/src/containers/build/BuildOutput.jsx",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-06-10T15:32:40Z",
      "side": 1,
      "message": "We can\u0027t know that failures is a list of strings.  Even if we decide to whitelist this for the one instance we know about, any other module could return a \"failures\" key of a different format.",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f621f24_dc0e9d39",
        "filename": "web/src/containers/build/BuildOutput.jsx",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 24162
      },
      "writtenOn": "2020-11-10T16:04:27Z",
      "side": 1,
      "message": "This was fixed in last review and now variable type is not assumed to be a list, it will print regardless what it contains.",
      "parentUuid": "ff570b3c_a11ccbc1",
      "revId": "99391be7116f90476e34a20cff68698805ee9047",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}