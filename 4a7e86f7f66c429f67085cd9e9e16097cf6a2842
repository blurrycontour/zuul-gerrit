{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "312cbd69_b57a5b0e",
        "filename": "tests/unit/test_circular_dependencies.py",
        "patchSetId": 10
      },
      "lineNbr": 1192,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-08T22:49:55Z",
      "side": 0,
      "message": "Why do we stop verifying B\u0027s state? We test it with A when A gets a patchset but we don\u0027t report it until it it merges since only dependent queues use a singular item? I guess I\u0027m wondering why we don\u0027t want to check the independent behavior of having B enqueue a separate item (with A in it) and run those tests and report them alongside the actions for A.",
      "revId": "4a7e86f7f66c429f67085cd9e9e16097cf6a2842",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e20b590_101f55cf",
        "filename": "tests/unit/test_model_upgrade.py",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-08T18:58:15Z",
      "side": 0,
      "message": "Is this test removed simply because the model api update is old enough we don\u0027t need to actively test it anymore?",
      "revId": "4a7e86f7f66c429f67085cd9e9e16097cf6a2842",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ca4b1ca_207ca7ab",
        "filename": "tests/unit/test_model_upgrade.py",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-02-08T19:46:30Z",
      "side": 0,
      "message": "Yes and the behavior has likely changed.  We have tests of the desired behavior, and there is no upgrade path from where this test starts and this change, so this test is counter-productive now.\n\n(Keep in mind that essentially all model upgrades before this point are no longer necessary because we are clearing the state for this upgrade; a later change removes them all.)",
      "parentUuid": "0e20b590_101f55cf",
      "revId": "4a7e86f7f66c429f67085cd9e9e16097cf6a2842",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de815c8c_0855f01e",
        "filename": "tests/unit/test_model_upgrade.py",
        "patchSetId": 10
      },
      "lineNbr": 735,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-02-08T18:58:15Z",
      "side": 0,
      "message": "And this test is removed because deduplication has changed and the model api update is old enough that this is effectively dead code?",
      "revId": "4a7e86f7f66c429f67085cd9e9e16097cf6a2842",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4db6b83_b85a6cc4",
        "filename": "tests/unit/test_model_upgrade.py",
        "patchSetId": 10
      },
      "lineNbr": 735,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-02-08T19:46:30Z",
      "side": 0,
      "message": "Yep.",
      "parentUuid": "de815c8c_0855f01e",
      "revId": "4a7e86f7f66c429f67085cd9e9e16097cf6a2842",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}