{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "43bfca94_7590e02d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 33134
      },
      "writtenOn": "2023-10-25T13:58:12Z",
      "side": 1,
      "message": "looks good to me and tested it works.",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a02fe7e_c3563597",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 35923
      },
      "writtenOn": "2023-10-25T18:38:24Z",
      "side": 1,
      "message": "LGTM and works in our environment",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556bf5de_2ae3073d",
        "filename": "tests/fixtures/config/auth-streamer/git/common-config/playbooks/python27.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T22:43:52Z",
      "side": 1,
      "message": "I know this NOTE comes from another test setup, and this file matches that one as well. That said I\u0027m not sure I understand this note. Is this saying we shouldn\u0027t run any command tasks that use the special streamer implementation hooks?",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15c9daf7_c2ab6a44",
        "filename": "tests/fixtures/config/auth-streamer/git/common-config/playbooks/python27.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-10-25T23:50:20Z",
      "side": 1,
      "message": "Yes exactly; put another way, don\u0027t run \"shell\" tasks here; and we don\u0027t.",
      "parentUuid": "556bf5de_2ae3073d",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92857136_f3e03165",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T22:43:52Z",
      "side": 1,
      "message": "Super minor nit. Looks like it always raises APIError? If we expect other types of exceptions then the logstreamer try catch should be updated to handle something other than APIErrors as well?",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceaac16f_bad66b5b",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-10-25T23:50:20Z",
      "side": 1,
      "message": "It\u0027s written defensively so that if any unexpected exceptions occur, they will be raised and cause a failure regardless of require_auth.  The only exceptions we expect to signal \"user didn\u0027t authenticate and the process of determining that did not explode\" are all currently APIError.\n\n(This is not intended to be a code change; if we had raised \"KeyError\" in _check_auth before, we would get the same result.)",
      "parentUuid": "92857136_f3e03165",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b85a14c_eb788029",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-10-30T14:50:43Z",
      "side": 1,
      "message": "I know this is just code that moved here, but I\u0027m wondering if the the error header format is correct? It looks like this should be a comma separated list of attribute-value pairs.",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b11a25a8_003528ca",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-10-30T15:05:57Z",
      "side": 1,
      "message": "Excellent question.  https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate indicates that the header is a comma-separated series of challenges each with their own format schemes.  That seems to match what we\u0027re doing.\n\nhttps://datatracker.ietf.org/doc/html/rfc6750 and the other RFCs it reference do not seem to make it clear at quick glance how to combine multiple challenges.  However, they do show examples where a single challenge uses comma-separated tokens.\n\nI\u0027m not sure we should change this here and now, but I agree it\u0027s worth further investigation.",
      "parentUuid": "9b85a14c_eb788029",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f978328b_049b33a9",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-10-30T15:10:49Z",
      "side": 1,
      "message": "In the OAuth2 bearer token RFC at the end of section 3 there is an example using `error` and `error_description` https://www.rfc-editor.org/rfc/rfc6750#section-3",
      "parentUuid": "b11a25a8_003528ca",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8f0eb6f_3a6d5f70",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-10-30T18:41:22Z",
      "side": 1,
      "message": "Right, I saw that; just pointing out the inconsistency with the mozilla docs, and the lack of clarity in the rfc text.  For example, rfc 6750 references rfc 2617 for the definition of the www-authenticate header format, and that deals exclusively with digest authentication leaving us to make some leaps of inference to apply it to oauth.  While section 1.2 of 2617 mentions commas, the actual BNF in section 3.2.1 doesn\u0027t include them.\n\nI agree with you that it\u0027s more probable than not that including commas is the most correct behavior.  But it\u0027s unclear enough that I think we should take care and validate any changes with several browsers and environments.",
      "parentUuid": "b11a25a8_003528ca",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47010d83_46e39754",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-10-30T14:50:43Z",
      "side": 1,
      "message": "nit: typo",
      "range": {
        "startLine": 407,
        "startChar": 22,
        "endLine": 407,
        "endChar": 29
      },
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ea1d636_7eafb891",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 427,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T22:43:52Z",
      "side": 1,
      "message": "Why do we only want the first 123 characters of the message?",
      "range": {
        "startLine": 427,
        "startChar": 66,
        "endLine": 427,
        "endChar": 70
      },
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fa7208d_6978adb6",
        "filename": "zuul/web/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 427,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-10-25T23:50:20Z",
      "side": 1,
      "message": "Websocket protocol length limit: https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close#reason",
      "parentUuid": "2ea1d636_7eafb891",
      "revId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18fb324f1ee49d41ed50d2dc9ba1ff127eda3ddf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}