{
  "comments": [
    {
      "key": {
        "uuid": "f679e34d_b36783ad",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T15:46:50Z",
      "side": 1,
      "message": "Why bother with sharding on the event_path if we intend to always have a single sequence node?",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "979e093d_eec9328e",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-07-20T15:53:55Z",
      "side": 1,
      "message": "We don\u0027t shard on the event path, only on the data path.  sharding.BufferedShardWriter is what actually implements the sharding, on line 262.\n\nThe event_path is a sequence because the event queue is composed of sequential znodes (ie, the sequence number provides the queue ordering of the event).",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c46e8a73_176fff09",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T16:05:58Z",
      "side": 1,
      "message": "Yup I see that now. I conflated sequences and sharding. They use a similar underlying implementation but the specific details for each are important here. The behavior is completely different.",
      "parentUuid": "979e093d_eec9328e",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e135d81c_011538c3",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T15:46:50Z",
      "side": 1,
      "message": "Why does this use the more complicated create on the root then stream the data to the path instead of what appears to be the simpler alternative below of creating the data_path and setting sequence to True?",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ff01fc4_1c1921a8",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-07-20T15:53:55Z",
      "side": 1,
      "message": "Because this is sharded and that is not.",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "030bd402_3b983383",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T16:05:58Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "4ff01fc4_1c1921a8",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "057da2a7_f37fe847",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T15:46:50Z",
      "side": 1,
      "message": "From an order of operations perspective I think it might be more correct to delete the side_channel_path first. Then if we have any errors the event will hang around allowing us to try removal again later?\n\nAlso if you get NoNodeError when deleting the side_channel_path I think you want to continue to try and delete the event itself. I believe this is why you have the current order, but I don\u0027t think the current order would handle other errors (like connection errors?) properly.",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b3b339b_2da53d59",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-07-20T15:53:55Z",
      "side": 1,
      "message": "Yeah, I think we can switch it around, but it\u0027ll be more verbose.",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "961b8738_d8801d93",
        "filename": "zuul/zk/event_queues.py",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-07-20T16:05:58Z",
      "side": 1,
      "message": "In this case I think the verbosity is worthwhile to make this more robust to the various errors that may occur.",
      "parentUuid": "4b3b339b_2da53d59",
      "revId": "77906cb128ce6933f0c765897a043abc81296754",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}