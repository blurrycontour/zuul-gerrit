- name: Clone test1-gate-first
  git:
    repo: http://localhost:8080/test1-gate-first
    dest: "{{ workspace }}/test1-gate-first"
- name: Setup repository test1-gate-first
  shell:
    chdir: "{{ workspace }}/test1-gate-first/"
    executable: /bin/bash
    cmd: |
      {{ ssh_agent.stdout }}
      git config user.email 'user@example.com'
      git config user.name 'Example User'
      git config gitreview.username 'user'
      git remote add gerrit http://admin:secret@localhost:8080/test1-gate-first
      git review -s
- name: Copy hello.py in test1-gate-first
  copy:
    src: ../../doc/source/examples/test1-gate-first/hello.py
    dest: "{{ workspace }}/test1-gate-first/hello.py"
- name: Commit and upload hello.py in test1-gate-first
  shell:
    chdir: "{{ workspace }}/test1-gate-first/"
    executable: /bin/bash
    cmd: |
      {{ ssh_agent.stdout }}
      git add hello.py
      git commit -m"Initialize test1-gate-first project"
      git push gerrit
- name: Copy resources in test1-gate-first
  copy:
    src: ../../doc/source/examples/test1-gate-first/
    dest: "{{ workspace }}/test1-gate-first/"
- name: Commit and upload resources in test1-gate-first
  shell:
    chdir: "{{ workspace }}/test1-gate-first/"
    executable: /bin/bash
    cmd: |
      {{ ssh_agent.stdout }}
      mv zuul.yaml .zuul.yaml
      git add -A
      git commit -m"Init test1-gate-first pipelines"
      git review
- name: Query open changes
  uri:
    url: http://localhost:8080/a/changes/?q=status:open+project:test1-gate-first&o=CURRENT_REVISION
    method: GET
    user: admin
    password: secret
    return_content: true
  register: changes
- set_fact:
    changeinfo: "{{ {'id': (changes.content[5:]|from_json)[0].id, 'current_revision': (changes.content[5:]|from_json)[0].current_revision} }}"
- name: Wait for Zuul to report check status
  uri:
    url: "http://localhost:8080/a/changes/{{ changeinfo.id }}//detail"
    method: GET
    user: admin
    password: secret
    return_content: true
  register: result
  until: (result.content[5:]|from_json).messages|length >= 2
  delay: 1
  retries: 180
- name: "Check Zuul check status"
  assert:
    that:
      - (result.content[5:]|from_json).messages[1].message is search("Patch Set 1{{':'}} Verified\+1")
- name: Approve changes
  uri:
    url: "http://localhost:8080/a/changes/{{ changeinfo.id }}/revisions/{{ changeinfo.current_revision }}/review"
    method: POST
    user: admin
    password: secret
    status_code: 200
    body_format: json
    body:
      labels:
        Code-Review: "+2"
        Workflow: "+1"
- name: Wait for Zuul to report gate job has started
  uri:
    url: "http://localhost:8080/a/changes/{{ changeinfo.id }}//detail"
    method: GET
    user: admin
    password: secret
    return_content: true
  register: result
  until: (result.content[5:]|from_json).messages|length >= 4
  delay: 1
  retries: 60
- name: "Check Zuul has started gate job"
  assert:
    that:
      - (result.content[5:]|from_json).messages[3].message is search("Starting gate jobs")
- name: Wait for Zuul to report gate job has finished
  uri:
    url: "http://localhost:8080/a/changes/{{ changeinfo.id }}//detail"
    method: GET
    user: admin
    password: secret
    return_content: true
  register: result
  until: (result.content[5:]|from_json).messages|length >= 5
  delay: 1
  retries: 180
- name: "Check Zuul has finished gate job"
  assert:
    that:
      - (result.content[5:]|from_json).messages[4].message is search("Patch Set 1{{':'}} Verified\+2")
- name: Wait for Zuul to report change merged
  uri:
    url: "http://localhost:8080/a/changes/{{ changeinfo.id }}//detail"
    method: GET
    user: admin
    password: secret
    return_content: true
  register: result
  until: (result.content[5:]|from_json).messages|length >= 6
  delay: 1
  retries: 180
- name: "Check Zuul has merged the change"
  assert:
    that:
      - (result.content[5:]|from_json).messages[5].message is search("Change has been successfully merged by Zuul")
