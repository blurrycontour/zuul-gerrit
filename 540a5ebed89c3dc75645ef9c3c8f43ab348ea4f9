{
  "comments": [
    {
      "key": {
        "uuid": "5fc1f717_f63ff1b2",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 189,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Just to be sure I\u0027m clear, this would be the groups communicated down from the JWT source (standard/public claims) not something internal to Zuul.",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 38
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_db73f64c",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 189,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "Yes, these rules all refer to claims found in the JWT. Since Zuul has no user backend these rules could be used as ad hoc group definitions, using \"any_of\".",
      "parentUuid": "5fc1f717_f63ff1b2",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 38
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_b6496961",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 194,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Not sure what this is intended to convey, usernames? It just ins\u0027t purely clear from the example, and it is not consistent with `\"ghostbusters\" in groups`",
      "range": {
        "startLine": 193,
        "startChar": 14,
        "endLine": 194,
        "endChar": 20
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_5b04e67b",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 194,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "it is mentioned in line 288: if no claim is explicitly mentioned, the check applies to the default uid claim (authenticators can define a claim to use as uid rather then sub, see below)\n\nThis is meant to simplify things on the operator\u0027s end but could be removed for consistency.",
      "parentUuid": "5fc1f717_b6496961",
      "range": {
        "startLine": 193,
        "startChar": 14,
        "endLine": 194,
        "endChar": 20
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_160f1d2f",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Can these be stacked?\n\n    any_of:\n      - all_of:\n          - \"ghostbusters\" in groups\n          - iss\u003dcolumbia_university\n      - \"gatekeeper\" in groups\n      - \"keymaster\" in groups\n\nIs this intended to be a DSL? What mechanism are you using to determined \"XXX\" in \"Y\"/tokenize. I worry when a new DSL is being created.",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 205,
        "endChar": 75
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_bbfcea3e",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "yes, in my PoC they are stackable: https://review.openstack.org/#/c/639855/9/zuul/configloader.py\n\nIt\u0027s not intended to be something complex because as you point out, maintaining DSLs is hard, but at least support for boolean operands AND and OR should be there.",
      "parentUuid": "5fc1f717_160f1d2f",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 205,
        "endChar": 75
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_67758e98",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 207,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-05T22:04:35Z",
      "side": 1,
      "message": "Some Identity Providers might use complex claims schemes like so:\n\n(... more claims ...)\n\"resources_access\": {\n  \"account\": {\n    \"roles\": [\n      \"dev\",\n      \"ops\",\n      \"QA\"],\n(...)\n\nan operator must have a way to drill into claims, ie ``\"dev\" in resources_access.account.roles``",
      "range": {
        "startLine": 207,
        "startChar": 41,
        "endLine": 207,
        "endChar": 52
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_56a925dd",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 289,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "I highly recommend avoiding this. Don\u0027t leak privileged information in HTTP request logs. Request logs may not be viewed by the same person as the operator who could perform the actions anyway.",
      "range": {
        "startLine": 289,
        "startChar": 25,
        "endLine": 289,
        "endChar": 84
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_fb7592cd",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 289,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "OK, I\u0027ve seen it done in some implementations so that\u0027s why I mentioned it. Not having to deal with that case simplifies things so I\u0027ll remove that",
      "parentUuid": "5fc1f717_56a925dd",
      "range": {
        "startLine": 289,
        "startChar": 25,
        "endLine": 289,
        "endChar": 84
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_d6b43538",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 291,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Question:\n\nIs this already the standard? Is this because all actions are a creation of an action (resource) that zuul processes?",
      "range": {
        "startLine": 291,
        "startChar": 74,
        "endLine": 291,
        "endChar": 77
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_9b2a4de5",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 291,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "Other endpoints return either 200 or 404. These new endpoints \"create\" an action, I thought 201 would be more appropriate.",
      "parentUuid": "5fc1f717_d6b43538",
      "range": {
        "startLine": 291,
        "startChar": 74,
        "endLine": 291,
        "endChar": 77
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_16d95d82",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 293,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "You may also need to add a 422 response (UNPROCESSABLE ENTITY) in the case that the JSON is well formed, is the correct content-type, but the value is incorrect (e.g. incomplete dataset, missing a trigger, etc).\n\n400 with clear response should be ok in most cases.",
      "range": {
        "startLine": 293,
        "startChar": 12,
        "endLine": 293,
        "endChar": 55
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_16c2bd86",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Suggest: Add a \"GET\" for any enpoint that emits a schema of the expected POST body/entity. [Can be a followup] (unprotected/not requiring a JWT)",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 302,
        "endChar": 51
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_5bd065ca",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "Good idea, but since the call accepts two types of body (enqueue or enqueue-ref), how would we convey that? I\u0027d rather not split the endpoint per body type for convenience.",
      "parentUuid": "5fc1f717_16c2bd86",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 302,
        "endChar": 51
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_d950e6d7",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 315,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "See comment below about \"reason\"",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 315,
        "endChar": 28
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_9b948dea",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 315,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "That\u0027s a missing feature at the RPC level, that could be a followup. RPC autohold has it, there\u0027s no reason it shouldn\u0027t be there for enqueue and dequeue as well",
      "parentUuid": "5fc1f717_d950e6d7",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 315,
        "endChar": 28
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_793692b7",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 340,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Suggest adding \"Reason\" (optional) as well, that is logged.",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 340,
        "endChar": 28
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_19474e20",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 348,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Same \"Reason\" comment here.",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 348,
        "endChar": 28
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_592cf646",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 449,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "It might be worth also adding \"--endpoint\" or \"--url\" to the CLI allowing it to be used without a config file (might be useful for some folks) -- This is outside the scope of this spec.",
      "range": {
        "startLine": 442,
        "startChar": 0,
        "endLine": 449,
        "endChar": 64
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_3b7319ea",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 449,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "The CLI also requires the full Zuul library to be installed, a nice followup would be to split zuul into zuul-lib, zuul-cli and zuul-server",
      "parentUuid": "5fc1f717_592cf646",
      "range": {
        "startLine": 442,
        "startChar": 0,
        "endLine": 449,
        "endChar": 64
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_2e7d081c",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 449,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T18:33:46Z",
      "side": 1,
      "message": "++",
      "parentUuid": "5fc1f717_3b7319ea",
      "range": {
        "startLine": 442,
        "startChar": 0,
        "endLine": 449,
        "endChar": 64
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_998ede2c",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 507,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Is this intended to be a magic string for the \"zuul_operator\" issuer? I would do this as a boolean instead of a magic string.",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 27
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_fb2a718e",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 507,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "maybe an option like \"generate_token_from_cli\u003dTrue\" ?",
      "parentUuid": "5fc1f717_998ede2c",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 507,
        "endChar": 27
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_7905327a",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 512,
      "author": {
        "id": 2903
      },
      "writtenOn": "2019-03-06T01:11:17Z",
      "side": 1,
      "message": "Suggest an optional maximum validity time, avoids potential typos that could make a token valid for 1800000 seconds. Since revocations (short of secret rotation, which invalidates all active tokens) is not part of the spec (revocations should not be part of the spec).",
      "range": {
        "startLine": 502,
        "startChar": 4,
        "endLine": 512,
        "endChar": 17
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fc1f717_3e0f872f",
        "filename": "doc/source/developer/specs/tenant-scoped-admin-web-API.rst",
        "patchSetId": 10
      },
      "lineNbr": 512,
      "author": {
        "id": 7186
      },
      "writtenOn": "2019-03-06T08:40:00Z",
      "side": 1,
      "message": "++",
      "parentUuid": "5fc1f717_7905327a",
      "range": {
        "startLine": 502,
        "startChar": 4,
        "endLine": 512,
        "endChar": 17
      },
      "revId": "540a5ebed89c3dc75645ef9c3c8f43ab348ea4f9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}