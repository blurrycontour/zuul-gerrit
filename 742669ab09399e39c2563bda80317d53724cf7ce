{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d0eac414_e0d4ad96",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-09-08T09:36:58Z",
      "side": 1,
      "message": "Shouldn\u0027t we rather return an empty list here? I wouldn\u0027t consider the current bundle to be a duplicate and this method now behaves differently depending on the pipeline type (in dependent pipelines it\u0027s a list with only the current bundle and in independent pipelines it is a list of other bundles **excluding** the current bundle).\n\nThe other option might be to rename this method and always return also the current bundle.",
      "revId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fea6dd8_1612ffc5",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-09-08T14:52:08Z",
      "side": 1,
      "message": "The intention is to replace lines 5647--5653 which always need this.  Since we\u0027re using this in more places, all the call sites would need those lines as well, so I moved it into the method.\n\nI agree the name is slightly misleading, but I\u0027d rather keep it because it shows up when I search for duplicate.  There\u0027s a nice symmetry to findDuplicate(Job|Bundle).\n\nMaybe findIdenticalBundles and findIdenticalJobs would be better (depending on one\u0027s understanding of the identity property)?\n\nFor me though, it doesn\u0027t seem like much of an improvement.  We do have a comment explaining the weird behavior.",
      "parentUuid": "d0eac414_e0d4ad96",
      "revId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abcd9aac_004a6cf8",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-09-08T14:52:42Z",
      "side": 1,
      "message": "Didn\u0027t mean to resolve.",
      "parentUuid": "d0eac414_e0d4ad96",
      "revId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "867d4a50_23d7a267",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 27582
      },
      "writtenOn": "2023-09-12T11:56:49Z",
      "side": 1,
      "message": "Name of the method aside I\u0027m wondering if we could at least keep the behavior the same and return `self.bundle` with the list of other related bundles for non-dependent pipelines. In the changes to the manager\u0027s `_getItemsWithBuild()` we are currently explicitly adding our own builds, so that could even be removed. But maybe there would be problems in `findDuplicateJob()` due to that change.\n\nChanging my vote to a +2 since this is not a hill to die on.",
      "parentUuid": "abcd9aac_004a6cf8",
      "revId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "742669ab09399e39c2563bda80317d53724cf7ce",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}