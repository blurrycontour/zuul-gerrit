{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bc5c0d9_728885de",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-15T20:16:37Z",
      "side": 1,
      "message": "I don\u0027t thisk this is quite right.  This looks like it\u0027s assigning a random connection to each label in the request.  Consulting the spec, the algo is:\n\n* If all providers have failed the request, clear all temp failures\n* If all providers have permanently failed the request, return error\n* Identify providers capable of fulfilling the request\n* Assign nodes to any provider with sufficient quota\n* If no providers with sufficient quota, assign it to first (highest priority) provider that can fulfill it later and pause that provider\n\nSo first, we should be dealing with providers, and probably not connections at this point.\n\nIt looks like you\u0027re choosing to ignore the first two steps for now; that\u0027s fine and makes things simpler.  So the first interesting step is \"Identify providers capable of fulfilling the request\".  I think that\u0027s what we should be doing here, and disregarding connections (they\u0027re just an implementation detail for how providers actually get work done).\n\nAlso, since this is the global request handling loop, theoretically this should be able to operate on a launcher with zero connections configured.  That too implies that we shouldn\u0027t be consulting the connection registry here.\n\nAnyway, I think if you want to have this be \"assign a random thing\" that\u0027s fine -- but the thing should probably be a provider not a connection.",
      "revId": "58bdfb502342277dd5c7fc595474329c8a010fa4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63e0214e_31d098ff",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-15T20:17:27Z",
      "side": 1,
      "message": "Unresolving.",
      "parentUuid": "5bc5c0d9_728885de",
      "revId": "58bdfb502342277dd5c7fc595474329c8a010fa4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fcdac60_c093705f",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-07-16T12:37:46Z",
      "side": 1,
      "message": "Ack, I\u0027ll change that. This was written at a time when we did not have the providers on the launcher yet.\n\nTo your point:\n\u003e Also, since this is the global request handling loop, theoretically this should be able to operate on a launcher with zero connections configured.\n\nI think that\u0027s not possible as a provider needs to have an associated connection.\nhttps://review.opendev.org/c/zuul/zuul/+/922258/6/zuul/provider/__init__.py#90",
      "parentUuid": "63e0214e_31d098ff",
      "revId": "58bdfb502342277dd5c7fc595474329c8a010fa4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a537c44_7cb4802d",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-16T17:54:44Z",
      "side": 1,
      "message": "Oh good point.  I guess that was, as they say in physics, assuming a perfectly spherical provider.  ;)\n\nI don\u0027t think that\u0027s important, I mostly mentioned that as a theoretical construct.  Perhaps if we decide that is worth doing, we could change that requirement (allow a provider to be deserialized without a connection).\n\nI don\u0027t think that\u0027s worth doing for the use case I described.  We might decide it\u0027s worth doing so that folks could have differing zuul.yaml files on different launchers.  However I don\u0027t think that\u0027s a requirement (the way to filter connections is to use the command-line arguments or env variables).\n\nMaybe just something to keep in mind as we go.",
      "parentUuid": "63e0214e_31d098ff",
      "revId": "58bdfb502342277dd5c7fc595474329c8a010fa4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403b5e2b_ec34b8f7",
        "filename": "zuul/launcher/server.py",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 27582
      },
      "writtenOn": "2024-07-17T09:40:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7a537c44_7cb4802d",
      "revId": "58bdfb502342277dd5c7fc595474329c8a010fa4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}