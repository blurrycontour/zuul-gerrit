{
  "errorCount": "%{count} errors",
  "errorCount_0": "%{count} error",
  "errorCount_1": "%{count} error",
  "statusPage": {
    "events": " events",
    "events_0": " event",
    "events_1": " event",
    "management_events": " management events",
    "management_events_0": " management event",
    "management_events_1": " management event",
    "results": "results",
    "results_0": "result",
    "results_1": "result"
  },
  "projectsPage": {
    "config": "trusted execution context",
    "untrusted": "untrusted execution context"
  },
  "streamPageTitle": "Zuul Stream | %{id}",
  "projectPageTitle": "Zuul Project | %{projectName}",
  "nodestate" : {
    "building": "building",
    "testing": "testing",
    "ready": "ready",
    "in-use": "in use",
    "used": "used",
    "hold": "on hold",
    "deleting": "deleting"
  },
  "jobPageTitle": "Zuul Job | %{jobName}",
  "changeStatusPageTitle": "%{changeId} | Zuul Status",
  "filterBy": "Filter by %{filter}",
  "SUCCESS": "Success",
  "FAILURE": "Failure",
  "MERGER_FAILURE": "Failure to merge change",
  "CONFIG_ERROR": "Configuration error",
  "SKIPPED": "SKIPPED",
  "POST_FAILURE": "FAILURE IN POST PLAYBOOK",
  "NODE_FAILURE": "NODE FAILURE",
  "RETRY_LIMIT": "RETRY LIMIT",
  "TIMED_OUT": "TIMED OUT",
  "CANCELED": "CANCELED BY ZUUL",
  "ABORTED": "CANCELED DUE TO AN UNKNOWN ERROR",
  "ERROR": "ERROR",
  "jobTries": " (attempt #%{count})",
  "retry_limit": "retry limit",
  "timed_out": "timed out",
  "post_failure": "post failure",
  "node_failure": "node failure",
  "pipelineJobs": "%{pipeline} jobs",
  "buildResult": "Build result %{uuid}",
  "softDependency": "%{dependency} (soft)",
  "overrideBranch": " ( override branch: %{item} )",
  "overrideCheckout": " ( override checkout: %{item} )",
  "ansibleTasksStatus": {
    "FAILED": "FAILED",
    "CHANGED": "CHANGED",
    "SKIPPED": "SKIPPED",
    "OK": "OK"
  },
  "trustedContext": "This playbook runs in a trusted execution context, which permits executing code on the Zuul executor and allows access to all Ansible features.",
  "playbookPhase": "%{phase} playbook",
  "play": "Play: %{playname}",
  "buildsetResult": "Buildset result %{uuid}",
  "taskOK": "Task OK"
}
