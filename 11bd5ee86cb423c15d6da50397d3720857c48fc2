{
  "comments": [
    {
      "key": {
        "uuid": "3f4b6375_1f0f4d2f",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 1378,
      "author": {
        "id": 14985
      },
      "writtenOn": "2017-10-18T16:50:07Z",
      "side": 1,
      "message": "Forgive me if I\u0027m not understanding this but, this is sorted alphabetallically right? In this case would that mean that stable/ocata is before stable/pike. Would we want to reverse sort based on newer stable branches?  I guess that also applies to version numbers as well but you would need to know the specific hierarchy of branches to get the parsing right.",
      "range": {
        "startLine": 1377,
        "startChar": 12,
        "endLine": 1378,
        "endChar": 33
      },
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_ff90f197",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 1378,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-10-18T16:54:50Z",
      "side": 1,
      "message": "Zuul isn\u0027t really in a position to understand the meaning underlying branch names.  As far as we can go is \"master\" and \"not-master\".  What we might consider though is changing the implied branch logic so that rather than treating the first definition of a job as the reference definition, only do that if it occurs on the master branch.  That would put all of the non-master branches on equal footing (order wouldn\u0027t matter among them at all in that case).\n\nHowever, even that is sort of an edge case that would only come up if a job was defined on multiple non-master branches but not master itself.  For the most part, even now, ordering between branches shouldn\u0027t matter much.",
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_3f4a0927",
        "filename": "zuul/configloader.py",
        "patchSetId": 1
      },
      "lineNbr": 1378,
      "author": {
        "id": 14985
      },
      "writtenOn": "2017-10-18T16:58:27Z",
      "side": 1,
      "message": "Well that was the problem we were seeing is that stable/ocata was being picked over the master version.  All this did was make master the first place to go looking. Once you get passed master it\u0027s still the same problem where if it exists in stable/ocata but is a different set of playbooks you will get a job failure.  It seems that the branch the change is on should take precedence over master.  Ie. job on stable/pike should pike stable/pike up before master.",
      "parentUuid": "3f4b6375_ff90f197",
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_9c934b50",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 892,
      "author": {
        "id": 4146
      },
      "writtenOn": "2017-10-18T16:38:56Z",
      "side": 1,
      "message": "Is this set if we hvaen\u0027t inherited from anything? Thinking about base jobs in particular.",
      "range": {
        "startLine": 892,
        "startChar": 32,
        "endLine": 892,
        "endChar": 53
      },
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_3c3e9729",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 892,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-10-18T16:42:42Z",
      "side": 1,
      "message": "Yeah, this is called exactly once, at the point where we make the initial copy of the job and start applying variants.  It\u0027s the dividing line between \"inherit from\" and \"apply variant\".",
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_5c603333",
        "filename": "zuul/model.py",
        "patchSetId": 1
      },
      "lineNbr": 892,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-10-18T16:43:38Z",
      "side": 1,
      "message": "The initial value is the empty tuple ().",
      "revId": "11bd5ee86cb423c15d6da50397d3720857c48fc2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}