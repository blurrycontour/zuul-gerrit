{
  "comments": [
    {
      "key": {
        "uuid": "7f515b1d_2d7f9c66",
        "filename": "doc/source/admin/components.rst",
        "patchSetId": 3
      },
      "lineNbr": 495,
      "author": {
        "id": 16068
      },
      "writtenOn": "2017-10-03T07:00:31Z",
      "side": 1,
      "message": "I think considering caches allocated is dangerous here. One just needs to do a large copy operation (which is not uncommon on e.g. k8s where the executor is not exclusively on the system) to fill up all free memory with caches. After that the executor blocks itself forever.\n\nThus I think considering buffers and cache as available memory would be safer in this case and the meaning of min_avail_mem would then be \"leave at least 5% of mem to buffers and cache\" which would be more natural to me.",
      "range": {
        "startLine": 495,
        "startChar": 55,
        "endLine": 495,
        "endChar": 60
      },
      "revId": "10d27c2ecec1f503d58572575282d80e00b548dd",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4b6375_9b250d0c",
        "filename": "doc/source/admin/components.rst",
        "patchSetId": 3
      },
      "lineNbr": 495,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-11-02T17:10:06Z",
      "side": 1,
      "message": "The executor does not block itself forever, it will always allow one concurrent job to be run. However, your point is absolutely right that this memory is shared amongst processes. I think you\u0027re right that we should just consider it available to newly spawned jobs. I do wonder if we should consider it separately but just putting all of it in a free bin seems like the right thing to do for a simple solution.",
      "revId": "10d27c2ecec1f503d58572575282d80e00b548dd",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}