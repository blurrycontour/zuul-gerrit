{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e81d3d9d_5d0ba4ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-03-06T10:40:51Z",
      "side": 1,
      "message": "The default lifespan for the cache is 5 minutes. Therefore in the worst case scenario, during a keys rotation, we can end up with valid tokens signed with a new key failing to be accepted by Zuul for at most 5 minutes.\n\nIt is recommended to rotate keys every 3-6 months, so while you\u0027d have to be extremely unlucky to hit the authenticated API during such a rotation using a signing key not present in the cache, this can happen and thus should be acknowledged, if only as a comment in the code.",
      "revId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c313c617_a76feca3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-03-06T15:05:46Z",
      "side": 1,
      "message": "The key set cache refreshes in the case of a miss; that should not be a problem.",
      "parentUuid": "e81d3d9d_5d0ba4ba",
      "revId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32fe743a_7efb62e3",
        "filename": "zuul/driver/auth/jwt.py",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 7186
      },
      "writtenOn": "2023-03-06T10:40:51Z",
      "side": 1,
      "message": "doesn\u0027t it need the cache_keys arg to explicitly cache the keys? Default seems to be False: https://github.com/jpadilla/pyjwt/blob/master/jwt/jwks_client.py#L17",
      "revId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d04e1f3b_02b9d33e",
        "filename": "zuul/driver/auth/jwt.py",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-03-06T15:05:46Z",
      "side": 1,
      "message": "That argument would cache the key indefinitely; we don\u0027t want that.  We want cache_jwk_set which understands expiration and defaults to true.",
      "parentUuid": "32fe743a_7efb62e3",
      "revId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f48a544a_3142779f",
        "filename": "zuul/driver/auth/jwt.py",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-06-26T22:41:50Z",
      "side": 1,
      "message": "We don\u0027t want that argument, that will indefinitely cache the signing keys.   We just want cache_jwk_set which understands expiration times and defaults to true.",
      "parentUuid": "32fe743a_7efb62e3",
      "revId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ec6798678c2ad823050d60d6657af1fb411862c3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}