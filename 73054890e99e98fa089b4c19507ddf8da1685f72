{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f0ab72e1_9c6b8f4e",
        "filename": "tests/unit/test_v3.py",
        "patchSetId": 3
      },
      "lineNbr": 8586,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-01-25T16:40:55Z",
      "side": 1,
      "message": "I guess this not the case when using debug tasks, is this comment still relevant?",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ac5ff81_84fc0b4a",
        "filename": "tests/unit/test_v3.py",
        "patchSetId": 3
      },
      "lineNbr": 8586,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T18:39:56Z",
      "side": 1,
      "message": "Yep this is obsolete.",
      "parentUuid": "f0ab72e1_9c6b8f4e",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af62a38d_716d55d8",
        "filename": "zuul/ansible/base/action/add_host.py",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-01-25T00:06:57Z",
      "side": 1,
      "message": "Should this be an error rather than a silent removal? At the very least maybe emit a warning? I worry this might lead to unexpected job behavior if certain vars don\u0027t resolve properly.",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31664f3d_98da20f6",
        "filename": "zuul/ansible/base/action/add_host.py",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T00:32:18Z",
      "side": 1,
      "message": "Well, this is what we do for the freeze job playbook.  But I think Ansible will actually template everything before we get to this point and raise an error before then.  So I don\u0027t think we need to worry about this, and we can just conisder it a backup.",
      "parentUuid": "af62a38d_716d55d8",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06f48954_48cb6232",
        "filename": "zuul/ansible/base/action/add_host.py",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-01-25T00:06:57Z",
      "side": 1,
      "message": "This would cause us to not update hostvars or group membership right? Is that worth a note in the docs or should we try and merge the two items?",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fbbaf37_08b3f6fe",
        "filename": "zuul/ansible/base/action/add_host.py",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T00:32:18Z",
      "side": 1,
      "message": "That would be a change from the current add_host behavior, but I\u0027m concerned about making persistent changes to non-dynamic hosts.\n\nSo we should either update the docs, or see about ensuring that we don\u0027t update non-dynamic hosts in subsequent playbooks.\n\nBut I\u0027ve tried to keep behavior consistent within the current playbook and across playbooks.\n\nSo my inclination would be to keep it this way because that way it\u0027s consistent, and update the docs to indicate that you can\u0027t use add_host to update hostvars and group membership of existing hosts.",
      "parentUuid": "06f48954_48cb6232",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeadf20d_ebd65406",
        "filename": "zuul/ansible/base/action/zuul_reset_inventory.py",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-01-25T00:06:57Z",
      "side": 1,
      "message": "Maybe a note here that this file carries additional info and removing it allows the normal inventory to be used instead?",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b1cf8a_a0cc73c5",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 665,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-01-25T16:40:55Z",
      "side": 1,
      "message": "nit: using `additional` instead of `result` looks better to me:\n\n - self.additional_inventory_file, and below\n - getAdditionalInventory",
      "range": {
        "startLine": 665,
        "startChar": 13,
        "endLine": 665,
        "endChar": 34
      },
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d37e4f6_91e6b16a",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 665,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T18:39:56Z",
      "side": 1,
      "message": "To me, the word result means that it\u0027s a job result; additional inventory file to me would mean a second inventory file (which is valid in ansible, and something I considered for this change).  But I agree that some way of tying it to the \"additional hosts\" would be nice, so I\u0027ll try to come up with a better name.",
      "parentUuid": "85b1cf8a_a0cc73c5",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d45ffc5_4a411f46",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 938,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-01-25T16:40:55Z",
      "side": 1,
      "message": "I guess this should not happen because the additional inventory is only updated for new host, so is this only to prevent manual tempering with the inventory.json?\nIf so, perhaps we should check that the `host_name` key exists?",
      "range": {
        "startLine": 938,
        "startChar": 12,
        "endLine": 938,
        "endChar": 20
      },
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b67ea0fe_38f4164b",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 938,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T18:39:56Z",
      "side": 1,
      "message": "Agree, we should be more defensive.",
      "parentUuid": "6d45ffc5_4a411f46",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dca072bb_3aecff02",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-01-25T00:06:57Z",
      "side": 1,
      "message": "Unlike hostvar handling above we don\u0027t filter out group changes for hosts that were already in the inventory. I think we should be consistent about that. Either add_host persistence only allows adding completely new hosts or it should allow hostvars and groups to be modified for all hosts.\n\nSide note the check above on line 937 may not be necessary due to my comment on line 80 of https://review.opendev.org/c/zuul/zuul/+/906433/3/zuul/ansible/base/action/add_host.py. But I think belts and suspenders is nice. It also avoids inconsistent behavior if things write to the inventory file out of band.",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2a1fc98_4866afad",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T00:32:18Z",
      "side": 1,
      "message": "I agree, we should enforce it here too.",
      "parentUuid": "dca072bb_3aecff02",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9c48402_1f3ee9b9",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 1884,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-01-25T00:06:57Z",
      "side": 1,
      "message": "The new inventory file will actually carry all of the inventory info and not just additional hosts. We then skip over them on line 937. Might be mroe accurate to call this \"updated_inventory\" or similar.",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be2be149_9d3b5413",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 1884,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-01-25T00:32:18Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s correct.  This file carries additional hosts, and line 937 is protection against mischief in case someone adds an entry that collides with an existing nodeset host.",
      "parentUuid": "f9c48402_1f3ee9b9",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66835db6_20fecaa3",
        "filename": "zuul/executor/server.py",
        "patchSetId": 3
      },
      "lineNbr": 1909,
      "author": {
        "id": 9311
      },
      "writtenOn": "2024-01-25T16:40:55Z",
      "side": 1,
      "message": "nit: since the method already has access to self, it could also overwrite the variable instead of returning it.",
      "revId": "73054890e99e98fa089b4c19507ddf8da1685f72",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}