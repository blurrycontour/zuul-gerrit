{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a944b5eb_193e77c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-12-03T15:07:58Z",
      "side": 1,
      "message": "What causes this to only be scoped to tags?",
      "revId": "bfe77b018efee875e3ca4598f50cff933d7d590b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efbfeb95_ddd4646f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-12-03T15:23:35Z",
      "side": 1,
      "message": "Looks like this is left over from last patchset.",
      "revId": "bfe77b018efee875e3ca4598f50cff933d7d590b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac32d77f_18027d07",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 7
      },
      "lineNbr": 958,
      "author": {
        "id": 16068
      },
      "writtenOn": "2021-12-03T15:24:12Z",
      "side": 1,
      "message": "Shouldn\u0027t packed_refs already contain all refs? In this case we could change getPackedRefs to a generator yielding a ref, commit, type tuple and iterate directly over this here.",
      "revId": "bfe77b018efee875e3ca4598f50cff933d7d590b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9b5df02_06c13e82",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 7
      },
      "lineNbr": 958,
      "author": {
        "id": 29946
      },
      "writtenOn": "2021-12-03T22:53:52Z",
      "side": 1,
      "message": "Yes, it\u0027s maybe possible to simplify the code with your proposal but whe dont have \"ref.object\" in this new implementation.\n\nWhat is the usage of line \"recent[key] \u003d ref.object\" ?",
      "parentUuid": "ac32d77f_18027d07",
      "revId": "bfe77b018efee875e3ca4598f50cff933d7d590b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae780bfc_1024473a",
        "filename": "zuul/merger/merger.py",
        "patchSetId": 7
      },
      "lineNbr": 958,
      "author": {
        "id": 16068
      },
      "writtenOn": "2022-02-24T20:46:03Z",
      "side": 1,
      "message": "It\u0027s created in mergeChanges [1]. And as far as I can see it\u0027s only used in [2] where we gather the hexsha from the commit object [2]. So with the simplification we could just put the sha into recent and remove the \u0027.hexsha\u0027 from [2].\n\n[1] https://opendev.org/zuul/zuul/src/branch/master/zuul/merger/merger.py#L1093\n[2] https://opendev.org/zuul/zuul/src/branch/master/zuul/merger/merger.py#L1138",
      "parentUuid": "f9b5df02_06c13e82",
      "revId": "bfe77b018efee875e3ca4598f50cff933d7d590b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}