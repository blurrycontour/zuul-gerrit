{
  "comments": [
    {
      "key": {
        "uuid": "fa1b9901_9498c7c1",
        "filename": "zuul/cmd/server.py",
        "patchSetId": 35
      },
      "lineNbr": 67,
      "author": {
        "id": 15215
      },
      "writtenOn": "2015-08-20T14:40:06Z",
      "side": 1,
      "message": "This calls the connection\u0027s onLoad() without calling onStop() before. Is the onLoad() function expected to be idempotent and possibly do some cleanup itself if needed? Or would you consider to call the onStop() before the onLoad() in the scheduler explicitly in case of reconfiguration?",
      "revId": "bb076e6e512fd6a1604050869eb475007cb0a910",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_9cdefe0f",
        "filename": "zuul/cmd/server.py",
        "patchSetId": 35
      },
      "lineNbr": 67,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-09-15T23:05:23Z",
      "side": 1,
      "message": "Good catch. You should -1 the patch on these kind of things so that I\u0027m more likely to notice sooner!",
      "parentUuid": "fa1b9901_9498c7c1",
      "revId": "bb076e6e512fd6a1604050869eb475007cb0a910",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da20952f_028d0b2a",
        "filename": "zuul/scheduler.py",
        "patchSetId": 35
      },
      "lineNbr": 901,
      "author": {
        "id": 15215
      },
      "writtenOn": "2015-09-08T12:17:43Z",
      "side": 1,
      "message": "When working on the github-integration, I\u0027ve found a glitch here.\n\nWhen a pipeline has a different source than event which is being handled, getting the change referenced by event from that source might fail, or yield weird results (eg. due to trying to get the same change ID from different gerrit instances).\n\nI\u0027m not sure where exactly is a check that the event matches for the pipeline-project combination, so I\u0027ve tried to solve this naively by adding here:\nif project not in pipeline.getProjects():\n    continue\n\nThis still won\u0027t solve configuration where one project is be configured in several pipelines with different sources. Thinking of that, such configuration most likely does not have a real world use case, so it should be forbidden.",
      "revId": "bb076e6e512fd6a1604050869eb475007cb0a910",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}