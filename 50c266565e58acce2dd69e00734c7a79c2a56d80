{
  "comments": [
    {
      "key": {
        "uuid": "c3ea5274_92b2ad1a",
        "filename": "tests/fixtures/config/circular-dependencies/git/common-config/zuul.yaml",
        "patchSetId": 50
      },
      "lineNbr": 30,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-26T22:45:56Z",
      "side": 1,
      "message": "Why is this pipeline here?  (And gate too?)\n\nThey really clutter up the test output.  I find it helpful to read the logs from test runs to understand what zuul is doing and make sure that it\u0027s behaving as expected (and not doing something that we won\u0027t catch just from test assertions).  But all the extra queue messages from these pipelines make it pretty hard to read.",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3769e919_42d8279d",
        "filename": "tests/fixtures/config/circular-dependencies/git/common-config/zuul.yaml",
        "patchSetId": 50
      },
      "lineNbr": 30,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-03-01T07:01:32Z",
      "side": 1,
      "message": "I think the reason for adding those pipelines was to test a certain edge case. However, I don\u0027t remember the details anymore and I also can\u0027t find a related test case. Given that the tests are still passing w/o them in https://review.opendev.org/c/zuul/zuul/+/777843/ I think it makes sense to remove them.",
      "parentUuid": "c3ea5274_92b2ad1a",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3945348_4e1b03c5",
        "filename": "tests/fixtures/config/circular-dependencies/git/common-config/zuul.yaml",
        "patchSetId": 50
      },
      "lineNbr": 30,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-03-01T16:02:17Z",
      "side": 1,
      "message": "Ack, thanks!",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf243867_006ba327",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 50
      },
      "lineNbr": 434,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-26T22:45:56Z",
      "side": 1,
      "message": "On ps29 we agreed to support changes behind, but in ps 36 this was added with no followup comment on the review.  It would be helpful to reply to old comments if you change your mind.\n\nI have implemented the algorithm I suggested in ps29 and will upload it as a followup.",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0f9e175_b4d9e063",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 50
      },
      "lineNbr": 434,
      "author": {
        "id": 27582
      },
      "writtenOn": "2021-03-01T07:01:32Z",
      "side": 1,
      "message": "Thanks for taking care of that. Looking at the diff between ps29 and ps30 I think I was under the impression that this could be solved w/o any additional logic (I was obviously wrong).",
      "parentUuid": "cf243867_006ba327",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79b9bd39_afb1eb3c",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 50
      },
      "lineNbr": 434,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-03-01T16:02:17Z",
      "side": 1,
      "message": "Ack.",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56d0cef0_609e30e1",
        "filename": "zuul/model.py",
        "patchSetId": 50
      },
      "lineNbr": 4136,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-26T22:45:56Z",
      "side": 1,
      "message": "Nit: maybe consider a 2 line version of this?  Any of the ways to write this in 2 lines would more closely match the predominant style and conserve vertical space (if we did the whole method like this, it would grow from 15 to 26 lines).",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d98e783d_22e6869d",
        "filename": "zuul/model.py",
        "patchSetId": 50
      },
      "lineNbr": 4136,
      "author": {
        "id": 27952
      },
      "writtenOn": "2021-03-01T06:43:11Z",
      "side": 1,
      "message": "To be honest I find this formatting much more readable than the 2 line version as you can better differentiate between the if condition and the body of the statement. In the 2 line version you always have to search for the end of the if condition \"):\" to see where the body line starts. I\u0027d also find this method much more readable if it would take 26 instead of 15 lines and I don\u0027t see the point in saving lines of code in such cases.",
      "parentUuid": "56d0cef0_609e30e1",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dbe36bf_e8d967e6",
        "filename": "zuul/model.py",
        "patchSetId": 50
      },
      "lineNbr": 4136,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-03-01T16:02:17Z",
      "side": 1,
      "message": "It looks like we disagree on this.  I will say that from my pov, it\u0027s important not to waste vertical space (I don\u0027t mean never add an extra line, vertical space can be really useful), but excess use of vertical space means I have to scroll more to read the code.\n\nThere is more than one way to write this in two lines.  Other Zuul contributors share your concern about scanning, and in Zuul they have chosen to adopt this practice:\n\nif (something\n        and something_else):\n   do_things()\n\nThe Zuul project has adopted pep8 as a style guide, and we do generally adhere to that (including the frequently ignored \"A Foolish Consistency is the Hobgoblin of Little Minds\" admonition; we\u0027re not super-strict).  Pep8 does discuss this issue in this section:\n\n  https://www.python.org/dev/peps/pep-0008/#indentation\n\nWhere it suggests several solutions (scan down to the 4th verbatim block).  The 4 line version is not one of them.\n\nPlease do consider adopting that form of the 2 line version.  It is used by your colleagues already, I think it may address your concerns while also mitigating mine, so it may be a good compromise.",
      "revId": "50c266565e58acce2dd69e00734c7a79c2a56d80",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}