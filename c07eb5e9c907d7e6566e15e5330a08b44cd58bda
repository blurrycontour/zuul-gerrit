{
  "comments": [
    {
      "key": {
        "uuid": "1a1ced50_f3254ac2",
        "filename": ".zuul.yaml",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-03-17T22:17:36Z",
      "side": 1,
      "message": "Should this have /workspace on the end?",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_9b714de3",
        "filename": ".zuul.yaml",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-03-21T00:17:19Z",
      "side": 1,
      "message": "What drives the decision of what path to put in here? Is _this_ the decision point, that doesn\u0027t rely on anything else pre-existing?",
      "parentUuid": "1a1ced50_f3254ac2",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_27965b93",
        "filename": ".zuul.yaml",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-03-21T16:08:12Z",
      "side": 1,
      "message": "maybe? with zuulv3, do we really need a workspace subdirectory or can we live using /home/zuul? I can add it back, but was trying to save some char length.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_9b486d89",
        "filename": "playbooks/base-pre.yaml",
        "patchSetId": 8
      },
      "lineNbr": 3,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-03-21T00:17:19Z",
      "side": 1,
      "message": "It would seem more natural to scope this variable down at the role application. Even though this play is a single role, it is still a better practice to scope it down to the role itself rather than the entire play. Since it seems the attempt is to keep the variable only available in the role itself.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_d3404e59",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-03-17T22:17:36Z",
      "side": 1,
      "message": "Why not just use \"zuul_workspace_root\" here?  That seems sufficiently unique considering the expected scope of this role.  Reduces some extra plumbing and avoids an extra-long variable name.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_6e1251b6",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-03-17T22:41:18Z",
      "side": 1,
      "message": "Let me preface, as this is completely personal opinion and something I\u0027ve wanted to at-least get into some sort of design document for playbook / roles.\n\nI have a strong desire to implement / encore some sort of variable scoping for our roles.  Specifically, a role should only access local variables itself.  I know there is nothing stopping you to do this in ansible today (and more something specific to how puppet does variables) but I see it as a good way to implement some sort of interface for roles. It also should help protect us from spaghetti dependencies with roles.\n\nFor me, I\u0027ve been writing role variables with the following in mind, \u003crole name\u003e_\u003cvariable name\u003e. I the case here, prepare_workspace is the role, workspace_root the local variable.  This was part of my motivation at rename the role to bootstrap, so it didn\u0027t look weird.\n\nAdditionally, this patchset is a little bad because it doesn\u0027t completely follow what I just typed in the run-cover role, since it is accessing zuul_workspace_root directly.\n\nI can hopefully better demonstrate it with some existing code:\n\n  http://git.openstack.org/cgit/openstack/ansible-role-shade/tree/defaults/main.yaml\n  http://git.openstack.org/cgit/openstack/windmill/tree/playbooks/group_vars/nodepool-launcher.yaml\n\nPerhaps I am being a little paranoid, or making additional work, but I am concerned about how easier it is to group everything into a global vars.  Especially if every get to the point of separate repos for ansible roles.",
      "parentUuid": "1a1ced50_d3404e59",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_ae444974",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-03-17T22:56:49Z",
      "side": 1,
      "message": "I think that\u0027s reasonable.  The goal is to make things more comprehensible.  Like most strict rules, there may be some situations where it results in the opposite, and I think that\u0027s what we\u0027re seeing here.  \"prepare_workspace_workspace_root\" is very confusing, and in order to make it less confusing, we considered changing the name of the role -- however, that made that *role* more confusing.  That\u0027s why I think this merits re-examining the rule to see if it\u0027s a good fit here.\n\nI think the workspace root is going to be used by *a lot* of roles, and I think passing it around to each of them is going to make for a lot of boilerplate and will turn people off from wanting to write jobs.  That\u0027s why my preference is to just accept that this one should be global.\n\nOne of the things I\u0027m sure we both would like to avoid, however, is something like this leaking into non-zuul-specific playbook content.  For instance, if a devstack deployment script directly referenced zuul_workspace_root, that would be unfortunate, because while it may *want* a working directory, there\u0027s nothing zuul-specific about it, and that\u0027s definitely a case where I agree we should have a \"devstack_workspace_root: {{zuul_workspace_root}}\" variable definition.\n\nI\u0027m very sympathetic to that line of thinking, and if you and others feel strongly that we need to explicitly demarcate all of the role variables, maybe we could at least make it a bit cleaner here with a different name like \"prepare_workspace_root\".  It\u0027s also worth keeping in mind that we can write:\n  roles:\n    - role: prepare-workspace\n      root: {{zuul_workspace_root}\nif we wanted to shorten it further.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_50bed4d4",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 7191
      },
      "writtenOn": "2017-03-20T22:45:10Z",
      "side": 1,
      "message": "I feel like i\u0027m agreeing with both of you.\n\nI always try and write role variables as \u003crole_name\u003e_\u003cvariable_name\u003e as I find it is at least keeps the variable namespace somewhat isolated. \n\nWhenever there are variables that apply to multiple roles i have a \u003cglobal_name\u003e_\u003cvariable_name\u003e that i then patch through to the role. Depending on how you re-use the role it can be done from the playback or just a big vars file, personally i prefer it in the playbook.\n\nI prefer this split because i think it makes the roles reusable. The question here is whether reusability is something we care about given how tied together all these roles are and that we want to provide users with only a global set of variables to care about.",
      "parentUuid": "1a1ced50_ae444974",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_9bba2d6d",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-03-20T23:45:03Z",
      "side": 1,
      "message": "My personal feeling is that we should follow the practices of the Ansible community. I\u0027ve not looked outside the walls of Ursula much, but it seems to me that a global zuul_workspace variable is fine for zuul\u0027s own roles, and then anything else should accept paths as role parameters.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_56beccd4",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-03-21T00:17:19Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion on whether or not to namespace the variables. I guess it depends on who the intended re-users of the roles. If they\u0027re only being used by zuul developers to test zuul itself, then we could easily define a global set of variables to use and depend on. If these roles are going to be usable outside of zuul, by maybe consumers of zuul, then it would be more appropriate to namespace, as we do not know how end users will combine these roles, and staking claim on global namespaces would be rude.\n\nAll that said, the awkwardness here is \"workspace_workspace\", which is what caught my eye immediately. I do agree renaming the role could help with this, such as \"workspace_bootstrap\" as the role name. However looking at the role itself, it\u0027s doing more than just ensuring that the workspace directory exists, it\u0027s also launching a daemon, so maybe the definition of \"workspace\" means the entire environment in which work happens, and then we have a \"workdir\" which is the directory within the workspace that is used to stage files and such. So, if we used \"workdir_root\" instead of \"workspace_root\", (or just simply \"workdir\" we could leave the role name as it is, and then this variable comes \"prepare_workspace_workdir_root\" (or \"prepare_workspace_workdir\", which avoids the awkward name repetition.\n\nAm I correct that \"workspace\" refers more to the greater environment, and less than the specific directory path?",
      "parentUuid": "1a1ced50_9bba2d6d",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_e77fe363",
        "filename": "playbooks/roles/prepare-workspace/defaults/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 2,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-03-21T16:08:12Z",
      "side": 1,
      "message": "Right, workspace is really our base directory jobs are configured to use. In this case, it is /home/zuul.  We would make this prepare_workspace_rootdir/basedir/workdir moving forward.  The good news it looks like, the people do follow \u003crole name\u003e_\u003clocal var\u003e syntax.\n\nI also like the idea that jeblair mentioned about using role paramaters to be more specific in what variables we are passing.\n\nFor now, to keep things moving foward. zuul_workspace_root (global var) seems to be fine with everybody, so I\u0027ve uploaded PS9 to do that.\n\nI would like to establish some sort of style guide for zuul stdlib (even openstack-infra), maybe the next step forward is a spec / doc where we can document some of these items.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_d678fc2d",
        "filename": "playbooks/roles/run-bindep/tasks/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 5,
      "author": {
        "id": 6589
      },
      "writtenOn": "2017-03-21T00:17:19Z",
      "side": 1,
      "message": "As you\u0027ve pointed out, you tried to make prepare-workspace have a scoped variable, but now you\u0027re using the global variable here. It would make more sense if you stayed consistent and either scoped the global variable into role specific ones at the play level (and thus not depend on a site-specific global variable in a role) or give up that effort and simply rely on the global variable name throughout all these roles.\n\nSame comment goes to the other roles touched by this change.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ced50_07995fc4",
        "filename": "playbooks/roles/run-bindep/tasks/main.yaml",
        "patchSetId": 8
      },
      "lineNbr": 5,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-03-21T16:08:12Z",
      "side": 1,
      "message": "Agreed, I never got around to updating this.  But now it is consider with above.",
      "revId": "c07eb5e9c907d7e6566e15e5330a08b44cd58bda",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}