{
  "comments": [
    {
      "key": {
        "uuid": "3f65232a_b59413ea",
        "filename": "zuul/zk/cache.py",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "While reviewing and jumping back and forth between files I was always confused that this is in zk/cache.py and not in zk/work.py",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_54b653fc",
        "filename": "zuul/zk/cache.py",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-25T20:32:41Z",
      "side": 1,
      "message": "Because it is the cache entity. I was trying to avoid too big files from the start.",
      "parentUuid": "3f65232a_b59413ea",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_bf7874f8",
        "filename": "zuul/zk/cache.py",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "nit: Block can be simplified to:\n\n    try:\n        return WorkState[self.content[\u0027state\u0027]]\n    except KeyError:\n        return WorkState.UNKNOWN",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_34bbd7e2",
        "filename": "zuul/zk/cache.py",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-25T20:32:41Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3f65232a_bf7874f8",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_350da33e",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "nit: -\u003e str",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_27b0cbf4",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_350da33e",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_951e376e",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "Just wondering if some kind of enum would make more sense than using chars?",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_87943f46",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Was thinking about it too. But I am no sure if this function will survive till it this gets merged. It is used only in logs which are definitely too chatty and will be most probably removed at some point.",
      "parentUuid": "3f65232a_951e376e",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_d80d8638",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "nit: this could be an @abstractmethod",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_67912353",
        "filename": "zuul/zk/client.py",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_d80d8638",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_7f809c8c",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "Is there a reason for keeping a list of registered zones? I don\u0027t see where this is necessary, but maybe that\u0027s needed in one of the follow up patches?\n\nFor the use-case of registering all zones this could simply be a flag (e.g. self._register_all_zones \u003d False)",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_e73253a7",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3f65232a_7f809c8c",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_e20d3338",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "Not sure if it\u0027s a good idea to reach into the dict to pull out the uuid here. I\u0027m wondering if we should instead have the uuid (and maybe also other attributes that are needed for the ZooKeeperWorkBase) as a mandatory attribute of the WorkItem? This way we don\u0027t have to care e.g. about missing keys because the API is clear.",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_47286733",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "This can be done. The WorkItem is constructed in ZooKeeperTreeCacheClient#_treeCacheListener/_createCacheValue. Lates there we will have to reach into the deserialized dict.",
      "parentUuid": "3f65232a_e20d3338",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_824a7f52",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "Related to my comment above: this seems to be the only place we use the list of registered zones, but the actual registration below is done in any case.",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_8721df50",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3f65232a_824a7f52",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_82bf1ffa",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 306,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "nit: maybe the WorkItem can have a property that returns the ordering.\n\n    @property\n    def priority(self):\n        return self.path.rsplit(\"/\", 1)[-1]\n\nBtw. any reason for reversing the list of split parts instead of just returning the last element?",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_671e430d",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 306,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3f65232a_82bf1ffa",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_c25f57e3",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 316,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "nit: you could avoid looping over the cache and the \"if path\" check when the string is empty by having a guard clause at the top:\n\n    if not path:\n        return None\n\n    for cache in self._cache.values():\n        cached \u003d cache[path]\n        ...",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_a7185b1d",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 316,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_c25f57e3",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_2270cb72",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T10:38:59Z",
      "side": 1,
      "message": "nit: you could avoid creating a throw-away list by extending the result\n\n    result.extend(cache.values())",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_07d30f3a",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_2270cb72",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_d539cf41",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 540,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "This can be simplified to:\n\n    for path in list(self._to_delete):\n        self.remove(path)\n\nas the remove() method is taking care of removing it from the _to_delete list.",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_e7d7f322",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 540,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_d539cf41",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_d5126fb1",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 546,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "This can also be simplified to:\n\n    for path, _ in self.inState(WorkState.REMOVED):\n        self.remove(path)",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_47dd0741",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 546,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_d5126fb1",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_95675726",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "Do we expect the caller to handle the BadVersionError or do we need to deal with it here?",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_27e28b04",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Good question. If we deal with it here we need to think about max-retries/timeout probably.",
      "parentUuid": "3f65232a_95675726",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_5545bfb2",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 708,
      "author": {
        "id": 27582
      },
      "writtenOn": "2020-10-23T12:44:55Z",
      "side": 1,
      "message": "To be consistent I think we should also remove it from the _to_delete list here.",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f65232a_47ab4788",
        "filename": "zuul/zk/work.py",
        "patchSetId": 4
      },
      "lineNbr": 708,
      "author": {
        "id": 30637
      },
      "writtenOn": "2020-10-26T04:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f65232a_5545bfb2",
      "revId": "594ef06c5074f184b3a2e27ab7509ec97dbb4be9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}