{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_1749f08b",
        "filename": "tests/base.py",
        "patchSetId": 2
      },
      "lineNbr": 886,
      "author": {
        "id": 4146
      },
      "writtenOn": "2020-02-06T23:27:57Z",
      "side": 1,
      "message": "Despite calling super() on the _run() method I\u0027m not sure this will exercise the inputs to _run or the outputs (the callbacks) because there are no projects configured on this connection to poll.\n\nThe new test cases must be triggered off of gerrit stream events type events instead?",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_c96c20d1",
        "filename": "tests/base.py",
        "patchSetId": 2
      },
      "lineNbr": 886,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-06T23:35:19Z",
      "side": 1,
      "message": "See below comments; also, in tests, we don\u0027t automatically submit stream events, they have to be manually injected (so we have better control).  Since the new test doesn\u0027t call any \"addEvent\" methods, we can assume that shouldn\u0027t be happening here.",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_69a88cd9",
        "filename": "tests/base.py",
        "patchSetId": 2
      },
      "lineNbr": 886,
      "author": {
        "id": 4146
      },
      "writtenOn": "2020-02-06T23:37:15Z",
      "side": 1,
      "message": "For any followup reviewers. The bit of info I was missing is that self.connection.projects in the GitWatcher class is populated from the zuul tenant config projects list. We don\u0027t need to add any new config.",
      "parentUuid": "3fa7e38b_c96c20d1",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_c953c014",
        "filename": "tests/unit/test_gerrit.py",
        "patchSetId": 2
      },
      "lineNbr": 382,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-06T23:33:31Z",
      "side": 1,
      "message": "This points us to here:\n\nhttps://opendev.org/zuul/zuul/src/branch/master/tests/fixtures/zuul-gerrit-no-stream.conf#L26\n\nWhich says this gerrit doesn\u0027t have stream-events.",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_771e2476",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 4146
      },
      "writtenOn": "2020-02-06T23:27:57Z",
      "side": 1,
      "message": "Should this be user configurable?",
      "range": {
        "startLine": 482,
        "startChar": 32,
        "endLine": 482,
        "endChar": 34
      },
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_693accc5",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-06T23:33:31Z",
      "side": 1,
      "message": "Probably eventually.",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_8935c8d5",
        "filename": "zuul/driver/gerrit/gerritconnection.py",
        "patchSetId": 2
      },
      "lineNbr": 1417,
      "author": {
        "id": 1
      },
      "writtenOn": "2020-02-06T23:33:31Z",
      "side": 1,
      "message": "If it doesn\u0027t have stream events, it starts a ref watcher, which watches every project on the connection.  In the test setup, every project in a simple_layout() is added to the tenant config, and therefore to the connection.",
      "revId": "9be39dc67dc2c2be3cf517664779e306105f888b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}