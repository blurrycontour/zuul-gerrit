{
  "comments": [
    {
      "key": {
        "uuid": "7faddb67_ad0f5335",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 616,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-07-12T22:23:05Z",
      "side": 1,
      "message": "Will this cause confusion below. Specifically around the code I Thought made other code redundant? line 731 assumes a None result on merge failures which won\u0027t happen anymore?",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_986bb7b5",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 616,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-07-12T22:38:36Z",
      "side": 1,
      "message": "Line 735 doesn\u0027t assume a None result, and it is not redundant (unlike line 737 which is).  This lets us have a layout on a non-live item with a merge conflict, which seems nice because of the consistency.  As far as what happens next, this is very similar to the case with config errors, except unlike in that case, it is not possible for a child change to merge cleanly if its parent does not.  That means that if B-\u003eA, and A is unable to merge, then B will also be unable to merge.  So the end result is the same: we won\u0027t run jobs for B.\n\nI think we could optimize this and make it behave in the same way as the config error case, because the end result is going to be the same.  But somehow, this seems the slightly more \"correct\" way, only because we\u0027re setting the layout on the item since we can.  That might make a difference in what we report in, say, a third change (C) which has a config error and depends on B.  As written, we should report the config error, but if we make this optimization, we won\u0027t have the right data and will probably just report that a parent had a merge failure.\n\nThat\u0027s how I see it, but I hold these beliefs weakly and can probably be swayed easily.  :)",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_1a7014dc",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 704,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-07-15T04:25:56Z",
      "side": 1,
      "message": "This is not only about config changes but also to make file filters work on pull requests with \u003e300 files (this is the case when we don\u0027t know the file list upfront). If this PR is on a project without config this will probably break because tpc evaluates to false.",
      "range": {
        "startLine": 698,
        "startChar": 0,
        "endLine": 704,
        "endChar": 29
      },
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_8964b923",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 704,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-07-15T14:35:59Z",
      "side": 1,
      "message": "tpc has a value for every project that appears in the tenant config (even if we don\u0027t load any config from it).  The current code assumes that the project of every item this function is run on appears in the config (see line 692 of the old side) and that is true because this was only run on live changes (and a live change must be for a project in the config).  However, we now want to run this on some non-live changes, so we need to check whether their projects are in the tenant (if they aren\u0027t, we don\u0027t need to do any merges since they can\u0027t have config or match file matchers).",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_9485b05c",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 704,
      "author": {
        "id": 16068
      },
      "writtenOn": "2019-07-15T14:43:03Z",
      "side": 1,
      "message": "oh right, that makes sense",
      "parentUuid": "7faddb67_8964b923",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_ed9c6b0f",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 738,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-07-12T21:57:50Z",
      "side": 1,
      "message": "Is this config_errors check redundant with the return False on line 731 above?",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_6da95b22",
        "filename": "zuul/manager/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 738,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-07-12T22:03:05Z",
      "side": 1,
      "message": "I believe so, but I left it here for belts and suspenders (in case of a future refactor in getLayout that changed that assumption).",
      "revId": "de1a8372a8049fd2ded867ed61bfdc14dd506e45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}