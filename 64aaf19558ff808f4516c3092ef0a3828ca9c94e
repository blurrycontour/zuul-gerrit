{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b50ef2d0_51811708",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-01-11T09:14:23Z",
      "side": 1,
      "message": "The decompression needs to be done here on the node data and not on the concatenated byte string below.\n\n            zk_size \u003d 0\n            for shard in shards:\n                with open(os.path.join(fullpath, shard, \u0027ZKDATA\u0027), \u0027rb\u0027) as f:\n                    compressed_data \u003d f.read()\n                    data +\u003d zlib.decompress(compressed_data)\n                    zk_size \u003d len(compressed_data)\n            return Data(path, data, zk_size\u003dzk_size)",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77c31e5c_b48a7c1d",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-01-11T14:50:22Z",
      "side": 1,
      "message": "There is a small bug in the above snipped related to the zk_size. This should be:\n\n            zk_size \u003d 0\n            for shard in shards:\n                with open(os.path.join(fullpath, shard, \u0027ZKDATA\u0027), \u0027rb\u0027) as f:\n                    compressed_data \u003d f.read()\n                    data +\u003d zlib.decompress(compressed_data)\n                    zk_size +\u003d len(compressed_data)\n            return Data(path, data, zk_size\u003dzk_size)",
      "parentUuid": "b50ef2d0_51811708",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf3d1f19_bd046dff",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-01-11T18:06:39Z",
      "side": 1,
      "message": "Yes and yes.",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7152011e_aa733332",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-01-11T09:14:23Z",
      "side": 1,
      "message": "Shouldn\u0027t we use the zk size for the attribute size if the `use_zk_size` flag is set? Same question for the other summary items below that also have \u0027attributes\u0027.",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09616435_1c285f41",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 27582
      },
      "writtenOn": "2022-01-11T09:14:23Z",
      "side": 1,
      "message": "I think we should not add the size of the children to the size of the parent as this is already reflected in the tree size. But then we need to include the attribute sizes in the tree_size/zk_tree_size properties.",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "811fd878_3cf734f1",
        "filename": "tools/zk-analyze.py",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-01-11T18:06:39Z",
      "side": 1,
      "message": "Yes and yes.",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "518234fa_6966c56e",
        "filename": "tools/zk-dump.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 9311
      },
      "writtenOn": "2022-01-10T20:36:57Z",
      "side": 1,
      "message": "could we try to decompress so that the data can be read directly?",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d6093e1_f7a7538d",
        "filename": "tools/zk-dump.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-01-10T21:42:32Z",
      "side": 1,
      "message": "Good idea, but we should either make that an option, or another script.  That way we can still use this as a way to debug exactly what we have in ZK (basically, if something goes wrong, run this to dump the data, then reset ZK to get production going, then debug with this).",
      "revId": "64aaf19558ff808f4516c3092ef0a3828ca9c94e",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}